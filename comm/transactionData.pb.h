// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transactionData.proto

#ifndef PROTOBUF_transactionData_2eproto__INCLUDED
#define PROTOBUF_transactionData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comm {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_transactionData_2eproto();
void protobuf_InitDefaults_transactionData_2eproto();
void protobuf_AssignDesc_transactionData_2eproto();
void protobuf_ShutdownFile_transactionData_2eproto();

class TransactionData;

// ===================================================================

class TransactionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.TransactionData) */ {
 public:
  TransactionData();
  virtual ~TransactionData();

  TransactionData(const TransactionData& from);

  inline TransactionData& operator=(const TransactionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionData& default_instance();

  static const TransactionData* internal_default_instance();

  void Swap(TransactionData* other);

  // implements Message ----------------------------------------------

  inline TransactionData* New() const { return New(NULL); }

  TransactionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionData& from);
  void MergeFrom(const TransactionData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionData* other);
  void UnsafeMergeFrom(const TransactionData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string WindCode = 1;
  bool has_windcode() const;
  void clear_windcode();
  static const int kWindCodeFieldNumber = 1;
  const ::std::string& windcode() const;
  void set_windcode(const ::std::string& value);
  void set_windcode(const char* value);
  void set_windcode(const char* value, size_t size);
  ::std::string* mutable_windcode();
  ::std::string* release_windcode();
  void set_allocated_windcode(::std::string* windcode);

  // required string Code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // required int32 ActionDay = 3;
  bool has_actionday() const;
  void clear_actionday();
  static const int kActionDayFieldNumber = 3;
  ::google::protobuf::int32 actionday() const;
  void set_actionday(::google::protobuf::int32 value);

  // required int32 Time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 Index = 5;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 5;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // required int32 Price = 6;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 6;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // required int32 Volume = 7;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 7;
  ::google::protobuf::int32 volume() const;
  void set_volume(::google::protobuf::int32 value);

  // required int32 Turnover = 8;
  bool has_turnover() const;
  void clear_turnover();
  static const int kTurnoverFieldNumber = 8;
  ::google::protobuf::int32 turnover() const;
  void set_turnover(::google::protobuf::int32 value);

  // required int32 BSFlag = 9;
  bool has_bsflag() const;
  void clear_bsflag();
  static const int kBSFlagFieldNumber = 9;
  ::google::protobuf::int32 bsflag() const;
  void set_bsflag(::google::protobuf::int32 value);

  // required string OrderKind = 10;
  bool has_orderkind() const;
  void clear_orderkind();
  static const int kOrderKindFieldNumber = 10;
  const ::std::string& orderkind() const;
  void set_orderkind(const ::std::string& value);
  void set_orderkind(const char* value);
  void set_orderkind(const char* value, size_t size);
  ::std::string* mutable_orderkind();
  ::std::string* release_orderkind();
  void set_allocated_orderkind(::std::string* orderkind);

  // required string FunctionCode = 11;
  bool has_functioncode() const;
  void clear_functioncode();
  static const int kFunctionCodeFieldNumber = 11;
  const ::std::string& functioncode() const;
  void set_functioncode(const ::std::string& value);
  void set_functioncode(const char* value);
  void set_functioncode(const char* value, size_t size);
  ::std::string* mutable_functioncode();
  ::std::string* release_functioncode();
  void set_allocated_functioncode(::std::string* functioncode);

  // required int32 AskOrder = 12;
  bool has_askorder() const;
  void clear_askorder();
  static const int kAskOrderFieldNumber = 12;
  ::google::protobuf::int32 askorder() const;
  void set_askorder(::google::protobuf::int32 value);

  // required int32 BidOrder = 13;
  bool has_bidorder() const;
  void clear_bidorder();
  static const int kBidOrderFieldNumber = 13;
  ::google::protobuf::int32 bidorder() const;
  void set_bidorder(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.TransactionData)
 private:
  inline void set_has_windcode();
  inline void clear_has_windcode();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_actionday();
  inline void clear_has_actionday();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_turnover();
  inline void clear_has_turnover();
  inline void set_has_bsflag();
  inline void clear_has_bsflag();
  inline void set_has_orderkind();
  inline void clear_has_orderkind();
  inline void set_has_functioncode();
  inline void clear_has_functioncode();
  inline void set_has_askorder();
  inline void clear_has_askorder();
  inline void set_has_bidorder();
  inline void clear_has_bidorder();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr windcode_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr orderkind_;
  ::google::protobuf::internal::ArenaStringPtr functioncode_;
  ::google::protobuf::int32 actionday_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 volume_;
  ::google::protobuf::int32 turnover_;
  ::google::protobuf::int32 bsflag_;
  ::google::protobuf::int32 askorder_;
  ::google::protobuf::int32 bidorder_;
  friend void  protobuf_InitDefaults_transactionData_2eproto_impl();
  friend void  protobuf_AddDesc_transactionData_2eproto_impl();
  friend void protobuf_AssignDesc_transactionData_2eproto();
  friend void protobuf_ShutdownFile_transactionData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TransactionData> TransactionData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TransactionData

// required string WindCode = 1;
inline bool TransactionData::has_windcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionData::set_has_windcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionData::clear_has_windcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionData::clear_windcode() {
  windcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_windcode();
}
inline const ::std::string& TransactionData::windcode() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.WindCode)
  return windcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_windcode(const ::std::string& value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.TransactionData.WindCode)
}
inline void TransactionData::set_windcode(const char* value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.TransactionData.WindCode)
}
inline void TransactionData::set_windcode(const char* value, size_t size) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.TransactionData.WindCode)
}
inline ::std::string* TransactionData::mutable_windcode() {
  set_has_windcode();
  // @@protoc_insertion_point(field_mutable:comm.TransactionData.WindCode)
  return windcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionData::release_windcode() {
  // @@protoc_insertion_point(field_release:comm.TransactionData.WindCode)
  clear_has_windcode();
  return windcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_allocated_windcode(::std::string* windcode) {
  if (windcode != NULL) {
    set_has_windcode();
  } else {
    clear_has_windcode();
  }
  windcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), windcode);
  // @@protoc_insertion_point(field_set_allocated:comm.TransactionData.WindCode)
}

// required string Code = 2;
inline bool TransactionData::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionData::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionData::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& TransactionData::code() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.TransactionData.Code)
}
inline void TransactionData::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.TransactionData.Code)
}
inline void TransactionData::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.TransactionData.Code)
}
inline ::std::string* TransactionData::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:comm.TransactionData.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionData::release_code() {
  // @@protoc_insertion_point(field_release:comm.TransactionData.Code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:comm.TransactionData.Code)
}

// required int32 ActionDay = 3;
inline bool TransactionData::has_actionday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionData::set_has_actionday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionData::clear_has_actionday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionData::clear_actionday() {
  actionday_ = 0;
  clear_has_actionday();
}
inline ::google::protobuf::int32 TransactionData::actionday() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.ActionDay)
  return actionday_;
}
inline void TransactionData::set_actionday(::google::protobuf::int32 value) {
  set_has_actionday();
  actionday_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.ActionDay)
}

// required int32 Time = 4;
inline bool TransactionData::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionData::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionData::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 TransactionData::time() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Time)
  return time_;
}
inline void TransactionData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.Time)
}

// required int32 Index = 5;
inline bool TransactionData::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransactionData::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransactionData::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransactionData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 TransactionData::index() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Index)
  return index_;
}
inline void TransactionData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.Index)
}

// required int32 Price = 6;
inline bool TransactionData::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransactionData::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransactionData::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransactionData::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 TransactionData::price() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Price)
  return price_;
}
inline void TransactionData::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.Price)
}

// required int32 Volume = 7;
inline bool TransactionData::has_volume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TransactionData::set_has_volume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TransactionData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TransactionData::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
inline ::google::protobuf::int32 TransactionData::volume() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Volume)
  return volume_;
}
inline void TransactionData::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.Volume)
}

// required int32 Turnover = 8;
inline bool TransactionData::has_turnover() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TransactionData::set_has_turnover() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TransactionData::clear_has_turnover() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TransactionData::clear_turnover() {
  turnover_ = 0;
  clear_has_turnover();
}
inline ::google::protobuf::int32 TransactionData::turnover() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.Turnover)
  return turnover_;
}
inline void TransactionData::set_turnover(::google::protobuf::int32 value) {
  set_has_turnover();
  turnover_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.Turnover)
}

// required int32 BSFlag = 9;
inline bool TransactionData::has_bsflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TransactionData::set_has_bsflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TransactionData::clear_has_bsflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TransactionData::clear_bsflag() {
  bsflag_ = 0;
  clear_has_bsflag();
}
inline ::google::protobuf::int32 TransactionData::bsflag() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.BSFlag)
  return bsflag_;
}
inline void TransactionData::set_bsflag(::google::protobuf::int32 value) {
  set_has_bsflag();
  bsflag_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.BSFlag)
}

// required string OrderKind = 10;
inline bool TransactionData::has_orderkind() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TransactionData::set_has_orderkind() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TransactionData::clear_has_orderkind() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TransactionData::clear_orderkind() {
  orderkind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderkind();
}
inline const ::std::string& TransactionData::orderkind() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.OrderKind)
  return orderkind_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_orderkind(const ::std::string& value) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.TransactionData.OrderKind)
}
inline void TransactionData::set_orderkind(const char* value) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.TransactionData.OrderKind)
}
inline void TransactionData::set_orderkind(const char* value, size_t size) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.TransactionData.OrderKind)
}
inline ::std::string* TransactionData::mutable_orderkind() {
  set_has_orderkind();
  // @@protoc_insertion_point(field_mutable:comm.TransactionData.OrderKind)
  return orderkind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionData::release_orderkind() {
  // @@protoc_insertion_point(field_release:comm.TransactionData.OrderKind)
  clear_has_orderkind();
  return orderkind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_allocated_orderkind(::std::string* orderkind) {
  if (orderkind != NULL) {
    set_has_orderkind();
  } else {
    clear_has_orderkind();
  }
  orderkind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderkind);
  // @@protoc_insertion_point(field_set_allocated:comm.TransactionData.OrderKind)
}

// required string FunctionCode = 11;
inline bool TransactionData::has_functioncode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TransactionData::set_has_functioncode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TransactionData::clear_has_functioncode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TransactionData::clear_functioncode() {
  functioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_functioncode();
}
inline const ::std::string& TransactionData::functioncode() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.FunctionCode)
  return functioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_functioncode(const ::std::string& value) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.TransactionData.FunctionCode)
}
inline void TransactionData::set_functioncode(const char* value) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.TransactionData.FunctionCode)
}
inline void TransactionData::set_functioncode(const char* value, size_t size) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.TransactionData.FunctionCode)
}
inline ::std::string* TransactionData::mutable_functioncode() {
  set_has_functioncode();
  // @@protoc_insertion_point(field_mutable:comm.TransactionData.FunctionCode)
  return functioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionData::release_functioncode() {
  // @@protoc_insertion_point(field_release:comm.TransactionData.FunctionCode)
  clear_has_functioncode();
  return functioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionData::set_allocated_functioncode(::std::string* functioncode) {
  if (functioncode != NULL) {
    set_has_functioncode();
  } else {
    clear_has_functioncode();
  }
  functioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), functioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.TransactionData.FunctionCode)
}

// required int32 AskOrder = 12;
inline bool TransactionData::has_askorder() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TransactionData::set_has_askorder() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TransactionData::clear_has_askorder() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TransactionData::clear_askorder() {
  askorder_ = 0;
  clear_has_askorder();
}
inline ::google::protobuf::int32 TransactionData::askorder() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.AskOrder)
  return askorder_;
}
inline void TransactionData::set_askorder(::google::protobuf::int32 value) {
  set_has_askorder();
  askorder_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.AskOrder)
}

// required int32 BidOrder = 13;
inline bool TransactionData::has_bidorder() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TransactionData::set_has_bidorder() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TransactionData::clear_has_bidorder() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TransactionData::clear_bidorder() {
  bidorder_ = 0;
  clear_has_bidorder();
}
inline ::google::protobuf::int32 TransactionData::bidorder() const {
  // @@protoc_insertion_point(field_get:comm.TransactionData.BidOrder)
  return bidorder_;
}
inline void TransactionData::set_bidorder(::google::protobuf::int32 value) {
  set_has_bidorder();
  bidorder_ = value;
  // @@protoc_insertion_point(field_set:comm.TransactionData.BidOrder)
}

inline const TransactionData* TransactionData::internal_default_instance() {
  return &TransactionData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_transactionData_2eproto__INCLUDED
