// Code generated by protoc-gen-go.
// source: orderData.proto
// DO NOT EDIT!

/*
Package comm is a generated protocol buffer package.

It is generated from these files:
	orderData.proto

It has these top-level messages:
	OrderData
*/
package comm

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type OrderData struct {
	WindCode         *string `protobuf:"bytes,1,req" json:"WindCode,omitempty"`
	Code             *string `protobuf:"bytes,2,req" json:"Code,omitempty"`
	ActionDay        *int32  `protobuf:"varint,3,req" json:"ActionDay,omitempty"`
	Time             *int32  `protobuf:"varint,4,req" json:"Time,omitempty"`
	Order            *int32  `protobuf:"varint,5,req" json:"Order,omitempty"`
	Price            *int32  `protobuf:"varint,6,req" json:"Price,omitempty"`
	Volume           *int32  `protobuf:"varint,7,req" json:"Volume,omitempty"`
	OrderKind        *string `protobuf:"bytes,8,req" json:"OrderKind,omitempty"`
	FunctionCode     *string `protobuf:"bytes,9,req" json:"FunctionCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OrderData) Reset()         { *m = OrderData{} }
func (m *OrderData) String() string { return proto.CompactTextString(m) }
func (*OrderData) ProtoMessage()    {}

func (m *OrderData) GetWindCode() string {
	if m != nil && m.WindCode != nil {
		return *m.WindCode
	}
	return ""
}

func (m *OrderData) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *OrderData) GetActionDay() int32 {
	if m != nil && m.ActionDay != nil {
		return *m.ActionDay
	}
	return 0
}

func (m *OrderData) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *OrderData) GetOrder() int32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *OrderData) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *OrderData) GetVolume() int32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *OrderData) GetOrderKind() string {
	if m != nil && m.OrderKind != nil {
		return *m.OrderKind
	}
	return ""
}

func (m *OrderData) GetFunctionCode() string {
	if m != nil && m.FunctionCode != nil {
		return *m.FunctionCode
	}
	return ""
}

func init() {
}
