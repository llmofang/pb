// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderData.proto

package comm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderData struct {
	HTSCSecurityID       *string  `protobuf:"bytes,1,req,name=HTSCSecurityID" json:"HTSCSecurityID,omitempty"`
	MDDate               *int32   `protobuf:"varint,2,req,name=MDDate" json:"MDDate,omitempty"`
	MDTime               *int32   `protobuf:"varint,3,req,name=MDTime" json:"MDTime,omitempty"`
	SecurityIDSource     *int64   `protobuf:"varint,4,opt,name=securityIDSource" json:"securityIDSource,omitempty"`
	SecurityType         *int64   `protobuf:"varint,5,opt,name=securityType" json:"securityType,omitempty"`
	OrderIndex           *int64   `protobuf:"varint,6,opt,name=OrderIndex" json:"OrderIndex,omitempty"`
	OrderType            *int32   `protobuf:"varint,7,opt,name=OrderType" json:"OrderType,omitempty"`
	OrderPrice           *int64   `protobuf:"varint,8,opt,name=OrderPrice" json:"OrderPrice,omitempty"`
	OrderQty             *int64   `protobuf:"varint,9,opt,name=OrderQty" json:"OrderQty,omitempty"`
	OrderBSFlag          *int32   `protobuf:"varint,10,opt,name=OrderBSFlag" json:"OrderBSFlag,omitempty"`
	ChannelNo            *int32   `protobuf:"varint,11,opt,name=ChannelNo" json:"ChannelNo,omitempty"`
	ExchangeDate         *int32   `protobuf:"varint,12,opt,name=ExchangeDate" json:"ExchangeDate,omitempty"`
	ExchangeTime         *int32   `protobuf:"varint,13,opt,name=ExchangeTime" json:"ExchangeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderData) Reset()         { *m = OrderData{} }
func (m *OrderData) String() string { return proto.CompactTextString(m) }
func (*OrderData) ProtoMessage()    {}
func (*OrderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_390d9bdd57e2970d, []int{0}
}

func (m *OrderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderData.Unmarshal(m, b)
}
func (m *OrderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderData.Marshal(b, m, deterministic)
}
func (m *OrderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderData.Merge(m, src)
}
func (m *OrderData) XXX_Size() int {
	return xxx_messageInfo_OrderData.Size(m)
}
func (m *OrderData) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderData.DiscardUnknown(m)
}

var xxx_messageInfo_OrderData proto.InternalMessageInfo

func (m *OrderData) GetHTSCSecurityID() string {
	if m != nil && m.HTSCSecurityID != nil {
		return *m.HTSCSecurityID
	}
	return ""
}

func (m *OrderData) GetMDDate() int32 {
	if m != nil && m.MDDate != nil {
		return *m.MDDate
	}
	return 0
}

func (m *OrderData) GetMDTime() int32 {
	if m != nil && m.MDTime != nil {
		return *m.MDTime
	}
	return 0
}

func (m *OrderData) GetSecurityIDSource() int64 {
	if m != nil && m.SecurityIDSource != nil {
		return *m.SecurityIDSource
	}
	return 0
}

func (m *OrderData) GetSecurityType() int64 {
	if m != nil && m.SecurityType != nil {
		return *m.SecurityType
	}
	return 0
}

func (m *OrderData) GetOrderIndex() int64 {
	if m != nil && m.OrderIndex != nil {
		return *m.OrderIndex
	}
	return 0
}

func (m *OrderData) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *OrderData) GetOrderPrice() int64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *OrderData) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *OrderData) GetOrderBSFlag() int32 {
	if m != nil && m.OrderBSFlag != nil {
		return *m.OrderBSFlag
	}
	return 0
}

func (m *OrderData) GetChannelNo() int32 {
	if m != nil && m.ChannelNo != nil {
		return *m.ChannelNo
	}
	return 0
}

func (m *OrderData) GetExchangeDate() int32 {
	if m != nil && m.ExchangeDate != nil {
		return *m.ExchangeDate
	}
	return 0
}

func (m *OrderData) GetExchangeTime() int32 {
	if m != nil && m.ExchangeTime != nil {
		return *m.ExchangeTime
	}
	return 0
}

func init() {
	proto.RegisterType((*OrderData)(nil), "comm.OrderData")
}

func init() { proto.RegisterFile("orderData.proto", fileDescriptor_390d9bdd57e2970d) }

var fileDescriptor_390d9bdd57e2970d = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xdf, 0x4e, 0xb3, 0x40,
	0x10, 0xc5, 0x03, 0x94, 0x7e, 0x65, 0xda, 0x4f, 0xcd, 0x5e, 0x98, 0x89, 0x31, 0x66, 0xd3, 0x0b,
	0x43, 0xbc, 0xf0, 0x21, 0x2c, 0x1a, 0x7b, 0xe1, 0x3f, 0xe0, 0x05, 0x36, 0xdb, 0x49, 0x4b, 0x52,
	0xd8, 0x66, 0xdd, 0x26, 0xe5, 0xc1, 0x7c, 0x3f, 0xc3, 0xb4, 0x20, 0xe8, 0xdd, 0x9e, 0xdf, 0x9c,
	0x33, 0xb3, 0x33, 0x70, 0x6e, 0xec, 0x8a, 0x6c, 0xa2, 0x9c, 0xba, 0xdf, 0x59, 0xe3, 0x8c, 0x18,
	0x69, 0x53, 0x96, 0xf3, 0xaf, 0x00, 0xa2, 0xb7, 0xb6, 0x22, 0x6e, 0xe1, 0xec, 0x39, 0xcf, 0x16,
	0x19, 0xe9, 0xbd, 0x2d, 0x5c, 0xbd, 0x4c, 0xd0, 0x93, 0x7e, 0x1c, 0xa5, 0xbf, 0xa8, 0xb8, 0x84,
	0xf1, 0x4b, 0x92, 0x28, 0x47, 0xe8, 0x4b, 0x3f, 0x0e, 0xd3, 0x93, 0x3a, 0xf2, 0xbc, 0x28, 0x09,
	0x83, 0x96, 0x37, 0x4a, 0xdc, 0xc1, 0xc5, 0x67, 0x97, 0xce, 0xcc, 0xde, 0x6a, 0xc2, 0x91, 0xf4,
	0xe2, 0x20, 0xfd, 0xc3, 0xc5, 0x1c, 0x66, 0x2d, 0xcb, 0xeb, 0x1d, 0x61, 0xc8, 0xbe, 0x01, 0x13,
	0x37, 0x00, 0xfc, 0xe9, 0x65, 0xb5, 0xa2, 0x03, 0x8e, 0xd9, 0xd1, 0x23, 0xe2, 0xfa, 0xb4, 0x14,
	0x37, 0xf8, 0x27, 0xbd, 0x38, 0x4c, 0x7f, 0x40, 0x97, 0x7e, 0xb7, 0x85, 0x26, 0x9c, 0xf4, 0xd2,
	0x4c, 0xc4, 0x15, 0x4c, 0x58, 0x7d, 0xb8, 0x1a, 0x23, 0xae, 0x76, 0x5a, 0x48, 0x98, 0xf2, 0xfb,
	0x21, 0x7b, 0xda, 0xaa, 0x35, 0x02, 0xf7, 0xee, 0xa3, 0x66, 0xf6, 0x62, 0xa3, 0xaa, 0x8a, 0xb6,
	0xaf, 0x06, 0xa7, 0xc7, 0xd9, 0x1d, 0x68, 0xb6, 0x7b, 0x3c, 0xe8, 0x8d, 0xaa, 0xd6, 0xc4, 0xf7,
	0x9b, 0xb1, 0x61, 0xc0, 0xfa, 0x1e, 0xbe, 0xe5, 0xff, 0xa1, 0xa7, 0x61, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x0a, 0x7b, 0x85, 0x3c, 0xcf, 0x01, 0x00, 0x00,
}
