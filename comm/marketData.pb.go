// Code generated by protoc-gen-go.
// source: marketData.proto
// DO NOT EDIT!

/*
Package comm is a generated protocol buffer package.

It is generated from these files:
	marketData.proto

It has these top-level messages:
	MarketData
*/
package comm

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type MarketData struct {
	WindCode           *string  `protobuf:"bytes,1,req" json:"WindCode,omitempty"`
	Code               *string  `protobuf:"bytes,2,req" json:"Code,omitempty"`
	ActionDay          *int32   `protobuf:"varint,3,req" json:"ActionDay,omitempty"`
	TradingDay         *int32   `protobuf:"varint,4,req" json:"TradingDay,omitempty"`
	Time               *int32   `protobuf:"varint,5,req" json:"Time,omitempty"`
	Status             *int32   `protobuf:"varint,6,req" json:"Status,omitempty"`
	PreClose           *uint32  `protobuf:"varint,7,req" json:"PreClose,omitempty"`
	Open               *uint32  `protobuf:"varint,8,req" json:"Open,omitempty"`
	High               *uint32  `protobuf:"varint,9,req" json:"High,omitempty"`
	Low                *uint32  `protobuf:"varint,10,req" json:"Low,omitempty"`
	Match              *uint32  `protobuf:"varint,11,req" json:"Match,omitempty"`
	AskPrice           []uint32 `protobuf:"varint,12,rep" json:"AskPrice,omitempty"`
	AskVol             []uint32 `protobuf:"varint,13,rep" json:"AskVol,omitempty"`
	BidPrice           []uint32 `protobuf:"varint,14,rep" json:"BidPrice,omitempty"`
	BidVol             []uint32 `protobuf:"varint,15,rep" json:"BidVol,omitempty"`
	NumTrades          *uint32  `protobuf:"varint,16,req" json:"NumTrades,omitempty"`
	Volume             *int64   `protobuf:"varint,17,req" json:"Volume,omitempty"`
	Turnover           *int64   `protobuf:"varint,18,req" json:"Turnover,omitempty"`
	TotalBidVol        *int64   `protobuf:"varint,19,req" json:"TotalBidVol,omitempty"`
	TotalAskVol        *int64   `protobuf:"varint,20,req" json:"TotalAskVol,omitempty"`
	WeighteAvgBidPrice *uint32  `protobuf:"varint,21,req" json:"WeighteAvgBidPrice,omitempty"`
	WeighteAvgAskPrice *uint32  `protobuf:"varint,22,req" json:"WeighteAvgAskPrice,omitempty"`
	IOPV               *int32   `protobuf:"varint,23,req" json:"IOPV,omitempty"`
	YieldToMaturity    *int32   `protobuf:"varint,24,req" json:"YieldToMaturity,omitempty"`
	HighLimited        *uint32  `protobuf:"varint,25,req" json:"HighLimited,omitempty"`
	LowLimited         *uint32  `protobuf:"varint,26,req" json:"LowLimited,omitempty"`
	Prefix             *string  `protobuf:"bytes,27,req" json:"Prefix,omitempty"`
	Syl1               *int32   `protobuf:"varint,28,req" json:"Syl1,omitempty"`
	Syl2               *int32   `protobuf:"varint,29,req" json:"Syl2,omitempty"`
	SD2                *int32   `protobuf:"varint,30,req" json:"SD2,omitempty"`
	XXX_unrecognized   []byte   `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}

func (m *MarketData) GetWindCode() string {
	if m != nil && m.WindCode != nil {
		return *m.WindCode
	}
	return ""
}

func (m *MarketData) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *MarketData) GetActionDay() int32 {
	if m != nil && m.ActionDay != nil {
		return *m.ActionDay
	}
	return 0
}

func (m *MarketData) GetTradingDay() int32 {
	if m != nil && m.TradingDay != nil {
		return *m.TradingDay
	}
	return 0
}

func (m *MarketData) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *MarketData) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *MarketData) GetPreClose() uint32 {
	if m != nil && m.PreClose != nil {
		return *m.PreClose
	}
	return 0
}

func (m *MarketData) GetOpen() uint32 {
	if m != nil && m.Open != nil {
		return *m.Open
	}
	return 0
}

func (m *MarketData) GetHigh() uint32 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *MarketData) GetLow() uint32 {
	if m != nil && m.Low != nil {
		return *m.Low
	}
	return 0
}

func (m *MarketData) GetMatch() uint32 {
	if m != nil && m.Match != nil {
		return *m.Match
	}
	return 0
}

func (m *MarketData) GetAskPrice() []uint32 {
	if m != nil {
		return m.AskPrice
	}
	return nil
}

func (m *MarketData) GetAskVol() []uint32 {
	if m != nil {
		return m.AskVol
	}
	return nil
}

func (m *MarketData) GetBidPrice() []uint32 {
	if m != nil {
		return m.BidPrice
	}
	return nil
}

func (m *MarketData) GetBidVol() []uint32 {
	if m != nil {
		return m.BidVol
	}
	return nil
}

func (m *MarketData) GetNumTrades() uint32 {
	if m != nil && m.NumTrades != nil {
		return *m.NumTrades
	}
	return 0
}

func (m *MarketData) GetVolume() int64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *MarketData) GetTurnover() int64 {
	if m != nil && m.Turnover != nil {
		return *m.Turnover
	}
	return 0
}

func (m *MarketData) GetTotalBidVol() int64 {
	if m != nil && m.TotalBidVol != nil {
		return *m.TotalBidVol
	}
	return 0
}

func (m *MarketData) GetTotalAskVol() int64 {
	if m != nil && m.TotalAskVol != nil {
		return *m.TotalAskVol
	}
	return 0
}

func (m *MarketData) GetWeighteAvgBidPrice() uint32 {
	if m != nil && m.WeighteAvgBidPrice != nil {
		return *m.WeighteAvgBidPrice
	}
	return 0
}

func (m *MarketData) GetWeighteAvgAskPrice() uint32 {
	if m != nil && m.WeighteAvgAskPrice != nil {
		return *m.WeighteAvgAskPrice
	}
	return 0
}

func (m *MarketData) GetIOPV() int32 {
	if m != nil && m.IOPV != nil {
		return *m.IOPV
	}
	return 0
}

func (m *MarketData) GetYieldToMaturity() int32 {
	if m != nil && m.YieldToMaturity != nil {
		return *m.YieldToMaturity
	}
	return 0
}

func (m *MarketData) GetHighLimited() uint32 {
	if m != nil && m.HighLimited != nil {
		return *m.HighLimited
	}
	return 0
}

func (m *MarketData) GetLowLimited() uint32 {
	if m != nil && m.LowLimited != nil {
		return *m.LowLimited
	}
	return 0
}

func (m *MarketData) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *MarketData) GetSyl1() int32 {
	if m != nil && m.Syl1 != nil {
		return *m.Syl1
	}
	return 0
}

func (m *MarketData) GetSyl2() int32 {
	if m != nil && m.Syl2 != nil {
		return *m.Syl2
	}
	return 0
}

func (m *MarketData) GetSD2() int32 {
	if m != nil && m.SD2 != nil {
		return *m.SD2
	}
	return 0
}

func init() {
}
