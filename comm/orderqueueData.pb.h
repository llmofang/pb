// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orderqueueData.proto

#ifndef PROTOBUF_orderqueueData_2eproto__INCLUDED
#define PROTOBUF_orderqueueData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_orderqueueData_2eproto();
void protobuf_AssignDesc_orderqueueData_2eproto();
void protobuf_ShutdownFile_orderqueueData_2eproto();

class OrderQueueData;

// ===================================================================

class OrderQueueData : public ::google::protobuf::Message {
 public:
  OrderQueueData();
  virtual ~OrderQueueData();

  OrderQueueData(const OrderQueueData& from);

  inline OrderQueueData& operator=(const OrderQueueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderQueueData& default_instance();

  void Swap(OrderQueueData* other);

  // implements Message ----------------------------------------------

  OrderQueueData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderQueueData& from);
  void MergeFrom(const OrderQueueData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string WindCode = 1;
  inline bool has_windcode() const;
  inline void clear_windcode();
  static const int kWindCodeFieldNumber = 1;
  inline const ::std::string& windcode() const;
  inline void set_windcode(const ::std::string& value);
  inline void set_windcode(const char* value);
  inline void set_windcode(const char* value, size_t size);
  inline ::std::string* mutable_windcode();
  inline ::std::string* release_windcode();
  inline void set_allocated_windcode(::std::string* windcode);

  // required string Code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // required int32 ActionDay = 3;
  inline bool has_actionday() const;
  inline void clear_actionday();
  static const int kActionDayFieldNumber = 3;
  inline ::google::protobuf::int32 actionday() const;
  inline void set_actionday(::google::protobuf::int32 value);

  // required int32 Time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // required int32 Side = 5;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 5;
  inline ::google::protobuf::int32 side() const;
  inline void set_side(::google::protobuf::int32 value);

  // required int32 Price = 6;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 6;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // required int32 Orders = 7;
  inline bool has_orders() const;
  inline void clear_orders();
  static const int kOrdersFieldNumber = 7;
  inline ::google::protobuf::int32 orders() const;
  inline void set_orders(::google::protobuf::int32 value);

  // required int32 ABItems = 8;
  inline bool has_abitems() const;
  inline void clear_abitems();
  static const int kABItemsFieldNumber = 8;
  inline ::google::protobuf::int32 abitems() const;
  inline void set_abitems(::google::protobuf::int32 value);

  // repeated int32 ABVolume = 9;
  inline int abvolume_size() const;
  inline void clear_abvolume();
  static const int kABVolumeFieldNumber = 9;
  inline ::google::protobuf::int32 abvolume(int index) const;
  inline void set_abvolume(int index, ::google::protobuf::int32 value);
  inline void add_abvolume(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      abvolume() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_abvolume();

  // @@protoc_insertion_point(class_scope:comm.OrderQueueData)
 private:
  inline void set_has_windcode();
  inline void clear_has_windcode();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_actionday();
  inline void clear_has_actionday();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_side();
  inline void clear_has_side();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_orders();
  inline void clear_has_orders();
  inline void set_has_abitems();
  inline void clear_has_abitems();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* windcode_;
  ::std::string* code_;
  ::google::protobuf::int32 actionday_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 orders_;
  ::google::protobuf::int32 abitems_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > abvolume_;
  friend void  protobuf_AddDesc_orderqueueData_2eproto();
  friend void protobuf_AssignDesc_orderqueueData_2eproto();
  friend void protobuf_ShutdownFile_orderqueueData_2eproto();

  void InitAsDefaultInstance();
  static OrderQueueData* default_instance_;
};
// ===================================================================


// ===================================================================

// OrderQueueData

// required string WindCode = 1;
inline bool OrderQueueData::has_windcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderQueueData::set_has_windcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderQueueData::clear_has_windcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderQueueData::clear_windcode() {
  if (windcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    windcode_->clear();
  }
  clear_has_windcode();
}
inline const ::std::string& OrderQueueData::windcode() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.WindCode)
  return *windcode_;
}
inline void OrderQueueData::set_windcode(const ::std::string& value) {
  set_has_windcode();
  if (windcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    windcode_ = new ::std::string;
  }
  windcode_->assign(value);
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.WindCode)
}
inline void OrderQueueData::set_windcode(const char* value) {
  set_has_windcode();
  if (windcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    windcode_ = new ::std::string;
  }
  windcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:comm.OrderQueueData.WindCode)
}
inline void OrderQueueData::set_windcode(const char* value, size_t size) {
  set_has_windcode();
  if (windcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    windcode_ = new ::std::string;
  }
  windcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:comm.OrderQueueData.WindCode)
}
inline ::std::string* OrderQueueData::mutable_windcode() {
  set_has_windcode();
  if (windcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    windcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:comm.OrderQueueData.WindCode)
  return windcode_;
}
inline ::std::string* OrderQueueData::release_windcode() {
  clear_has_windcode();
  if (windcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = windcode_;
    windcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderQueueData::set_allocated_windcode(::std::string* windcode) {
  if (windcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete windcode_;
  }
  if (windcode) {
    set_has_windcode();
    windcode_ = windcode;
  } else {
    clear_has_windcode();
    windcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:comm.OrderQueueData.WindCode)
}

// required string Code = 2;
inline bool OrderQueueData::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderQueueData::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderQueueData::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderQueueData::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& OrderQueueData::code() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.Code)
  return *code_;
}
inline void OrderQueueData::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.Code)
}
inline void OrderQueueData::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:comm.OrderQueueData.Code)
}
inline void OrderQueueData::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:comm.OrderQueueData.Code)
}
inline ::std::string* OrderQueueData::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:comm.OrderQueueData.Code)
  return code_;
}
inline ::std::string* OrderQueueData::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderQueueData::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:comm.OrderQueueData.Code)
}

// required int32 ActionDay = 3;
inline bool OrderQueueData::has_actionday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderQueueData::set_has_actionday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderQueueData::clear_has_actionday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderQueueData::clear_actionday() {
  actionday_ = 0;
  clear_has_actionday();
}
inline ::google::protobuf::int32 OrderQueueData::actionday() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.ActionDay)
  return actionday_;
}
inline void OrderQueueData::set_actionday(::google::protobuf::int32 value) {
  set_has_actionday();
  actionday_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.ActionDay)
}

// required int32 Time = 4;
inline bool OrderQueueData::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderQueueData::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderQueueData::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderQueueData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 OrderQueueData::time() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.Time)
  return time_;
}
inline void OrderQueueData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.Time)
}

// required int32 Side = 5;
inline bool OrderQueueData::has_side() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderQueueData::set_has_side() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderQueueData::clear_has_side() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderQueueData::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 OrderQueueData::side() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.Side)
  return side_;
}
inline void OrderQueueData::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.Side)
}

// required int32 Price = 6;
inline bool OrderQueueData::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderQueueData::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderQueueData::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderQueueData::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 OrderQueueData::price() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.Price)
  return price_;
}
inline void OrderQueueData::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.Price)
}

// required int32 Orders = 7;
inline bool OrderQueueData::has_orders() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderQueueData::set_has_orders() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderQueueData::clear_has_orders() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderQueueData::clear_orders() {
  orders_ = 0;
  clear_has_orders();
}
inline ::google::protobuf::int32 OrderQueueData::orders() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.Orders)
  return orders_;
}
inline void OrderQueueData::set_orders(::google::protobuf::int32 value) {
  set_has_orders();
  orders_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.Orders)
}

// required int32 ABItems = 8;
inline bool OrderQueueData::has_abitems() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderQueueData::set_has_abitems() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderQueueData::clear_has_abitems() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderQueueData::clear_abitems() {
  abitems_ = 0;
  clear_has_abitems();
}
inline ::google::protobuf::int32 OrderQueueData::abitems() const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.ABItems)
  return abitems_;
}
inline void OrderQueueData::set_abitems(::google::protobuf::int32 value) {
  set_has_abitems();
  abitems_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.ABItems)
}

// repeated int32 ABVolume = 9;
inline int OrderQueueData::abvolume_size() const {
  return abvolume_.size();
}
inline void OrderQueueData::clear_abvolume() {
  abvolume_.Clear();
}
inline ::google::protobuf::int32 OrderQueueData::abvolume(int index) const {
  // @@protoc_insertion_point(field_get:comm.OrderQueueData.ABVolume)
  return abvolume_.Get(index);
}
inline void OrderQueueData::set_abvolume(int index, ::google::protobuf::int32 value) {
  abvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.OrderQueueData.ABVolume)
}
inline void OrderQueueData::add_abvolume(::google::protobuf::int32 value) {
  abvolume_.Add(value);
  // @@protoc_insertion_point(field_add:comm.OrderQueueData.ABVolume)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OrderQueueData::abvolume() const {
  // @@protoc_insertion_point(field_list:comm.OrderQueueData.ABVolume)
  return abvolume_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OrderQueueData::mutable_abvolume() {
  // @@protoc_insertion_point(field_mutable_list:comm.OrderQueueData.ABVolume)
  return &abvolume_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_orderqueueData_2eproto__INCLUDED
