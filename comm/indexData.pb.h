// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: indexData.proto

#ifndef PROTOBUF_indexData_2eproto__INCLUDED
#define PROTOBUF_indexData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comm {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_indexData_2eproto();
void protobuf_InitDefaults_indexData_2eproto();
void protobuf_AssignDesc_indexData_2eproto();
void protobuf_ShutdownFile_indexData_2eproto();

class IndexData;

// ===================================================================

class IndexData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.IndexData) */ {
 public:
  IndexData();
  virtual ~IndexData();

  IndexData(const IndexData& from);

  inline IndexData& operator=(const IndexData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexData& default_instance();

  static const IndexData* internal_default_instance();

  void Swap(IndexData* other);

  // implements Message ----------------------------------------------

  inline IndexData* New() const { return New(NULL); }

  IndexData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndexData& from);
  void MergeFrom(const IndexData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IndexData* other);
  void UnsafeMergeFrom(const IndexData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string WindCode = 1;
  bool has_windcode() const;
  void clear_windcode();
  static const int kWindCodeFieldNumber = 1;
  const ::std::string& windcode() const;
  void set_windcode(const ::std::string& value);
  void set_windcode(const char* value);
  void set_windcode(const char* value, size_t size);
  ::std::string* mutable_windcode();
  ::std::string* release_windcode();
  void set_allocated_windcode(::std::string* windcode);

  // required string Code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // required int32 ActionDay = 3;
  bool has_actionday() const;
  void clear_actionday();
  static const int kActionDayFieldNumber = 3;
  ::google::protobuf::int32 actionday() const;
  void set_actionday(::google::protobuf::int32 value);

  // required int32 TradingDay = 4;
  bool has_tradingday() const;
  void clear_tradingday();
  static const int kTradingDayFieldNumber = 4;
  ::google::protobuf::int32 tradingday() const;
  void set_tradingday(::google::protobuf::int32 value);

  // required int32 Time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 OpenIndex = 6;
  bool has_openindex() const;
  void clear_openindex();
  static const int kOpenIndexFieldNumber = 6;
  ::google::protobuf::int32 openindex() const;
  void set_openindex(::google::protobuf::int32 value);

  // required int32 HighIndex = 7;
  bool has_highindex() const;
  void clear_highindex();
  static const int kHighIndexFieldNumber = 7;
  ::google::protobuf::int32 highindex() const;
  void set_highindex(::google::protobuf::int32 value);

  // required int32 LowIndex = 8;
  bool has_lowindex() const;
  void clear_lowindex();
  static const int kLowIndexFieldNumber = 8;
  ::google::protobuf::int32 lowindex() const;
  void set_lowindex(::google::protobuf::int32 value);

  // required int32 LastIndex = 9;
  bool has_lastindex() const;
  void clear_lastindex();
  static const int kLastIndexFieldNumber = 9;
  ::google::protobuf::int32 lastindex() const;
  void set_lastindex(::google::protobuf::int32 value);

  // required int64 TotalVolume = 10;
  bool has_totalvolume() const;
  void clear_totalvolume();
  static const int kTotalVolumeFieldNumber = 10;
  ::google::protobuf::int64 totalvolume() const;
  void set_totalvolume(::google::protobuf::int64 value);

  // required int64 Turnover = 11;
  bool has_turnover() const;
  void clear_turnover();
  static const int kTurnoverFieldNumber = 11;
  ::google::protobuf::int64 turnover() const;
  void set_turnover(::google::protobuf::int64 value);

  // required int32 PreCloseIndex = 12;
  bool has_precloseindex() const;
  void clear_precloseindex();
  static const int kPreCloseIndexFieldNumber = 12;
  ::google::protobuf::int32 precloseindex() const;
  void set_precloseindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.IndexData)
 private:
  inline void set_has_windcode();
  inline void clear_has_windcode();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_actionday();
  inline void clear_has_actionday();
  inline void set_has_tradingday();
  inline void clear_has_tradingday();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_openindex();
  inline void clear_has_openindex();
  inline void set_has_highindex();
  inline void clear_has_highindex();
  inline void set_has_lowindex();
  inline void clear_has_lowindex();
  inline void set_has_lastindex();
  inline void clear_has_lastindex();
  inline void set_has_totalvolume();
  inline void clear_has_totalvolume();
  inline void set_has_turnover();
  inline void clear_has_turnover();
  inline void set_has_precloseindex();
  inline void clear_has_precloseindex();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr windcode_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::int32 actionday_;
  ::google::protobuf::int32 tradingday_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 openindex_;
  ::google::protobuf::int32 highindex_;
  ::google::protobuf::int32 lowindex_;
  ::google::protobuf::int64 totalvolume_;
  ::google::protobuf::int32 lastindex_;
  ::google::protobuf::int32 precloseindex_;
  ::google::protobuf::int64 turnover_;
  friend void  protobuf_InitDefaults_indexData_2eproto_impl();
  friend void  protobuf_AddDesc_indexData_2eproto_impl();
  friend void protobuf_AssignDesc_indexData_2eproto();
  friend void protobuf_ShutdownFile_indexData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IndexData> IndexData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexData

// required string WindCode = 1;
inline bool IndexData::has_windcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndexData::set_has_windcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndexData::clear_has_windcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndexData::clear_windcode() {
  windcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_windcode();
}
inline const ::std::string& IndexData::windcode() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.WindCode)
  return windcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexData::set_windcode(const ::std::string& value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.IndexData.WindCode)
}
inline void IndexData::set_windcode(const char* value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.IndexData.WindCode)
}
inline void IndexData::set_windcode(const char* value, size_t size) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.IndexData.WindCode)
}
inline ::std::string* IndexData::mutable_windcode() {
  set_has_windcode();
  // @@protoc_insertion_point(field_mutable:comm.IndexData.WindCode)
  return windcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IndexData::release_windcode() {
  // @@protoc_insertion_point(field_release:comm.IndexData.WindCode)
  clear_has_windcode();
  return windcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexData::set_allocated_windcode(::std::string* windcode) {
  if (windcode != NULL) {
    set_has_windcode();
  } else {
    clear_has_windcode();
  }
  windcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), windcode);
  // @@protoc_insertion_point(field_set_allocated:comm.IndexData.WindCode)
}

// required string Code = 2;
inline bool IndexData::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndexData::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndexData::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndexData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& IndexData::code() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.Code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexData::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.IndexData.Code)
}
inline void IndexData::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.IndexData.Code)
}
inline void IndexData::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.IndexData.Code)
}
inline ::std::string* IndexData::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:comm.IndexData.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IndexData::release_code() {
  // @@protoc_insertion_point(field_release:comm.IndexData.Code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:comm.IndexData.Code)
}

// required int32 ActionDay = 3;
inline bool IndexData::has_actionday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndexData::set_has_actionday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndexData::clear_has_actionday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndexData::clear_actionday() {
  actionday_ = 0;
  clear_has_actionday();
}
inline ::google::protobuf::int32 IndexData::actionday() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.ActionDay)
  return actionday_;
}
inline void IndexData::set_actionday(::google::protobuf::int32 value) {
  set_has_actionday();
  actionday_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.ActionDay)
}

// required int32 TradingDay = 4;
inline bool IndexData::has_tradingday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndexData::set_has_tradingday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndexData::clear_has_tradingday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndexData::clear_tradingday() {
  tradingday_ = 0;
  clear_has_tradingday();
}
inline ::google::protobuf::int32 IndexData::tradingday() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.TradingDay)
  return tradingday_;
}
inline void IndexData::set_tradingday(::google::protobuf::int32 value) {
  set_has_tradingday();
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.TradingDay)
}

// required int32 Time = 5;
inline bool IndexData::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndexData::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndexData::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndexData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 IndexData::time() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.Time)
  return time_;
}
inline void IndexData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.Time)
}

// required int32 OpenIndex = 6;
inline bool IndexData::has_openindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndexData::set_has_openindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndexData::clear_has_openindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndexData::clear_openindex() {
  openindex_ = 0;
  clear_has_openindex();
}
inline ::google::protobuf::int32 IndexData::openindex() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.OpenIndex)
  return openindex_;
}
inline void IndexData::set_openindex(::google::protobuf::int32 value) {
  set_has_openindex();
  openindex_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.OpenIndex)
}

// required int32 HighIndex = 7;
inline bool IndexData::has_highindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndexData::set_has_highindex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndexData::clear_has_highindex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndexData::clear_highindex() {
  highindex_ = 0;
  clear_has_highindex();
}
inline ::google::protobuf::int32 IndexData::highindex() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.HighIndex)
  return highindex_;
}
inline void IndexData::set_highindex(::google::protobuf::int32 value) {
  set_has_highindex();
  highindex_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.HighIndex)
}

// required int32 LowIndex = 8;
inline bool IndexData::has_lowindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndexData::set_has_lowindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndexData::clear_has_lowindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndexData::clear_lowindex() {
  lowindex_ = 0;
  clear_has_lowindex();
}
inline ::google::protobuf::int32 IndexData::lowindex() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.LowIndex)
  return lowindex_;
}
inline void IndexData::set_lowindex(::google::protobuf::int32 value) {
  set_has_lowindex();
  lowindex_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.LowIndex)
}

// required int32 LastIndex = 9;
inline bool IndexData::has_lastindex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndexData::set_has_lastindex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndexData::clear_has_lastindex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndexData::clear_lastindex() {
  lastindex_ = 0;
  clear_has_lastindex();
}
inline ::google::protobuf::int32 IndexData::lastindex() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.LastIndex)
  return lastindex_;
}
inline void IndexData::set_lastindex(::google::protobuf::int32 value) {
  set_has_lastindex();
  lastindex_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.LastIndex)
}

// required int64 TotalVolume = 10;
inline bool IndexData::has_totalvolume() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndexData::set_has_totalvolume() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndexData::clear_has_totalvolume() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndexData::clear_totalvolume() {
  totalvolume_ = GOOGLE_LONGLONG(0);
  clear_has_totalvolume();
}
inline ::google::protobuf::int64 IndexData::totalvolume() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.TotalVolume)
  return totalvolume_;
}
inline void IndexData::set_totalvolume(::google::protobuf::int64 value) {
  set_has_totalvolume();
  totalvolume_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.TotalVolume)
}

// required int64 Turnover = 11;
inline bool IndexData::has_turnover() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndexData::set_has_turnover() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndexData::clear_has_turnover() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndexData::clear_turnover() {
  turnover_ = GOOGLE_LONGLONG(0);
  clear_has_turnover();
}
inline ::google::protobuf::int64 IndexData::turnover() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.Turnover)
  return turnover_;
}
inline void IndexData::set_turnover(::google::protobuf::int64 value) {
  set_has_turnover();
  turnover_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.Turnover)
}

// required int32 PreCloseIndex = 12;
inline bool IndexData::has_precloseindex() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndexData::set_has_precloseindex() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndexData::clear_has_precloseindex() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndexData::clear_precloseindex() {
  precloseindex_ = 0;
  clear_has_precloseindex();
}
inline ::google::protobuf::int32 IndexData::precloseindex() const {
  // @@protoc_insertion_point(field_get:comm.IndexData.PreCloseIndex)
  return precloseindex_;
}
inline void IndexData::set_precloseindex(::google::protobuf::int32 value) {
  set_has_precloseindex();
  precloseindex_ = value;
  // @@protoc_insertion_point(field_set:comm.IndexData.PreCloseIndex)
}

inline const IndexData* IndexData::internal_default_instance() {
  return &IndexData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_indexData_2eproto__INCLUDED
