// Code generated by protoc-gen-go.
// source: order.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	order.proto

It has these top-level messages:
	OperationRecord
	Order
	SubOrder
	OrderReturn
	SubOrderReturn
	OrderRequest
	SubOrderRequest
	FundAccount
	TradingAccount
	TraderInfo
*/
package pb

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// beego orm 中使用orm:"-" 来去除字段
// 操作记录
type OperationRecord struct {
	Id               *int64   `protobuf:"varint,1,req" json:"Id,omitempty"`
	Time             *int64   `protobuf:"varint,2,req" json:"Time,omitempty"`
	OperatorID       *int64   `protobuf:"varint,3,req" json:"OperatorID,omitempty"`
	TraderID         *int64   `protobuf:"varint,4,req" json:"TraderID,omitempty"`
	TradingAccountID *int64   `protobuf:"varint,5,req" json:"TradingAccountID,omitempty"`
	OrderDirection   *int64   `protobuf:"varint,6,req" json:"OrderDirection,omitempty"`
	OrderQty         *int64   `protobuf:"varint,7,req" json:"OrderQty,omitempty"`
	OrderPrice       *float64 `protobuf:"fixed64,8,req" json:"OrderPrice,omitempty"`
	Code             *string  `protobuf:"bytes,9,req" json:"Code,omitempty"`
	BatchNo          *int64   `protobuf:"varint,10,req" json:"BatchNo,omitempty"`
	OrderNo          *int64   `protobuf:"varint,11,req" json:"OrderNo,omitempty"`
	FundAccountID    *int64   `protobuf:"varint,12,req" json:"FundAccountID,omitempty"`
	ExternalNo       *int64   `protobuf:"varint,13,req" json:"ExternalNo,omitempty"`
	OperateType      *int64   `protobuf:"varint,14,req" json:"OperateType,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *OperationRecord) Reset()         { *m = OperationRecord{} }
func (m *OperationRecord) String() string { return proto.CompactTextString(m) }
func (*OperationRecord) ProtoMessage()    {}

func (m *OperationRecord) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *OperationRecord) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *OperationRecord) GetOperatorID() int64 {
	if m != nil && m.OperatorID != nil {
		return *m.OperatorID
	}
	return 0
}

func (m *OperationRecord) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *OperationRecord) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *OperationRecord) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *OperationRecord) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *OperationRecord) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *OperationRecord) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *OperationRecord) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *OperationRecord) GetOrderNo() int64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *OperationRecord) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *OperationRecord) GetExternalNo() int64 {
	if m != nil && m.ExternalNo != nil {
		return *m.ExternalNo
	}
	return 0
}

func (m *OperationRecord) GetOperateType() int64 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

type Order struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 更新时间
	UpdateTime *int64 `protobuf:"varint,3,req" json:"UpdateTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,4,req" json:"BatchNo,omitempty"`
	// 订单编号
	OrderNo *int64 `protobuf:"varint,5,req" json:"OrderNo,omitempty"`
	// 外部编号
	ExternalNo *int64 `protobuf:"varint,6,req" json:"ExternalNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,7,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,8,req" json:"TradingAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,9,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,10,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,11,req" json:"OrderPrice,omitempty"`
	// 申报数量
	OrderReportQty *int64 `protobuf:"varint,12,req" json:"OrderReportQty,omitempty"`
	// 订单数量
	OrderQty *int64 `protobuf:"varint,13,req" json:"OrderQty,omitempty"`
	// 成交价格
	ExecutionPrice *float64 `protobuf:"fixed64,14,req" json:"ExecutionPrice,omitempty"`
	// 成交数量
	ExecutionQty *int64 `protobuf:"varint,15,req" json:"ExecutionQty,omitempty"`
	// 撤单数量
	CancelQty *int64 `protobuf:"varint,16,req" json:"CancelQty,omitempty"`
	// 订单状态
	OrderStatus *int64 `protobuf:"varint,17,req" json:"OrderStatus,omitempty"`
	// 全部费用
	AllFare *float64 `protobuf:"fixed64,18,req" json:"AllFare,omitempty"`
	// 错误代码
	ErrorCode        *int64 `protobuf:"varint,19,req" json:"ErrorCode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}

func (m *Order) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Order) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *Order) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Order) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *Order) GetOrderNo() int64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *Order) GetExternalNo() int64 {
	if m != nil && m.ExternalNo != nil {
		return *m.ExternalNo
	}
	return 0
}

func (m *Order) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *Order) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *Order) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Order) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *Order) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *Order) GetOrderReportQty() int64 {
	if m != nil && m.OrderReportQty != nil {
		return *m.OrderReportQty
	}
	return 0
}

func (m *Order) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *Order) GetExecutionPrice() float64 {
	if m != nil && m.ExecutionPrice != nil {
		return *m.ExecutionPrice
	}
	return 0
}

func (m *Order) GetExecutionQty() int64 {
	if m != nil && m.ExecutionQty != nil {
		return *m.ExecutionQty
	}
	return 0
}

func (m *Order) GetCancelQty() int64 {
	if m != nil && m.CancelQty != nil {
		return *m.CancelQty
	}
	return 0
}

func (m *Order) GetOrderStatus() int64 {
	if m != nil && m.OrderStatus != nil {
		return *m.OrderStatus
	}
	return 0
}

func (m *Order) GetAllFare() float64 {
	if m != nil && m.AllFare != nil {
		return *m.AllFare
	}
	return 0
}

func (m *Order) GetErrorCode() int64 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

type SubOrder struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 更新时间
	UpdateTime *int64 `protobuf:"varint,3,req" json:"UpdateTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,4,req" json:"BatchNo,omitempty"`
	// 真实订单委托号
	OrderNo *int64 `protobuf:"varint,5,req" json:"OrderNo,omitempty"`
	// 父订单号
	ParentOrderNo *int64 `protobuf:"varint,6,req" json:"ParentOrderNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,7,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,8,req" json:"TradingAccountID,omitempty"`
	// 产品账户编码
	FundAccountID *int64 `protobuf:"varint,9,req" json:"FundAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,10,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,11,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,12,req" json:"OrderPrice,omitempty"`
	// 订单数量
	OrderQty *int64 `protobuf:"varint,13,req" json:"OrderQty,omitempty"`
	// 成交价格
	ExecutionPrice *float64 `protobuf:"fixed64,14,req" json:"ExecutionPrice,omitempty"`
	// 成交数量
	ExecutionQty *int64 `protobuf:"varint,15,req" json:"ExecutionQty,omitempty"`
	// 撤单数量
	CancelQty *int64 `protobuf:"varint,16,req" json:"CancelQty,omitempty"`
	// 订单状态
	OrderStatus *int64 `protobuf:"varint,17,req" json:"OrderStatus,omitempty"`
	// 全部费用
	AllFare *float64 `protobuf:"fixed64,18,req" json:"AllFare,omitempty"`
	// 错误代码
	ErrorCode *int64 `protobuf:"varint,19,req" json:"ErrorCode,omitempty"`
	// 错误信息
	ErrorMsg         *string `protobuf:"bytes,20,req" json:"ErrorMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubOrder) Reset()         { *m = SubOrder{} }
func (m *SubOrder) String() string { return proto.CompactTextString(m) }
func (*SubOrder) ProtoMessage()    {}

func (m *SubOrder) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SubOrder) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *SubOrder) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *SubOrder) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *SubOrder) GetOrderNo() int64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *SubOrder) GetParentOrderNo() int64 {
	if m != nil && m.ParentOrderNo != nil {
		return *m.ParentOrderNo
	}
	return 0
}

func (m *SubOrder) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *SubOrder) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *SubOrder) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *SubOrder) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *SubOrder) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *SubOrder) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *SubOrder) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *SubOrder) GetExecutionPrice() float64 {
	if m != nil && m.ExecutionPrice != nil {
		return *m.ExecutionPrice
	}
	return 0
}

func (m *SubOrder) GetExecutionQty() int64 {
	if m != nil && m.ExecutionQty != nil {
		return *m.ExecutionQty
	}
	return 0
}

func (m *SubOrder) GetCancelQty() int64 {
	if m != nil && m.CancelQty != nil {
		return *m.CancelQty
	}
	return 0
}

func (m *SubOrder) GetOrderStatus() int64 {
	if m != nil && m.OrderStatus != nil {
		return *m.OrderStatus
	}
	return 0
}

func (m *SubOrder) GetAllFare() float64 {
	if m != nil && m.AllFare != nil {
		return *m.AllFare
	}
	return 0
}

func (m *SubOrder) GetErrorCode() int64 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *SubOrder) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

type OrderReturn struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 更新时间
	UpdateTime *int64 `protobuf:"varint,3,req" json:"UpdateTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,4,req" json:"BatchNo,omitempty"`
	// 订单编号
	OrderNo *int64 `protobuf:"varint,5,req" json:"OrderNo,omitempty"`
	// 外部编号
	ExternalNo *int64 `protobuf:"varint,6,req" json:"ExternalNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,7,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,8,req" json:"TradingAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,9,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,10,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,11,req" json:"OrderPrice,omitempty"`
	// 申报数量
	OrderReportQty *int64 `protobuf:"varint,12,req" json:"OrderReportQty,omitempty"`
	// 订单数量
	OrderQty *int64 `protobuf:"varint,13,req" json:"OrderQty,omitempty"`
	// 成交价格
	ExecutionPrice *float64 `protobuf:"fixed64,14,req" json:"ExecutionPrice,omitempty"`
	// 成交数量
	ExecutionQty *int64 `protobuf:"varint,15,req" json:"ExecutionQty,omitempty"`
	// 撤单数量
	CancelQty *int64 `protobuf:"varint,16,req" json:"CancelQty,omitempty"`
	// 订单状态
	OrderStatus *int64 `protobuf:"varint,17,req" json:"OrderStatus,omitempty"`
	// 全部费用
	AllFare *float64 `protobuf:"fixed64,18,req" json:"AllFare,omitempty"`
	// 错误代码
	ErrorCode        *int64 `protobuf:"varint,19,req" json:"ErrorCode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OrderReturn) Reset()         { *m = OrderReturn{} }
func (m *OrderReturn) String() string { return proto.CompactTextString(m) }
func (*OrderReturn) ProtoMessage()    {}

func (m *OrderReturn) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *OrderReturn) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *OrderReturn) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *OrderReturn) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *OrderReturn) GetOrderNo() int64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *OrderReturn) GetExternalNo() int64 {
	if m != nil && m.ExternalNo != nil {
		return *m.ExternalNo
	}
	return 0
}

func (m *OrderReturn) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *OrderReturn) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *OrderReturn) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *OrderReturn) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *OrderReturn) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *OrderReturn) GetOrderReportQty() int64 {
	if m != nil && m.OrderReportQty != nil {
		return *m.OrderReportQty
	}
	return 0
}

func (m *OrderReturn) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *OrderReturn) GetExecutionPrice() float64 {
	if m != nil && m.ExecutionPrice != nil {
		return *m.ExecutionPrice
	}
	return 0
}

func (m *OrderReturn) GetExecutionQty() int64 {
	if m != nil && m.ExecutionQty != nil {
		return *m.ExecutionQty
	}
	return 0
}

func (m *OrderReturn) GetCancelQty() int64 {
	if m != nil && m.CancelQty != nil {
		return *m.CancelQty
	}
	return 0
}

func (m *OrderReturn) GetOrderStatus() int64 {
	if m != nil && m.OrderStatus != nil {
		return *m.OrderStatus
	}
	return 0
}

func (m *OrderReturn) GetAllFare() float64 {
	if m != nil && m.AllFare != nil {
		return *m.AllFare
	}
	return 0
}

func (m *OrderReturn) GetErrorCode() int64 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

type SubOrderReturn struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 更新时间
	UpdateTime *int64 `protobuf:"varint,3,req" json:"UpdateTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,4,req" json:"BatchNo,omitempty"`
	// 真实订单委托号
	OrderNo *int64 `protobuf:"varint,5,req" json:"OrderNo,omitempty"`
	// 父订单号
	ParentOrderNo *int64 `protobuf:"varint,6,req" json:"ParentOrderNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,7,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,8,req" json:"TradingAccountID,omitempty"`
	// 产品账户编码
	FundAccountID *int64 `protobuf:"varint,9,req" json:"FundAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,10,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,11,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,12,req" json:"OrderPrice,omitempty"`
	// 订单数量
	OrderQty *int64 `protobuf:"varint,13,req" json:"OrderQty,omitempty"`
	// 成交价格
	ExecutionPrice *float64 `protobuf:"fixed64,14,req" json:"ExecutionPrice,omitempty"`
	// 成交数量
	ExecutionQty *int64 `protobuf:"varint,15,req" json:"ExecutionQty,omitempty"`
	// 撤单数量
	CancelQty *int64 `protobuf:"varint,16,req" json:"CancelQty,omitempty"`
	// 订单状态
	OrderStatus *int64 `protobuf:"varint,17,req" json:"OrderStatus,omitempty"`
	// 错误代码
	ErrorCode *int64 `protobuf:"varint,19,req" json:"ErrorCode,omitempty"`
	// 错误信息
	ErrorMsg         *string `protobuf:"bytes,20,req" json:"ErrorMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubOrderReturn) Reset()         { *m = SubOrderReturn{} }
func (m *SubOrderReturn) String() string { return proto.CompactTextString(m) }
func (*SubOrderReturn) ProtoMessage()    {}

func (m *SubOrderReturn) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SubOrderReturn) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *SubOrderReturn) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *SubOrderReturn) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *SubOrderReturn) GetOrderNo() int64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *SubOrderReturn) GetParentOrderNo() int64 {
	if m != nil && m.ParentOrderNo != nil {
		return *m.ParentOrderNo
	}
	return 0
}

func (m *SubOrderReturn) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *SubOrderReturn) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *SubOrderReturn) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *SubOrderReturn) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *SubOrderReturn) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *SubOrderReturn) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *SubOrderReturn) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *SubOrderReturn) GetExecutionPrice() float64 {
	if m != nil && m.ExecutionPrice != nil {
		return *m.ExecutionPrice
	}
	return 0
}

func (m *SubOrderReturn) GetExecutionQty() int64 {
	if m != nil && m.ExecutionQty != nil {
		return *m.ExecutionQty
	}
	return 0
}

func (m *SubOrderReturn) GetCancelQty() int64 {
	if m != nil && m.CancelQty != nil {
		return *m.CancelQty
	}
	return 0
}

func (m *SubOrderReturn) GetOrderStatus() int64 {
	if m != nil && m.OrderStatus != nil {
		return *m.OrderStatus
	}
	return 0
}

func (m *SubOrderReturn) GetErrorCode() int64 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *SubOrderReturn) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

type OrderRequest struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,3,req" json:"BatchNo,omitempty"`
	// 外部编号
	ExternalNo *int64 `protobuf:"varint,4,req" json:"ExternalNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,5,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,6,req" json:"TradingAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,7,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,8,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,9,req" json:"OrderPrice,omitempty"`
	// 订单数量
	OrderQty    *int64 `protobuf:"varint,10,req" json:"OrderQty,omitempty"`
	OperateType *int64 `protobuf:"varint,11,req" json:"OperateType,omitempty"`
	// 产品账户编号
	FundAccountID *int64 `protobuf:"varint,12,req" json:"FundAccountID,omitempty"`
	// 操作者编号
	OperatorID       *int64 `protobuf:"varint,13,req" json:"OperatorID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}

func (m *OrderRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *OrderRequest) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *OrderRequest) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *OrderRequest) GetExternalNo() int64 {
	if m != nil && m.ExternalNo != nil {
		return *m.ExternalNo
	}
	return 0
}

func (m *OrderRequest) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *OrderRequest) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *OrderRequest) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *OrderRequest) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *OrderRequest) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *OrderRequest) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *OrderRequest) GetOperateType() int64 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

func (m *OrderRequest) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *OrderRequest) GetOperatorID() int64 {
	if m != nil && m.OperatorID != nil {
		return *m.OperatorID
	}
	return 0
}

type SubOrderRequest struct {
	Id *int64 `protobuf:"varint,1,req" json:"Id,omitempty"`
	// 申报时间
	ReportTime *int64 `protobuf:"varint,2,req" json:"ReportTime,omitempty"`
	// 订单批号
	BatchNo *int64 `protobuf:"varint,3,req" json:"BatchNo,omitempty"`
	// 父订单号
	ParentOrderNo *int64 `protobuf:"varint,4,req" json:"ParentOrderNo,omitempty"`
	// 交易用户编码
	TraderID *int64 `protobuf:"varint,5,req" json:"TraderID,omitempty"`
	// 交易账户编号
	TradingAccountID *int64 `protobuf:"varint,6,req" json:"TradingAccountID,omitempty"`
	// 产品账户编码
	FundAccountID *int64 `protobuf:"varint,7,req" json:"FundAccountID,omitempty"`
	// 代码
	Code *string `protobuf:"bytes,8,req" json:"Code,omitempty"`
	// 订单方向
	OrderDirection *int64 `protobuf:"varint,9,req" json:"OrderDirection,omitempty"`
	// 订单价格
	OrderPrice *float64 `protobuf:"fixed64,10,req" json:"OrderPrice,omitempty"`
	// 订单数量
	OrderQty         *int64 `protobuf:"varint,11,req" json:"OrderQty,omitempty"`
	OperateType      *int64 `protobuf:"varint,12,req" json:"OperateType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SubOrderRequest) Reset()         { *m = SubOrderRequest{} }
func (m *SubOrderRequest) String() string { return proto.CompactTextString(m) }
func (*SubOrderRequest) ProtoMessage()    {}

func (m *SubOrderRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SubOrderRequest) GetReportTime() int64 {
	if m != nil && m.ReportTime != nil {
		return *m.ReportTime
	}
	return 0
}

func (m *SubOrderRequest) GetBatchNo() int64 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *SubOrderRequest) GetParentOrderNo() int64 {
	if m != nil && m.ParentOrderNo != nil {
		return *m.ParentOrderNo
	}
	return 0
}

func (m *SubOrderRequest) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *SubOrderRequest) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *SubOrderRequest) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *SubOrderRequest) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *SubOrderRequest) GetOrderDirection() int64 {
	if m != nil && m.OrderDirection != nil {
		return *m.OrderDirection
	}
	return 0
}

func (m *SubOrderRequest) GetOrderPrice() float64 {
	if m != nil && m.OrderPrice != nil {
		return *m.OrderPrice
	}
	return 0
}

func (m *SubOrderRequest) GetOrderQty() int64 {
	if m != nil && m.OrderQty != nil {
		return *m.OrderQty
	}
	return 0
}

func (m *SubOrderRequest) GetOperateType() int64 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

type FundAccount struct {
	Id               *int64  `protobuf:"varint,1,req" json:"Id,omitempty"`
	Name             *string `protobuf:"bytes,2,req" json:"Name,omitempty"`
	Desc             *string `protobuf:"bytes,3,req" json:"Desc,omitempty"`
	Enable           *bool   `protobuf:"varint,4,req" json:"Enable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FundAccount) Reset()         { *m = FundAccount{} }
func (m *FundAccount) String() string { return proto.CompactTextString(m) }
func (*FundAccount) ProtoMessage()    {}

func (m *FundAccount) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FundAccount) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FundAccount) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *FundAccount) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

type TradingAccount struct {
	Id               *int64  `protobuf:"varint,1,req" json:"Id,omitempty"`
	Name             *string `protobuf:"bytes,2,req" json:"Name,omitempty"`
	Enable           *bool   `protobuf:"varint,3,req" json:"Enable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TradingAccount) Reset()         { *m = TradingAccount{} }
func (m *TradingAccount) String() string { return proto.CompactTextString(m) }
func (*TradingAccount) ProtoMessage()    {}

func (m *TradingAccount) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TradingAccount) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TradingAccount) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

type TraderInfo struct {
	Id               *int64   `protobuf:"varint,1,req" json:"Id,omitempty"`
	Name             *string  `protobuf:"bytes,2,req" json:"Name,omitempty"`
	MaxLoss          *float64 `protobuf:"fixed64,3,req" json:"MaxLoss,omitempty"`
	MaxFunds         *int64   `protobuf:"varint,4,req" json:"MaxFunds,omitempty"`
	MaxQty           *int64   `protobuf:"varint,5,req" json:"MaxQty,omitempty"`
	Enable           *bool    `protobuf:"varint,6,req" json:"Enable,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TraderInfo) Reset()         { *m = TraderInfo{} }
func (m *TraderInfo) String() string { return proto.CompactTextString(m) }
func (*TraderInfo) ProtoMessage()    {}

func (m *TraderInfo) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TraderInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TraderInfo) GetMaxLoss() float64 {
	if m != nil && m.MaxLoss != nil {
		return *m.MaxLoss
	}
	return 0
}

func (m *TraderInfo) GetMaxFunds() int64 {
	if m != nil && m.MaxFunds != nil {
		return *m.MaxFunds
	}
	return 0
}

func (m *TraderInfo) GetMaxQty() int64 {
	if m != nil && m.MaxQty != nil {
		return *m.MaxQty
	}
	return 0
}

func (m *TraderInfo) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}




