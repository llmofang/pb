// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orderData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "orderData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace comm {

namespace {

const ::google::protobuf::Descriptor* OrderData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_orderData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_orderData_2eproto() {
  protobuf_AddDesc_orderData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "orderData.proto");
  GOOGLE_CHECK(file != NULL);
  OrderData_descriptor_ = file->message_type(0);
  static const int OrderData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, windcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, actionday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, orderkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, functioncode_),
  };
  OrderData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderData_descriptor_,
      OrderData::internal_default_instance(),
      OrderData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, _has_bits_),
      -1,
      -1,
      sizeof(OrderData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderData, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_orderData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderData_descriptor_, OrderData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_orderData_2eproto() {
  OrderData_default_instance_.Shutdown();
  delete OrderData_reflection_;
}

void protobuf_InitDefaults_orderData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  OrderData_default_instance_.DefaultConstruct();
  OrderData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_orderData_2eproto_once_);
void protobuf_InitDefaults_orderData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_orderData_2eproto_once_,
                 &protobuf_InitDefaults_orderData_2eproto_impl);
}
void protobuf_AddDesc_orderData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_orderData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017orderData.proto\022\004comm\"\243\001\n\tOrderData\022\020\n"
    "\010WindCode\030\001 \002(\t\022\014\n\004Code\030\002 \002(\t\022\021\n\tActionD"
    "ay\030\003 \002(\005\022\014\n\004Time\030\004 \002(\005\022\r\n\005Order\030\005 \002(\005\022\r\n"
    "\005Price\030\006 \002(\005\022\016\n\006Volume\030\007 \002(\005\022\021\n\tOrderKin"
    "d\030\010 \002(\t\022\024\n\014FunctionCode\030\t \002(\t", 189);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "orderData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_orderData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_orderData_2eproto_once_);
void protobuf_AddDesc_orderData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_orderData_2eproto_once_,
                 &protobuf_AddDesc_orderData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_orderData_2eproto {
  StaticDescriptorInitializer_orderData_2eproto() {
    protobuf_AddDesc_orderData_2eproto();
  }
} static_descriptor_initializer_orderData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderData::kWindCodeFieldNumber;
const int OrderData::kCodeFieldNumber;
const int OrderData::kActionDayFieldNumber;
const int OrderData::kTimeFieldNumber;
const int OrderData::kOrderFieldNumber;
const int OrderData::kPriceFieldNumber;
const int OrderData::kVolumeFieldNumber;
const int OrderData::kOrderKindFieldNumber;
const int OrderData::kFunctionCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderData::OrderData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orderData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.OrderData)
}

void OrderData::InitAsDefaultInstance() {
}

OrderData::OrderData(const OrderData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.OrderData)
}

void OrderData::SharedCtor() {
  _cached_size_ = 0;
  windcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderkind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  functioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&actionday_, 0, reinterpret_cast<char*>(&volume_) -
    reinterpret_cast<char*>(&actionday_) + sizeof(volume_));
}

OrderData::~OrderData() {
  // @@protoc_insertion_point(destructor:comm.OrderData)
  SharedDtor();
}

void OrderData::SharedDtor() {
  windcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderkind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  functioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderData_descriptor_;
}

const OrderData& OrderData::default_instance() {
  protobuf_InitDefaults_orderData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OrderData> OrderData_default_instance_;

OrderData* OrderData::New(::google::protobuf::Arena* arena) const {
  OrderData* n = new OrderData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderData::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.OrderData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OrderData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OrderData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(actionday_, volume_);
    if (has_windcode()) {
      windcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_code()) {
      code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_orderkind()) {
      orderkind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_functioncode()) {
    functioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OrderData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.OrderData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string WindCode = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_windcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->windcode().data(), this->windcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.OrderData.WindCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Code;
        break;
      }

      // required string Code = 2;
      case 2: {
        if (tag == 18) {
         parse_Code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.OrderData.Code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActionDay;
        break;
      }

      // required int32 ActionDay = 3;
      case 3: {
        if (tag == 24) {
         parse_ActionDay:
          set_has_actionday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionday_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Time;
        break;
      }

      // required int32 Time = 4;
      case 4: {
        if (tag == 32) {
         parse_Time:
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Order;
        break;
      }

      // required int32 Order = 5;
      case 5: {
        if (tag == 40) {
         parse_Order:
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Price;
        break;
      }

      // required int32 Price = 6;
      case 6: {
        if (tag == 48) {
         parse_Price:
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Volume;
        break;
      }

      // required int32 Volume = 7;
      case 7: {
        if (tag == 56) {
         parse_Volume:
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_OrderKind;
        break;
      }

      // required string OrderKind = 8;
      case 8: {
        if (tag == 66) {
         parse_OrderKind:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderkind()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderkind().data(), this->orderkind().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.OrderData.OrderKind");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_FunctionCode;
        break;
      }

      // required string FunctionCode = 9;
      case 9: {
        if (tag == 74) {
         parse_FunctionCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_functioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->functioncode().data(), this->functioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.OrderData.FunctionCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.OrderData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.OrderData)
  return false;
#undef DO_
}

void OrderData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.OrderData)
  // required string WindCode = 1;
  if (has_windcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->windcode().data(), this->windcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.WindCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->windcode(), output);
  }

  // required string Code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.Code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // required int32 ActionDay = 3;
  if (has_actionday()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actionday(), output);
  }

  // required int32 Time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  // required int32 Order = 5;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->order(), output);
  }

  // required int32 Price = 6;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->price(), output);
  }

  // required int32 Volume = 7;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->volume(), output);
  }

  // required string OrderKind = 8;
  if (has_orderkind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderkind().data(), this->orderkind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.OrderKind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->orderkind(), output);
  }

  // required string FunctionCode = 9;
  if (has_functioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->functioncode().data(), this->functioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.FunctionCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->functioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.OrderData)
}

::google::protobuf::uint8* OrderData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:comm.OrderData)
  // required string WindCode = 1;
  if (has_windcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->windcode().data(), this->windcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.WindCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->windcode(), target);
  }

  // required string Code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.Code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // required int32 ActionDay = 3;
  if (has_actionday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actionday(), target);
  }

  // required int32 Time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  // required int32 Order = 5;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->order(), target);
  }

  // required int32 Price = 6;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->price(), target);
  }

  // required int32 Volume = 7;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->volume(), target);
  }

  // required string OrderKind = 8;
  if (has_orderkind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderkind().data(), this->orderkind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.OrderKind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->orderkind(), target);
  }

  // required string FunctionCode = 9;
  if (has_functioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->functioncode().data(), this->functioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.OrderData.FunctionCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->functioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.OrderData)
  return target;
}

size_t OrderData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:comm.OrderData)
  size_t total_size = 0;

  if (has_windcode()) {
    // required string WindCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->windcode());
  }

  if (has_code()) {
    // required string Code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  if (has_actionday()) {
    // required int32 ActionDay = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionday());
  }

  if (has_time()) {
    // required int32 Time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  if (has_order()) {
    // required int32 Order = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  if (has_price()) {
    // required int32 Price = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  if (has_volume()) {
    // required int32 Volume = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  if (has_orderkind()) {
    // required string OrderKind = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orderkind());
  }

  if (has_functioncode()) {
    // required string FunctionCode = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->functioncode());
  }

  return total_size;
}
size_t OrderData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm.OrderData)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string WindCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->windcode());

    // required string Code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());

    // required int32 ActionDay = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionday());

    // required int32 Time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());

    // required int32 Order = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());

    // required int32 Price = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());

    // required int32 Volume = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());

    // required string OrderKind = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orderkind());

    // required string FunctionCode = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->functioncode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm.OrderData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OrderData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm.OrderData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm.OrderData)
    UnsafeMergeFrom(*source);
  }
}

void OrderData::MergeFrom(const OrderData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm.OrderData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OrderData::UnsafeMergeFrom(const OrderData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_windcode()) {
      set_has_windcode();
      windcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.windcode_);
    }
    if (from.has_code()) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (from.has_actionday()) {
      set_actionday(from.actionday());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_orderkind()) {
      set_has_orderkind();
      orderkind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderkind_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_functioncode()) {
      set_has_functioncode();
      functioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.functioncode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OrderData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm.OrderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderData::CopyFrom(const OrderData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.OrderData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OrderData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void OrderData::Swap(OrderData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderData::InternalSwap(OrderData* other) {
  windcode_.Swap(&other->windcode_);
  code_.Swap(&other->code_);
  std::swap(actionday_, other->actionday_);
  std::swap(time_, other->time_);
  std::swap(order_, other->order_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  orderkind_.Swap(&other->orderkind_);
  functioncode_.Swap(&other->functioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderData_descriptor_;
  metadata.reflection = OrderData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderData

// required string WindCode = 1;
bool OrderData::has_windcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OrderData::set_has_windcode() {
  _has_bits_[0] |= 0x00000001u;
}
void OrderData::clear_has_windcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void OrderData::clear_windcode() {
  windcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_windcode();
}
const ::std::string& OrderData::windcode() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.WindCode)
  return windcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_windcode(const ::std::string& value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.OrderData.WindCode)
}
void OrderData::set_windcode(const char* value) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.OrderData.WindCode)
}
void OrderData::set_windcode(const char* value, size_t size) {
  set_has_windcode();
  windcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.OrderData.WindCode)
}
::std::string* OrderData::mutable_windcode() {
  set_has_windcode();
  // @@protoc_insertion_point(field_mutable:comm.OrderData.WindCode)
  return windcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderData::release_windcode() {
  // @@protoc_insertion_point(field_release:comm.OrderData.WindCode)
  clear_has_windcode();
  return windcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_allocated_windcode(::std::string* windcode) {
  if (windcode != NULL) {
    set_has_windcode();
  } else {
    clear_has_windcode();
  }
  windcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), windcode);
  // @@protoc_insertion_point(field_set_allocated:comm.OrderData.WindCode)
}

// required string Code = 2;
bool OrderData::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OrderData::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
void OrderData::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void OrderData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
const ::std::string& OrderData::code() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.Code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.OrderData.Code)
}
void OrderData::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.OrderData.Code)
}
void OrderData::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.OrderData.Code)
}
::std::string* OrderData::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:comm.OrderData.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderData::release_code() {
  // @@protoc_insertion_point(field_release:comm.OrderData.Code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:comm.OrderData.Code)
}

// required int32 ActionDay = 3;
bool OrderData::has_actionday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OrderData::set_has_actionday() {
  _has_bits_[0] |= 0x00000004u;
}
void OrderData::clear_has_actionday() {
  _has_bits_[0] &= ~0x00000004u;
}
void OrderData::clear_actionday() {
  actionday_ = 0;
  clear_has_actionday();
}
::google::protobuf::int32 OrderData::actionday() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.ActionDay)
  return actionday_;
}
void OrderData::set_actionday(::google::protobuf::int32 value) {
  set_has_actionday();
  actionday_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderData.ActionDay)
}

// required int32 Time = 4;
bool OrderData::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OrderData::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
void OrderData::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void OrderData::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 OrderData::time() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.Time)
  return time_;
}
void OrderData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderData.Time)
}

// required int32 Order = 5;
bool OrderData::has_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OrderData::set_has_order() {
  _has_bits_[0] |= 0x00000010u;
}
void OrderData::clear_has_order() {
  _has_bits_[0] &= ~0x00000010u;
}
void OrderData::clear_order() {
  order_ = 0;
  clear_has_order();
}
::google::protobuf::int32 OrderData::order() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.Order)
  return order_;
}
void OrderData::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderData.Order)
}

// required int32 Price = 6;
bool OrderData::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OrderData::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
void OrderData::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
void OrderData::clear_price() {
  price_ = 0;
  clear_has_price();
}
::google::protobuf::int32 OrderData::price() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.Price)
  return price_;
}
void OrderData::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderData.Price)
}

// required int32 Volume = 7;
bool OrderData::has_volume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OrderData::set_has_volume() {
  _has_bits_[0] |= 0x00000040u;
}
void OrderData::clear_has_volume() {
  _has_bits_[0] &= ~0x00000040u;
}
void OrderData::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
::google::protobuf::int32 OrderData::volume() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.Volume)
  return volume_;
}
void OrderData::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:comm.OrderData.Volume)
}

// required string OrderKind = 8;
bool OrderData::has_orderkind() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void OrderData::set_has_orderkind() {
  _has_bits_[0] |= 0x00000080u;
}
void OrderData::clear_has_orderkind() {
  _has_bits_[0] &= ~0x00000080u;
}
void OrderData::clear_orderkind() {
  orderkind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderkind();
}
const ::std::string& OrderData::orderkind() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.OrderKind)
  return orderkind_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_orderkind(const ::std::string& value) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.OrderData.OrderKind)
}
void OrderData::set_orderkind(const char* value) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.OrderData.OrderKind)
}
void OrderData::set_orderkind(const char* value, size_t size) {
  set_has_orderkind();
  orderkind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.OrderData.OrderKind)
}
::std::string* OrderData::mutable_orderkind() {
  set_has_orderkind();
  // @@protoc_insertion_point(field_mutable:comm.OrderData.OrderKind)
  return orderkind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderData::release_orderkind() {
  // @@protoc_insertion_point(field_release:comm.OrderData.OrderKind)
  clear_has_orderkind();
  return orderkind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_allocated_orderkind(::std::string* orderkind) {
  if (orderkind != NULL) {
    set_has_orderkind();
  } else {
    clear_has_orderkind();
  }
  orderkind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderkind);
  // @@protoc_insertion_point(field_set_allocated:comm.OrderData.OrderKind)
}

// required string FunctionCode = 9;
bool OrderData::has_functioncode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void OrderData::set_has_functioncode() {
  _has_bits_[0] |= 0x00000100u;
}
void OrderData::clear_has_functioncode() {
  _has_bits_[0] &= ~0x00000100u;
}
void OrderData::clear_functioncode() {
  functioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_functioncode();
}
const ::std::string& OrderData::functioncode() const {
  // @@protoc_insertion_point(field_get:comm.OrderData.FunctionCode)
  return functioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_functioncode(const ::std::string& value) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.OrderData.FunctionCode)
}
void OrderData::set_functioncode(const char* value) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.OrderData.FunctionCode)
}
void OrderData::set_functioncode(const char* value, size_t size) {
  set_has_functioncode();
  functioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.OrderData.FunctionCode)
}
::std::string* OrderData::mutable_functioncode() {
  set_has_functioncode();
  // @@protoc_insertion_point(field_mutable:comm.OrderData.FunctionCode)
  return functioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderData::release_functioncode() {
  // @@protoc_insertion_point(field_release:comm.OrderData.FunctionCode)
  clear_has_functioncode();
  return functioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderData::set_allocated_functioncode(::std::string* functioncode) {
  if (functioncode != NULL) {
    set_has_functioncode();
  } else {
    clear_has_functioncode();
  }
  functioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), functioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.OrderData.FunctionCode)
}

inline const OrderData* OrderData::internal_default_instance() {
  return &OrderData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

// @@protoc_insertion_point(global_scope)
