// Code generated by protoc-gen-go.
// source: hbase.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	hbase.proto

It has these top-level messages:
	Hbase
	HbaseResp
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Hbase struct {
	Result           *string `protobuf:"bytes,1,opt,name=Result,json=result" json:"Result,omitempty"`
	FirstRow         *string `protobuf:"bytes,2,opt,name=FirstRow,json=firstRow" json:"FirstRow,omitempty"`
	LastRow          *string `protobuf:"bytes,3,opt,name=LastRow,json=lastRow" json:"LastRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Hbase) Reset()                    { *m = Hbase{} }
func (m *Hbase) String() string            { return proto.CompactTextString(m) }
func (*Hbase) ProtoMessage()               {}

func (m *Hbase) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

func (m *Hbase) GetFirstRow() string {
	if m != nil && m.FirstRow != nil {
		return *m.FirstRow
	}
	return ""
}

func (m *Hbase) GetLastRow() string {
	if m != nil && m.LastRow != nil {
		return *m.LastRow
	}
	return ""
}

type HbaseResp struct {
	Resps            []*Hbase `protobuf:"bytes,1,rep,name=Resps,json=resps" json:"Resps,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *HbaseResp) Reset()                    { *m = HbaseResp{} }
func (m *HbaseResp) String() string            { return proto.CompactTextString(m) }
func (*HbaseResp) ProtoMessage()               {}

func (m *HbaseResp) GetResps() []*Hbase {
	if m != nil {
		return m.Resps
	}
	return nil
}

func init() {
	proto.RegisterType((*Hbase)(nil), "pb.Hbase")
	proto.RegisterType((*HbaseResp)(nil), "pb.HbaseResp")
}
