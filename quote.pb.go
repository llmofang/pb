// Code generated by protoc-gen-go.
// source: quote.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	quote.proto

It has these top-level messages:
	Tick
	Transaction
	Index
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tick struct {
	Sym                  *string `protobuf:"bytes,1,req,name=sym" json:"sym,omitempty"`
	Time                 *int64  `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	SzWindCode           *string `protobuf:"bytes,3,req,name=szWindCode" json:"szWindCode,omitempty"`
	NActionDay           *int32  `protobuf:"varint,4,req,name=nActionDay" json:"nActionDay,omitempty"`
	NTime                *int32  `protobuf:"varint,5,req,name=nTime" json:"nTime,omitempty"`
	NStatus              *int32  `protobuf:"varint,6,req,name=nStatus" json:"nStatus,omitempty"`
	NPreClose            *int32  `protobuf:"varint,7,req,name=nPreClose" json:"nPreClose,omitempty"`
	NOpen                *int32  `protobuf:"varint,8,req,name=nOpen" json:"nOpen,omitempty"`
	NHigh                *int32  `protobuf:"varint,9,req,name=nHigh" json:"nHigh,omitempty"`
	NLow                 *int32  `protobuf:"varint,10,req,name=nLow" json:"nLow,omitempty"`
	NMatch               *int32  `protobuf:"varint,11,req,name=nMatch" json:"nMatch,omitempty"`
	NAskPrice1           *int32  `protobuf:"varint,12,req,name=nAskPrice1" json:"nAskPrice1,omitempty"`
	NAskPrice2           *int32  `protobuf:"varint,13,req,name=nAskPrice2" json:"nAskPrice2,omitempty"`
	NAskPrice3           *int32  `protobuf:"varint,14,req,name=nAskPrice3" json:"nAskPrice3,omitempty"`
	NAskPrice4           *int32  `protobuf:"varint,15,req,name=nAskPrice4" json:"nAskPrice4,omitempty"`
	NAskPrice5           *int32  `protobuf:"varint,16,req,name=nAskPrice5" json:"nAskPrice5,omitempty"`
	NAskPrice6           *int32  `protobuf:"varint,17,req,name=nAskPrice6" json:"nAskPrice6,omitempty"`
	NAskPrice7           *int32  `protobuf:"varint,18,req,name=nAskPrice7" json:"nAskPrice7,omitempty"`
	NAskPrice8           *int32  `protobuf:"varint,19,req,name=nAskPrice8" json:"nAskPrice8,omitempty"`
	NAskPrice9           *int32  `protobuf:"varint,20,req,name=nAskPrice9" json:"nAskPrice9,omitempty"`
	NAskPrice10          *int32  `protobuf:"varint,21,req,name=nAskPrice10" json:"nAskPrice10,omitempty"`
	NAskVol1             *int32  `protobuf:"varint,22,req,name=nAskVol1" json:"nAskVol1,omitempty"`
	NAskVol2             *int32  `protobuf:"varint,23,req,name=nAskVol2" json:"nAskVol2,omitempty"`
	NAskVol3             *int32  `protobuf:"varint,24,req,name=nAskVol3" json:"nAskVol3,omitempty"`
	NAskVol4             *int32  `protobuf:"varint,25,req,name=nAskVol4" json:"nAskVol4,omitempty"`
	NAskVol5             *int32  `protobuf:"varint,26,req,name=nAskVol5" json:"nAskVol5,omitempty"`
	NAskVol6             *int32  `protobuf:"varint,27,req,name=nAskVol6" json:"nAskVol6,omitempty"`
	NAskVol7             *int32  `protobuf:"varint,28,req,name=nAskVol7" json:"nAskVol7,omitempty"`
	NAskVol8             *int32  `protobuf:"varint,29,req,name=nAskVol8" json:"nAskVol8,omitempty"`
	NAskVol9             *int32  `protobuf:"varint,30,req,name=nAskVol9" json:"nAskVol9,omitempty"`
	NAskVol10            *int32  `protobuf:"varint,31,req,name=nAskVol10" json:"nAskVol10,omitempty"`
	NBidPrice1           *int32  `protobuf:"varint,32,req,name=nBidPrice1" json:"nBidPrice1,omitempty"`
	NBidPrice2           *int32  `protobuf:"varint,33,req,name=nBidPrice2" json:"nBidPrice2,omitempty"`
	NBidPrice3           *int32  `protobuf:"varint,34,req,name=nBidPrice3" json:"nBidPrice3,omitempty"`
	NBidPrice4           *int32  `protobuf:"varint,35,req,name=nBidPrice4" json:"nBidPrice4,omitempty"`
	NBidPrice5           *int32  `protobuf:"varint,36,req,name=nBidPrice5" json:"nBidPrice5,omitempty"`
	NBidPrice6           *int32  `protobuf:"varint,37,req,name=nBidPrice6" json:"nBidPrice6,omitempty"`
	NBidPrice7           *int32  `protobuf:"varint,38,req,name=nBidPrice7" json:"nBidPrice7,omitempty"`
	NBidPrice8           *int32  `protobuf:"varint,39,req,name=nBidPrice8" json:"nBidPrice8,omitempty"`
	NBidPrice9           *int32  `protobuf:"varint,40,req,name=nBidPrice9" json:"nBidPrice9,omitempty"`
	NBidPrice10          *int32  `protobuf:"varint,41,req,name=nBidPrice10" json:"nBidPrice10,omitempty"`
	NBidVol1             *int32  `protobuf:"varint,42,req,name=nBidVol1" json:"nBidVol1,omitempty"`
	NBidVol2             *int32  `protobuf:"varint,43,req,name=nBidVol2" json:"nBidVol2,omitempty"`
	NBidVol3             *int32  `protobuf:"varint,44,req,name=nBidVol3" json:"nBidVol3,omitempty"`
	NBidVol4             *int32  `protobuf:"varint,45,req,name=nBidVol4" json:"nBidVol4,omitempty"`
	NBidVol5             *int32  `protobuf:"varint,46,req,name=nBidVol5" json:"nBidVol5,omitempty"`
	NBidVol6             *int32  `protobuf:"varint,47,req,name=nBidVol6" json:"nBidVol6,omitempty"`
	NBidVol7             *int32  `protobuf:"varint,48,req,name=nBidVol7" json:"nBidVol7,omitempty"`
	NBidVol8             *int32  `protobuf:"varint,49,req,name=nBidVol8" json:"nBidVol8,omitempty"`
	NBidVol9             *int32  `protobuf:"varint,50,req,name=nBidVol9" json:"nBidVol9,omitempty"`
	NBidVol10            *int32  `protobuf:"varint,51,req,name=nBidVol10" json:"nBidVol10,omitempty"`
	NNumTrades           *int32  `protobuf:"varint,52,req,name=nNumTrades" json:"nNumTrades,omitempty"`
	IVolume              *int32  `protobuf:"varint,53,req,name=iVolume" json:"iVolume,omitempty"`
	ITurnover            *int32  `protobuf:"varint,54,req,name=iTurnover" json:"iTurnover,omitempty"`
	NTotalBidVol         *int32  `protobuf:"varint,55,req,name=nTotalBidVol" json:"nTotalBidVol,omitempty"`
	NTotalAskVol         *int32  `protobuf:"varint,56,req,name=nTotalAskVol" json:"nTotalAskVol,omitempty"`
	NWeightedAvgBidPrice *int32  `protobuf:"varint,57,req,name=nWeightedAvgBidPrice" json:"nWeightedAvgBidPrice,omitempty"`
	NWeightedAvgAskPrice *int32  `protobuf:"varint,58,req,name=nWeightedAvgAskPrice" json:"nWeightedAvgAskPrice,omitempty"`
	NIOPV                *int32  `protobuf:"varint,59,req,name=nIOPV" json:"nIOPV,omitempty"`
	NYieldToMaturity     *int32  `protobuf:"varint,60,req,name=nYieldToMaturity" json:"nYieldToMaturity,omitempty"`
	NHighLimited         *int32  `protobuf:"varint,61,req,name=nHighLimited" json:"nHighLimited,omitempty"`
	NLowLimited          *int32  `protobuf:"varint,62,req,name=nLowLimited" json:"nLowLimited,omitempty"`
	NSyl1                *int32  `protobuf:"varint,63,req,name=nSyl1" json:"nSyl1,omitempty"`
	NSyl2                *int32  `protobuf:"varint,64,req,name=nSyl2" json:"nSyl2,omitempty"`
	NSD2                 *int32  `protobuf:"varint,65,req,name=nSD2" json:"nSD2,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *Tick) Reset()                    { *m = Tick{} }
func (m *Tick) String() string            { return proto.CompactTextString(m) }
func (*Tick) ProtoMessage()               {}
func (*Tick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tick) GetSym() string {
	if m != nil && m.Sym != nil {
		return *m.Sym
	}
	return ""
}

func (m *Tick) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Tick) GetSzWindCode() string {
	if m != nil && m.SzWindCode != nil {
		return *m.SzWindCode
	}
	return ""
}

func (m *Tick) GetNActionDay() int32 {
	if m != nil && m.NActionDay != nil {
		return *m.NActionDay
	}
	return 0
}

func (m *Tick) GetNTime() int32 {
	if m != nil && m.NTime != nil {
		return *m.NTime
	}
	return 0
}

func (m *Tick) GetNStatus() int32 {
	if m != nil && m.NStatus != nil {
		return *m.NStatus
	}
	return 0
}

func (m *Tick) GetNPreClose() int32 {
	if m != nil && m.NPreClose != nil {
		return *m.NPreClose
	}
	return 0
}

func (m *Tick) GetNOpen() int32 {
	if m != nil && m.NOpen != nil {
		return *m.NOpen
	}
	return 0
}

func (m *Tick) GetNHigh() int32 {
	if m != nil && m.NHigh != nil {
		return *m.NHigh
	}
	return 0
}

func (m *Tick) GetNLow() int32 {
	if m != nil && m.NLow != nil {
		return *m.NLow
	}
	return 0
}

func (m *Tick) GetNMatch() int32 {
	if m != nil && m.NMatch != nil {
		return *m.NMatch
	}
	return 0
}

func (m *Tick) GetNAskPrice1() int32 {
	if m != nil && m.NAskPrice1 != nil {
		return *m.NAskPrice1
	}
	return 0
}

func (m *Tick) GetNAskPrice2() int32 {
	if m != nil && m.NAskPrice2 != nil {
		return *m.NAskPrice2
	}
	return 0
}

func (m *Tick) GetNAskPrice3() int32 {
	if m != nil && m.NAskPrice3 != nil {
		return *m.NAskPrice3
	}
	return 0
}

func (m *Tick) GetNAskPrice4() int32 {
	if m != nil && m.NAskPrice4 != nil {
		return *m.NAskPrice4
	}
	return 0
}

func (m *Tick) GetNAskPrice5() int32 {
	if m != nil && m.NAskPrice5 != nil {
		return *m.NAskPrice5
	}
	return 0
}

func (m *Tick) GetNAskPrice6() int32 {
	if m != nil && m.NAskPrice6 != nil {
		return *m.NAskPrice6
	}
	return 0
}

func (m *Tick) GetNAskPrice7() int32 {
	if m != nil && m.NAskPrice7 != nil {
		return *m.NAskPrice7
	}
	return 0
}

func (m *Tick) GetNAskPrice8() int32 {
	if m != nil && m.NAskPrice8 != nil {
		return *m.NAskPrice8
	}
	return 0
}

func (m *Tick) GetNAskPrice9() int32 {
	if m != nil && m.NAskPrice9 != nil {
		return *m.NAskPrice9
	}
	return 0
}

func (m *Tick) GetNAskPrice10() int32 {
	if m != nil && m.NAskPrice10 != nil {
		return *m.NAskPrice10
	}
	return 0
}

func (m *Tick) GetNAskVol1() int32 {
	if m != nil && m.NAskVol1 != nil {
		return *m.NAskVol1
	}
	return 0
}

func (m *Tick) GetNAskVol2() int32 {
	if m != nil && m.NAskVol2 != nil {
		return *m.NAskVol2
	}
	return 0
}

func (m *Tick) GetNAskVol3() int32 {
	if m != nil && m.NAskVol3 != nil {
		return *m.NAskVol3
	}
	return 0
}

func (m *Tick) GetNAskVol4() int32 {
	if m != nil && m.NAskVol4 != nil {
		return *m.NAskVol4
	}
	return 0
}

func (m *Tick) GetNAskVol5() int32 {
	if m != nil && m.NAskVol5 != nil {
		return *m.NAskVol5
	}
	return 0
}

func (m *Tick) GetNAskVol6() int32 {
	if m != nil && m.NAskVol6 != nil {
		return *m.NAskVol6
	}
	return 0
}

func (m *Tick) GetNAskVol7() int32 {
	if m != nil && m.NAskVol7 != nil {
		return *m.NAskVol7
	}
	return 0
}

func (m *Tick) GetNAskVol8() int32 {
	if m != nil && m.NAskVol8 != nil {
		return *m.NAskVol8
	}
	return 0
}

func (m *Tick) GetNAskVol9() int32 {
	if m != nil && m.NAskVol9 != nil {
		return *m.NAskVol9
	}
	return 0
}

func (m *Tick) GetNAskVol10() int32 {
	if m != nil && m.NAskVol10 != nil {
		return *m.NAskVol10
	}
	return 0
}

func (m *Tick) GetNBidPrice1() int32 {
	if m != nil && m.NBidPrice1 != nil {
		return *m.NBidPrice1
	}
	return 0
}

func (m *Tick) GetNBidPrice2() int32 {
	if m != nil && m.NBidPrice2 != nil {
		return *m.NBidPrice2
	}
	return 0
}

func (m *Tick) GetNBidPrice3() int32 {
	if m != nil && m.NBidPrice3 != nil {
		return *m.NBidPrice3
	}
	return 0
}

func (m *Tick) GetNBidPrice4() int32 {
	if m != nil && m.NBidPrice4 != nil {
		return *m.NBidPrice4
	}
	return 0
}

func (m *Tick) GetNBidPrice5() int32 {
	if m != nil && m.NBidPrice5 != nil {
		return *m.NBidPrice5
	}
	return 0
}

func (m *Tick) GetNBidPrice6() int32 {
	if m != nil && m.NBidPrice6 != nil {
		return *m.NBidPrice6
	}
	return 0
}

func (m *Tick) GetNBidPrice7() int32 {
	if m != nil && m.NBidPrice7 != nil {
		return *m.NBidPrice7
	}
	return 0
}

func (m *Tick) GetNBidPrice8() int32 {
	if m != nil && m.NBidPrice8 != nil {
		return *m.NBidPrice8
	}
	return 0
}

func (m *Tick) GetNBidPrice9() int32 {
	if m != nil && m.NBidPrice9 != nil {
		return *m.NBidPrice9
	}
	return 0
}

func (m *Tick) GetNBidPrice10() int32 {
	if m != nil && m.NBidPrice10 != nil {
		return *m.NBidPrice10
	}
	return 0
}

func (m *Tick) GetNBidVol1() int32 {
	if m != nil && m.NBidVol1 != nil {
		return *m.NBidVol1
	}
	return 0
}

func (m *Tick) GetNBidVol2() int32 {
	if m != nil && m.NBidVol2 != nil {
		return *m.NBidVol2
	}
	return 0
}

func (m *Tick) GetNBidVol3() int32 {
	if m != nil && m.NBidVol3 != nil {
		return *m.NBidVol3
	}
	return 0
}

func (m *Tick) GetNBidVol4() int32 {
	if m != nil && m.NBidVol4 != nil {
		return *m.NBidVol4
	}
	return 0
}

func (m *Tick) GetNBidVol5() int32 {
	if m != nil && m.NBidVol5 != nil {
		return *m.NBidVol5
	}
	return 0
}

func (m *Tick) GetNBidVol6() int32 {
	if m != nil && m.NBidVol6 != nil {
		return *m.NBidVol6
	}
	return 0
}

func (m *Tick) GetNBidVol7() int32 {
	if m != nil && m.NBidVol7 != nil {
		return *m.NBidVol7
	}
	return 0
}

func (m *Tick) GetNBidVol8() int32 {
	if m != nil && m.NBidVol8 != nil {
		return *m.NBidVol8
	}
	return 0
}

func (m *Tick) GetNBidVol9() int32 {
	if m != nil && m.NBidVol9 != nil {
		return *m.NBidVol9
	}
	return 0
}

func (m *Tick) GetNBidVol10() int32 {
	if m != nil && m.NBidVol10 != nil {
		return *m.NBidVol10
	}
	return 0
}

func (m *Tick) GetNNumTrades() int32 {
	if m != nil && m.NNumTrades != nil {
		return *m.NNumTrades
	}
	return 0
}

func (m *Tick) GetIVolume() int32 {
	if m != nil && m.IVolume != nil {
		return *m.IVolume
	}
	return 0
}

func (m *Tick) GetITurnover() int32 {
	if m != nil && m.ITurnover != nil {
		return *m.ITurnover
	}
	return 0
}

func (m *Tick) GetNTotalBidVol() int32 {
	if m != nil && m.NTotalBidVol != nil {
		return *m.NTotalBidVol
	}
	return 0
}

func (m *Tick) GetNTotalAskVol() int32 {
	if m != nil && m.NTotalAskVol != nil {
		return *m.NTotalAskVol
	}
	return 0
}

func (m *Tick) GetNWeightedAvgBidPrice() int32 {
	if m != nil && m.NWeightedAvgBidPrice != nil {
		return *m.NWeightedAvgBidPrice
	}
	return 0
}

func (m *Tick) GetNWeightedAvgAskPrice() int32 {
	if m != nil && m.NWeightedAvgAskPrice != nil {
		return *m.NWeightedAvgAskPrice
	}
	return 0
}

func (m *Tick) GetNIOPV() int32 {
	if m != nil && m.NIOPV != nil {
		return *m.NIOPV
	}
	return 0
}

func (m *Tick) GetNYieldToMaturity() int32 {
	if m != nil && m.NYieldToMaturity != nil {
		return *m.NYieldToMaturity
	}
	return 0
}

func (m *Tick) GetNHighLimited() int32 {
	if m != nil && m.NHighLimited != nil {
		return *m.NHighLimited
	}
	return 0
}

func (m *Tick) GetNLowLimited() int32 {
	if m != nil && m.NLowLimited != nil {
		return *m.NLowLimited
	}
	return 0
}

func (m *Tick) GetNSyl1() int32 {
	if m != nil && m.NSyl1 != nil {
		return *m.NSyl1
	}
	return 0
}

func (m *Tick) GetNSyl2() int32 {
	if m != nil && m.NSyl2 != nil {
		return *m.NSyl2
	}
	return 0
}

func (m *Tick) GetNSD2() int32 {
	if m != nil && m.NSD2 != nil {
		return *m.NSD2
	}
	return 0
}

type Transaction struct {
	Sym              *string `protobuf:"bytes,1,req,name=sym" json:"sym,omitempty"`
	Time             *int64  `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	SzWindCode       *string `protobuf:"bytes,3,req,name=szWindCode" json:"szWindCode,omitempty"`
	NActionDay       *int32  `protobuf:"varint,4,req,name=nActionDay" json:"nActionDay,omitempty"`
	NTime            *int32  `protobuf:"varint,5,req,name=nTime" json:"nTime,omitempty"`
	NIndex           *int32  `protobuf:"varint,6,req,name=nIndex" json:"nIndex,omitempty"`
	NPrice           *int32  `protobuf:"varint,7,req,name=nPrice" json:"nPrice,omitempty"`
	NVolume          *int32  `protobuf:"varint,8,req,name=nVolume" json:"nVolume,omitempty"`
	NTurnover        *int32  `protobuf:"varint,9,req,name=nTurnover" json:"nTurnover,omitempty"`
	NBSFlag          *int32  `protobuf:"varint,10,req,name=nBSFlag" json:"nBSFlag,omitempty"`
	ChOrderKind      *string `protobuf:"bytes,11,req,name=chOrderKind" json:"chOrderKind,omitempty"`
	ChFunctionCode   *string `protobuf:"bytes,12,req,name=chFunctionCode" json:"chFunctionCode,omitempty"`
	NAskOrder        *int32  `protobuf:"varint,13,req,name=nAskOrder" json:"nAskOrder,omitempty"`
	NBidOrder        *int32  `protobuf:"varint,14,req,name=nBidOrder" json:"nBidOrder,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Transaction) GetSym() string {
	if m != nil && m.Sym != nil {
		return *m.Sym
	}
	return ""
}

func (m *Transaction) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Transaction) GetSzWindCode() string {
	if m != nil && m.SzWindCode != nil {
		return *m.SzWindCode
	}
	return ""
}

func (m *Transaction) GetNActionDay() int32 {
	if m != nil && m.NActionDay != nil {
		return *m.NActionDay
	}
	return 0
}

func (m *Transaction) GetNTime() int32 {
	if m != nil && m.NTime != nil {
		return *m.NTime
	}
	return 0
}

func (m *Transaction) GetNIndex() int32 {
	if m != nil && m.NIndex != nil {
		return *m.NIndex
	}
	return 0
}

func (m *Transaction) GetNPrice() int32 {
	if m != nil && m.NPrice != nil {
		return *m.NPrice
	}
	return 0
}

func (m *Transaction) GetNVolume() int32 {
	if m != nil && m.NVolume != nil {
		return *m.NVolume
	}
	return 0
}

func (m *Transaction) GetNTurnover() int32 {
	if m != nil && m.NTurnover != nil {
		return *m.NTurnover
	}
	return 0
}

func (m *Transaction) GetNBSFlag() int32 {
	if m != nil && m.NBSFlag != nil {
		return *m.NBSFlag
	}
	return 0
}

func (m *Transaction) GetChOrderKind() string {
	if m != nil && m.ChOrderKind != nil {
		return *m.ChOrderKind
	}
	return ""
}

func (m *Transaction) GetChFunctionCode() string {
	if m != nil && m.ChFunctionCode != nil {
		return *m.ChFunctionCode
	}
	return ""
}

func (m *Transaction) GetNAskOrder() int32 {
	if m != nil && m.NAskOrder != nil {
		return *m.NAskOrder
	}
	return 0
}

func (m *Transaction) GetNBidOrder() int32 {
	if m != nil && m.NBidOrder != nil {
		return *m.NBidOrder
	}
	return 0
}

type Index struct {
	Sym              *string `protobuf:"bytes,1,req,name=sym" json:"sym,omitempty"`
	Time             *int64  `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	SzWindCode       *string `protobuf:"bytes,3,req,name=szWindCode" json:"szWindCode,omitempty"`
	NActionDay       *string `protobuf:"bytes,4,req,name=nActionDay" json:"nActionDay,omitempty"`
	NTime            *string `protobuf:"bytes,5,req,name=nTime" json:"nTime,omitempty"`
	NOpenIndex       *string `protobuf:"bytes,6,req,name=nOpenIndex" json:"nOpenIndex,omitempty"`
	NHighIndex       *string `protobuf:"bytes,7,req,name=nHighIndex" json:"nHighIndex,omitempty"`
	NLowIndex        *string `protobuf:"bytes,8,req,name=nLowIndex" json:"nLowIndex,omitempty"`
	NLastIndex       *string `protobuf:"bytes,9,req,name=nLastIndex" json:"nLastIndex,omitempty"`
	ITotalVolume     *string `protobuf:"bytes,10,req,name=iTotalVolume" json:"iTotalVolume,omitempty"`
	ITurnover        *string `protobuf:"bytes,11,req,name=iTurnover" json:"iTurnover,omitempty"`
	NPreCloseIndex   *string `protobuf:"bytes,12,req,name=nPreCloseIndex" json:"nPreCloseIndex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Index) Reset()                    { *m = Index{} }
func (m *Index) String() string            { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()               {}
func (*Index) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Index) GetSym() string {
	if m != nil && m.Sym != nil {
		return *m.Sym
	}
	return ""
}

func (m *Index) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Index) GetSzWindCode() string {
	if m != nil && m.SzWindCode != nil {
		return *m.SzWindCode
	}
	return ""
}

func (m *Index) GetNActionDay() string {
	if m != nil && m.NActionDay != nil {
		return *m.NActionDay
	}
	return ""
}

func (m *Index) GetNTime() string {
	if m != nil && m.NTime != nil {
		return *m.NTime
	}
	return ""
}

func (m *Index) GetNOpenIndex() string {
	if m != nil && m.NOpenIndex != nil {
		return *m.NOpenIndex
	}
	return ""
}

func (m *Index) GetNHighIndex() string {
	if m != nil && m.NHighIndex != nil {
		return *m.NHighIndex
	}
	return ""
}

func (m *Index) GetNLowIndex() string {
	if m != nil && m.NLowIndex != nil {
		return *m.NLowIndex
	}
	return ""
}

func (m *Index) GetNLastIndex() string {
	if m != nil && m.NLastIndex != nil {
		return *m.NLastIndex
	}
	return ""
}

func (m *Index) GetITotalVolume() string {
	if m != nil && m.ITotalVolume != nil {
		return *m.ITotalVolume
	}
	return ""
}

func (m *Index) GetITurnover() string {
	if m != nil && m.ITurnover != nil {
		return *m.ITurnover
	}
	return ""
}

func (m *Index) GetNPreCloseIndex() string {
	if m != nil && m.NPreCloseIndex != nil {
		return *m.NPreCloseIndex
	}
	return ""
}

func init() {
	proto.RegisterType((*Tick)(nil), "pb.Tick")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*Index)(nil), "pb.Index")
}

func init() { proto.RegisterFile("quote.proto", fileDescriptor0) }

