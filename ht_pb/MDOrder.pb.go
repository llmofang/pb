// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MDOrder.proto

package com_htsc_mdc_insight_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//逐笔委托数据模型
type MDOrder struct {
	HTSCSecurityID       string            `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	MDDate               int32             `protobuf:"varint,2,opt,name=MDDate,proto3" json:"MDDate,omitempty"`
	MDTime               int32             `protobuf:"varint,3,opt,name=MDTime,proto3" json:"MDTime,omitempty"`
	DataTimestamp        int64             `protobuf:"varint,4,opt,name=DataTimestamp,proto3" json:"DataTimestamp,omitempty"`
	SecurityIDSource     ESecurityIDSource `protobuf:"varint,5,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType         ESecurityType     `protobuf:"varint,6,opt,name=securityType,proto3,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	OrderIndex           int64             `protobuf:"varint,7,opt,name=OrderIndex,proto3" json:"OrderIndex,omitempty"`
	OrderType            int32             `protobuf:"varint,8,opt,name=OrderType,proto3" json:"OrderType,omitempty"`
	OrderPrice           int64             `protobuf:"varint,9,opt,name=OrderPrice,proto3" json:"OrderPrice,omitempty"`
	OrderQty             int64             `protobuf:"varint,10,opt,name=OrderQty,proto3" json:"OrderQty,omitempty"`
	OrderBSFlag          int32             `protobuf:"varint,11,opt,name=OrderBSFlag,proto3" json:"OrderBSFlag,omitempty"`
	ChannelNo            int32             `protobuf:"varint,12,opt,name=ChannelNo,proto3" json:"ChannelNo,omitempty"`
	ExchangeDate         int32             `protobuf:"varint,13,opt,name=ExchangeDate,proto3" json:"ExchangeDate,omitempty"`
	ExchangeTime         int32             `protobuf:"varint,14,opt,name=ExchangeTime,proto3" json:"ExchangeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MDOrder) Reset()         { *m = MDOrder{} }
func (m *MDOrder) String() string { return proto.CompactTextString(m) }
func (*MDOrder) ProtoMessage()    {}
func (*MDOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dbe25d0d9b696f, []int{0}
}

func (m *MDOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MDOrder.Unmarshal(m, b)
}
func (m *MDOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MDOrder.Marshal(b, m, deterministic)
}
func (m *MDOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MDOrder.Merge(m, src)
}
func (m *MDOrder) XXX_Size() int {
	return xxx_messageInfo_MDOrder.Size(m)
}
func (m *MDOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MDOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MDOrder proto.InternalMessageInfo

func (m *MDOrder) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *MDOrder) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *MDOrder) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *MDOrder) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *MDOrder) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *MDOrder) GetSecurityType() ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return ESecurityType_DefaultSecurityType
}

func (m *MDOrder) GetOrderIndex() int64 {
	if m != nil {
		return m.OrderIndex
	}
	return 0
}

func (m *MDOrder) GetOrderType() int32 {
	if m != nil {
		return m.OrderType
	}
	return 0
}

func (m *MDOrder) GetOrderPrice() int64 {
	if m != nil {
		return m.OrderPrice
	}
	return 0
}

func (m *MDOrder) GetOrderQty() int64 {
	if m != nil {
		return m.OrderQty
	}
	return 0
}

func (m *MDOrder) GetOrderBSFlag() int32 {
	if m != nil {
		return m.OrderBSFlag
	}
	return 0
}

func (m *MDOrder) GetChannelNo() int32 {
	if m != nil {
		return m.ChannelNo
	}
	return 0
}

func (m *MDOrder) GetExchangeDate() int32 {
	if m != nil {
		return m.ExchangeDate
	}
	return 0
}

func (m *MDOrder) GetExchangeTime() int32 {
	if m != nil {
		return m.ExchangeTime
	}
	return 0
}

func init() {
	proto.RegisterType((*MDOrder)(nil), "com.htsc.mdc.insight.model.MDOrder")
}

func init() { proto.RegisterFile("MDOrder.proto", fileDescriptor_27dbe25d0d9b696f) }

var fileDescriptor_27dbe25d0d9b696f = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdd, 0x6a, 0xfa, 0x40,
	0x10, 0xc5, 0xd9, 0xbf, 0xdf, 0xe3, 0x07, 0x7f, 0xb6, 0xd0, 0x2e, 0xa1, 0x94, 0x54, 0xda, 0x92,
	0xab, 0xa5, 0xb4, 0x6f, 0xa0, 0xb1, 0xe8, 0x85, 0xad, 0x26, 0xbe, 0xc0, 0x76, 0xb3, 0x98, 0x80,
	0x49, 0x24, 0x59, 0x41, 0xdf, 0xa6, 0xd0, 0x17, 0x2d, 0x19, 0x35, 0x26, 0x0a, 0xde, 0xe5, 0xfc,
	0x76, 0xce, 0xcc, 0x9e, 0xec, 0x40, 0x77, 0x6a, 0x7f, 0x25, 0x9e, 0x4a, 0xf8, 0x3a, 0x89, 0x75,
	0x4c, 0x0d, 0x19, 0x87, 0xdc, 0xd7, 0xa9, 0xe4, 0xa1, 0x27, 0x79, 0x10, 0xa5, 0xc1, 0xd2, 0xd7,
	0x3c, 0x8c, 0x3d, 0xb5, 0x32, 0xee, 0x46, 0xae, 0x92, 0x9b, 0x24, 0xd0, 0xbb, 0x89, 0xed, 0xc6,
	0x9b, 0x44, 0xaa, 0xbd, 0xc9, 0xb8, 0xc9, 0x0f, 0x16, 0xbb, 0xf5, 0x01, 0xf6, 0x7f, 0xab, 0xd0,
	0x38, 0xf4, 0xa6, 0x2f, 0xd0, 0x1b, 0x2f, 0xdc, 0xe1, 0xc9, 0xce, 0x88, 0x49, 0xac, 0x96, 0x73,
	0x46, 0xe9, 0x2d, 0xd4, 0xa7, 0xb6, 0x2d, 0xb4, 0x62, 0xff, 0x4c, 0x62, 0xd5, 0x9c, 0x83, 0xda,
	0xf3, 0x45, 0x10, 0x2a, 0x56, 0x39, 0xf2, 0x4c, 0xd1, 0x27, 0xe8, 0xda, 0x42, 0x8b, 0xec, 0x3b,
	0xd5, 0x22, 0x5c, 0xb3, 0xaa, 0x49, 0xac, 0x8a, 0x53, 0x86, 0x74, 0x0e, 0xff, 0xd3, 0xb3, 0x8b,
	0xb3, 0x9a, 0x49, 0xac, 0xde, 0xdb, 0x33, 0x2f, 0xc5, 0xc5, 0x98, 0xfc, 0x22, 0xa5, 0x73, 0x61,
	0xa7, 0x23, 0xe8, 0xa4, 0x85, 0xc8, 0xac, 0x8e, 0xed, 0x1e, 0xaf, 0xb6, 0xcb, 0x0a, 0x9d, 0x92,
	0x8d, 0x3e, 0x00, 0xe0, 0x0f, 0x9a, 0x44, 0x9e, 0xda, 0xb2, 0x06, 0x5e, 0xbe, 0x40, 0xe8, 0x3d,
	0xb4, 0x50, 0xe1, 0x8c, 0x26, 0x46, 0x3f, 0x81, 0xdc, 0x3d, 0x4b, 0x02, 0xa9, 0x58, 0xab, 0xe0,
	0x46, 0x42, 0x0d, 0x68, 0xa2, 0x9a, 0xeb, 0x1d, 0x03, 0x3c, 0xcd, 0x35, 0x35, 0xa1, 0x8d, 0xdf,
	0x03, 0xf7, 0x63, 0x25, 0x96, 0xac, 0x8d, 0xbd, 0x8b, 0x28, 0x9b, 0x3d, 0xf4, 0x45, 0x14, 0xa9,
	0xd5, 0x67, 0xcc, 0x3a, 0xfb, 0xd9, 0x39, 0xa0, 0x7d, 0xe8, 0x8c, 0xb6, 0xd2, 0x17, 0xd1, 0x52,
	0xe1, 0x7b, 0x75, 0xb1, 0xa0, 0xc4, 0x8a, 0x35, 0xf8, 0x76, 0xbd, 0x72, 0x4d, 0xc6, 0x06, 0xaf,
	0x70, 0x65, 0xe3, 0x06, 0xc7, 0xe5, 0x9c, 0x65, 0x1b, 0x95, 0x8e, 0xc9, 0x0f, 0x21, 0xdf, 0x75,
	0x5c, 0xaf, 0xf7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x00, 0x98, 0x1f, 0xb9, 0x02, 0x00,
	0x00,
}
