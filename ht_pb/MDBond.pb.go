// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MDBond.proto

/*
Package com_htsc_mdc_insight_model is a generated protocol buffer package.

It is generated from these files:
	MDBond.proto

It has these top-level messages:
	MDBond
*/
package com_htsc_mdc_insight_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import com_htsc_mdc_model "."
import com_htsc_mdc_model1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 债券信息
type MDBond struct {
	HTSCSecurityID        string                               `protobuf:"bytes,1,opt,name=HTSCSecurityID" json:"HTSCSecurityID,omitempty"`
	MDDate                int32                                `protobuf:"varint,2,opt,name=MDDate" json:"MDDate,omitempty"`
	MDTime                int32                                `protobuf:"varint,3,opt,name=MDTime" json:"MDTime,omitempty"`
	DataTimestamp         int64                                `protobuf:"varint,4,opt,name=DataTimestamp" json:"DataTimestamp,omitempty"`
	TradingPhaseCode      string                               `protobuf:"bytes,5,opt,name=TradingPhaseCode" json:"TradingPhaseCode,omitempty"`
	SecurityIDSource      com_htsc_mdc_model.ESecurityIDSource `protobuf:"varint,6,opt,name=securityIDSource,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType          com_htsc_mdc_model1.ESecurityType    `protobuf:"varint,7,opt,name=securityType,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	MaxPx                 int64                                `protobuf:"varint,8,opt,name=MaxPx" json:"MaxPx,omitempty"`
	MinPx                 int64                                `protobuf:"varint,9,opt,name=MinPx" json:"MinPx,omitempty"`
	PreClosePx            int64                                `protobuf:"varint,10,opt,name=PreClosePx" json:"PreClosePx,omitempty"`
	NumTrades             int64                                `protobuf:"varint,11,opt,name=NumTrades" json:"NumTrades,omitempty"`
	TotalVolumeTrade      int64                                `protobuf:"varint,12,opt,name=TotalVolumeTrade" json:"TotalVolumeTrade,omitempty"`
	TotalValueTrade       int64                                `protobuf:"varint,13,opt,name=TotalValueTrade" json:"TotalValueTrade,omitempty"`
	LastPx                int64                                `protobuf:"varint,14,opt,name=LastPx" json:"LastPx,omitempty"`
	OpenPx                int64                                `protobuf:"varint,15,opt,name=OpenPx" json:"OpenPx,omitempty"`
	ClosePx               int64                                `protobuf:"varint,16,opt,name=ClosePx" json:"ClosePx,omitempty"`
	HighPx                int64                                `protobuf:"varint,17,opt,name=HighPx" json:"HighPx,omitempty"`
	LowPx                 int64                                `protobuf:"varint,18,opt,name=LowPx" json:"LowPx,omitempty"`
	DiffPx1               int64                                `protobuf:"varint,19,opt,name=DiffPx1" json:"DiffPx1,omitempty"`
	DiffPx2               int64                                `protobuf:"varint,20,opt,name=DiffPx2" json:"DiffPx2,omitempty"`
	TotalBuyQty           int64                                `protobuf:"varint,21,opt,name=TotalBuyQty" json:"TotalBuyQty,omitempty"`
	TotalSellQty          int64                                `protobuf:"varint,22,opt,name=TotalSellQty" json:"TotalSellQty,omitempty"`
	WeightedAvgBuyPx      int64                                `protobuf:"varint,23,opt,name=WeightedAvgBuyPx" json:"WeightedAvgBuyPx,omitempty"`
	WeightedAvgSellPx     int64                                `protobuf:"varint,24,opt,name=WeightedAvgSellPx" json:"WeightedAvgSellPx,omitempty"`
	WithdrawBuyNumber     int64                                `protobuf:"varint,25,opt,name=WithdrawBuyNumber" json:"WithdrawBuyNumber,omitempty"`
	WithdrawBuyAmount     int64                                `protobuf:"varint,26,opt,name=WithdrawBuyAmount" json:"WithdrawBuyAmount,omitempty"`
	WithdrawBuyMoney      int64                                `protobuf:"varint,27,opt,name=WithdrawBuyMoney" json:"WithdrawBuyMoney,omitempty"`
	WithdrawSellNumber    int64                                `protobuf:"varint,28,opt,name=WithdrawSellNumber" json:"WithdrawSellNumber,omitempty"`
	WithdrawSellAmount    int64                                `protobuf:"varint,29,opt,name=WithdrawSellAmount" json:"WithdrawSellAmount,omitempty"`
	WithdrawSellMoney     int64                                `protobuf:"varint,30,opt,name=WithdrawSellMoney" json:"WithdrawSellMoney,omitempty"`
	TotalBuyNumber        int64                                `protobuf:"varint,31,opt,name=TotalBuyNumber" json:"TotalBuyNumber,omitempty"`
	TotalSellNumber       int64                                `protobuf:"varint,32,opt,name=TotalSellNumber" json:"TotalSellNumber,omitempty"`
	BuyTradeMaxDuration   int64                                `protobuf:"varint,33,opt,name=BuyTradeMaxDuration" json:"BuyTradeMaxDuration,omitempty"`
	SellTradeMaxDuration  int64                                `protobuf:"varint,34,opt,name=SellTradeMaxDuration" json:"SellTradeMaxDuration,omitempty"`
	NumBuyOrders          int32                                `protobuf:"varint,35,opt,name=NumBuyOrders" json:"NumBuyOrders,omitempty"`
	NumSellOrders         int32                                `protobuf:"varint,36,opt,name=NumSellOrders" json:"NumSellOrders,omitempty"`
	YieldToMaturity       int64                                `protobuf:"varint,37,opt,name=YieldToMaturity" json:"YieldToMaturity,omitempty"`
	WeightedAvgPx         int64                                `protobuf:"varint,38,opt,name=WeightedAvgPx" json:"WeightedAvgPx,omitempty"`
	WeightedAvgPxBP       int64                                `protobuf:"varint,39,opt,name=WeightedAvgPxBP" json:"WeightedAvgPxBP,omitempty"`
	PreCloseWeightedAvgPx int64                                `protobuf:"varint,40,opt,name=PreCloseWeightedAvgPx" json:"PreCloseWeightedAvgPx,omitempty"`
	BuyOrderQueue         []int64                              `protobuf:"varint,100,rep,packed,name=BuyOrderQueue" json:"BuyOrderQueue,omitempty"`
	SellOrderQueue        []int64                              `protobuf:"varint,101,rep,packed,name=SellOrderQueue" json:"SellOrderQueue,omitempty"`
	Buy1Price             int64                                `protobuf:"varint,102,opt,name=Buy1Price" json:"Buy1Price,omitempty"`
	Buy1OrderQty          int64                                `protobuf:"varint,103,opt,name=Buy1OrderQty" json:"Buy1OrderQty,omitempty"`
	Buy1NumOrders         int64                                `protobuf:"varint,104,opt,name=Buy1NumOrders" json:"Buy1NumOrders,omitempty"`
	Sell1Price            int64                                `protobuf:"varint,105,opt,name=Sell1Price" json:"Sell1Price,omitempty"`
	Sell1OrderQty         int64                                `protobuf:"varint,106,opt,name=Sell1OrderQty" json:"Sell1OrderQty,omitempty"`
	Sell1NumOrders        int64                                `protobuf:"varint,107,opt,name=Sell1NumOrders" json:"Sell1NumOrders,omitempty"`
	Buy2Price             int64                                `protobuf:"varint,108,opt,name=Buy2Price" json:"Buy2Price,omitempty"`
	Buy2OrderQty          int64                                `protobuf:"varint,109,opt,name=Buy2OrderQty" json:"Buy2OrderQty,omitempty"`
	Buy2NumOrders         int64                                `protobuf:"varint,110,opt,name=Buy2NumOrders" json:"Buy2NumOrders,omitempty"`
	Sell2Price            int64                                `protobuf:"varint,111,opt,name=Sell2Price" json:"Sell2Price,omitempty"`
	Sell2OrderQty         int64                                `protobuf:"varint,112,opt,name=Sell2OrderQty" json:"Sell2OrderQty,omitempty"`
	Sell2NumOrders        int64                                `protobuf:"varint,113,opt,name=Sell2NumOrders" json:"Sell2NumOrders,omitempty"`
	Buy3Price             int64                                `protobuf:"varint,114,opt,name=Buy3Price" json:"Buy3Price,omitempty"`
	Buy3OrderQty          int64                                `protobuf:"varint,115,opt,name=Buy3OrderQty" json:"Buy3OrderQty,omitempty"`
	Buy3NumOrders         int64                                `protobuf:"varint,116,opt,name=Buy3NumOrders" json:"Buy3NumOrders,omitempty"`
	Sell3Price            int64                                `protobuf:"varint,117,opt,name=Sell3Price" json:"Sell3Price,omitempty"`
	Sell3OrderQty         int64                                `protobuf:"varint,118,opt,name=Sell3OrderQty" json:"Sell3OrderQty,omitempty"`
	Sell3NumOrders        int64                                `protobuf:"varint,119,opt,name=Sell3NumOrders" json:"Sell3NumOrders,omitempty"`
	Buy4Price             int64                                `protobuf:"varint,120,opt,name=Buy4Price" json:"Buy4Price,omitempty"`
	Buy4OrderQty          int64                                `protobuf:"varint,121,opt,name=Buy4OrderQty" json:"Buy4OrderQty,omitempty"`
	Buy4NumOrders         int64                                `protobuf:"varint,122,opt,name=Buy4NumOrders" json:"Buy4NumOrders,omitempty"`
	Sell4Price            int64                                `protobuf:"varint,123,opt,name=Sell4Price" json:"Sell4Price,omitempty"`
	Sell4OrderQty         int64                                `protobuf:"varint,124,opt,name=Sell4OrderQty" json:"Sell4OrderQty,omitempty"`
	Sell4NumOrders        int64                                `protobuf:"varint,125,opt,name=Sell4NumOrders" json:"Sell4NumOrders,omitempty"`
	Buy5Price             int64                                `protobuf:"varint,126,opt,name=Buy5Price" json:"Buy5Price,omitempty"`
	Buy5OrderQty          int64                                `protobuf:"varint,127,opt,name=Buy5OrderQty" json:"Buy5OrderQty,omitempty"`
	Buy5NumOrders         int64                                `protobuf:"varint,128,opt,name=Buy5NumOrders" json:"Buy5NumOrders,omitempty"`
	Sell5Price            int64                                `protobuf:"varint,129,opt,name=Sell5Price" json:"Sell5Price,omitempty"`
	Sell5OrderQty         int64                                `protobuf:"varint,130,opt,name=Sell5OrderQty" json:"Sell5OrderQty,omitempty"`
	Sell5NumOrders        int64                                `protobuf:"varint,131,opt,name=Sell5NumOrders" json:"Sell5NumOrders,omitempty"`
	Buy6Price             int64                                `protobuf:"varint,132,opt,name=Buy6Price" json:"Buy6Price,omitempty"`
	Buy6OrderQty          int64                                `protobuf:"varint,133,opt,name=Buy6OrderQty" json:"Buy6OrderQty,omitempty"`
	Buy6NumOrders         int64                                `protobuf:"varint,134,opt,name=Buy6NumOrders" json:"Buy6NumOrders,omitempty"`
	Sell6Price            int64                                `protobuf:"varint,135,opt,name=Sell6Price" json:"Sell6Price,omitempty"`
	Sell6OrderQty         int64                                `protobuf:"varint,136,opt,name=Sell6OrderQty" json:"Sell6OrderQty,omitempty"`
	Sell6NumOrders        int64                                `protobuf:"varint,137,opt,name=Sell6NumOrders" json:"Sell6NumOrders,omitempty"`
	Buy7Price             int64                                `protobuf:"varint,138,opt,name=Buy7Price" json:"Buy7Price,omitempty"`
	Buy7OrderQty          int64                                `protobuf:"varint,139,opt,name=Buy7OrderQty" json:"Buy7OrderQty,omitempty"`
	Buy7NumOrders         int64                                `protobuf:"varint,140,opt,name=Buy7NumOrders" json:"Buy7NumOrders,omitempty"`
	Sell7Price            int64                                `protobuf:"varint,141,opt,name=Sell7Price" json:"Sell7Price,omitempty"`
	Sell7OrderQty         int64                                `protobuf:"varint,142,opt,name=Sell7OrderQty" json:"Sell7OrderQty,omitempty"`
	Sell7NumOrders        int64                                `protobuf:"varint,143,opt,name=Sell7NumOrders" json:"Sell7NumOrders,omitempty"`
	Buy8Price             int64                                `protobuf:"varint,144,opt,name=Buy8Price" json:"Buy8Price,omitempty"`
	Buy8OrderQty          int64                                `protobuf:"varint,145,opt,name=Buy8OrderQty" json:"Buy8OrderQty,omitempty"`
	Buy8NumOrders         int64                                `protobuf:"varint,146,opt,name=Buy8NumOrders" json:"Buy8NumOrders,omitempty"`
	Sell8Price            int64                                `protobuf:"varint,147,opt,name=Sell8Price" json:"Sell8Price,omitempty"`
	Sell8OrderQty         int64                                `protobuf:"varint,148,opt,name=Sell8OrderQty" json:"Sell8OrderQty,omitempty"`
	Sell8NumOrders        int64                                `protobuf:"varint,149,opt,name=Sell8NumOrders" json:"Sell8NumOrders,omitempty"`
	Buy9Price             int64                                `protobuf:"varint,150,opt,name=Buy9Price" json:"Buy9Price,omitempty"`
	Buy9OrderQty          int64                                `protobuf:"varint,151,opt,name=Buy9OrderQty" json:"Buy9OrderQty,omitempty"`
	Buy9NumOrders         int64                                `protobuf:"varint,152,opt,name=Buy9NumOrders" json:"Buy9NumOrders,omitempty"`
	Sell9Price            int64                                `protobuf:"varint,153,opt,name=Sell9Price" json:"Sell9Price,omitempty"`
	Sell9OrderQty         int64                                `protobuf:"varint,154,opt,name=Sell9OrderQty" json:"Sell9OrderQty,omitempty"`
	Sell9NumOrders        int64                                `protobuf:"varint,155,opt,name=Sell9NumOrders" json:"Sell9NumOrders,omitempty"`
	Buy10Price            int64                                `protobuf:"varint,156,opt,name=Buy10Price" json:"Buy10Price,omitempty"`
	Buy10OrderQty         int64                                `protobuf:"varint,157,opt,name=Buy10OrderQty" json:"Buy10OrderQty,omitempty"`
	Buy10NumOrders        int64                                `protobuf:"varint,158,opt,name=Buy10NumOrders" json:"Buy10NumOrders,omitempty"`
	Sell10Price           int64                                `protobuf:"varint,159,opt,name=Sell10Price" json:"Sell10Price,omitempty"`
	Sell10OrderQty        int64                                `protobuf:"varint,160,opt,name=Sell10OrderQty" json:"Sell10OrderQty,omitempty"`
	Sell10NumOrders       int64                                `protobuf:"varint,163,opt,name=Sell10NumOrders" json:"Sell10NumOrders,omitempty"`
}

func (m *MDBond) Reset()                    { *m = MDBond{} }
func (m *MDBond) String() string            { return proto.CompactTextString(m) }
func (*MDBond) ProtoMessage()               {}
func (*MDBond) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MDBond) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *MDBond) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *MDBond) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *MDBond) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *MDBond) GetTradingPhaseCode() string {
	if m != nil {
		return m.TradingPhaseCode
	}
	return ""
}

func (m *MDBond) GetSecurityIDSource() com_htsc_mdc_model.ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return com_htsc_mdc_model.ESecurityIDSource_DefaultSecurityIDSource
}

func (m *MDBond) GetSecurityType() com_htsc_mdc_model1.ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return com_htsc_mdc_model1.ESecurityType_DefaultSecurityType
}

func (m *MDBond) GetMaxPx() int64 {
	if m != nil {
		return m.MaxPx
	}
	return 0
}

func (m *MDBond) GetMinPx() int64 {
	if m != nil {
		return m.MinPx
	}
	return 0
}

func (m *MDBond) GetPreClosePx() int64 {
	if m != nil {
		return m.PreClosePx
	}
	return 0
}

func (m *MDBond) GetNumTrades() int64 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *MDBond) GetTotalVolumeTrade() int64 {
	if m != nil {
		return m.TotalVolumeTrade
	}
	return 0
}

func (m *MDBond) GetTotalValueTrade() int64 {
	if m != nil {
		return m.TotalValueTrade
	}
	return 0
}

func (m *MDBond) GetLastPx() int64 {
	if m != nil {
		return m.LastPx
	}
	return 0
}

func (m *MDBond) GetOpenPx() int64 {
	if m != nil {
		return m.OpenPx
	}
	return 0
}

func (m *MDBond) GetClosePx() int64 {
	if m != nil {
		return m.ClosePx
	}
	return 0
}

func (m *MDBond) GetHighPx() int64 {
	if m != nil {
		return m.HighPx
	}
	return 0
}

func (m *MDBond) GetLowPx() int64 {
	if m != nil {
		return m.LowPx
	}
	return 0
}

func (m *MDBond) GetDiffPx1() int64 {
	if m != nil {
		return m.DiffPx1
	}
	return 0
}

func (m *MDBond) GetDiffPx2() int64 {
	if m != nil {
		return m.DiffPx2
	}
	return 0
}

func (m *MDBond) GetTotalBuyQty() int64 {
	if m != nil {
		return m.TotalBuyQty
	}
	return 0
}

func (m *MDBond) GetTotalSellQty() int64 {
	if m != nil {
		return m.TotalSellQty
	}
	return 0
}

func (m *MDBond) GetWeightedAvgBuyPx() int64 {
	if m != nil {
		return m.WeightedAvgBuyPx
	}
	return 0
}

func (m *MDBond) GetWeightedAvgSellPx() int64 {
	if m != nil {
		return m.WeightedAvgSellPx
	}
	return 0
}

func (m *MDBond) GetWithdrawBuyNumber() int64 {
	if m != nil {
		return m.WithdrawBuyNumber
	}
	return 0
}

func (m *MDBond) GetWithdrawBuyAmount() int64 {
	if m != nil {
		return m.WithdrawBuyAmount
	}
	return 0
}

func (m *MDBond) GetWithdrawBuyMoney() int64 {
	if m != nil {
		return m.WithdrawBuyMoney
	}
	return 0
}

func (m *MDBond) GetWithdrawSellNumber() int64 {
	if m != nil {
		return m.WithdrawSellNumber
	}
	return 0
}

func (m *MDBond) GetWithdrawSellAmount() int64 {
	if m != nil {
		return m.WithdrawSellAmount
	}
	return 0
}

func (m *MDBond) GetWithdrawSellMoney() int64 {
	if m != nil {
		return m.WithdrawSellMoney
	}
	return 0
}

func (m *MDBond) GetTotalBuyNumber() int64 {
	if m != nil {
		return m.TotalBuyNumber
	}
	return 0
}

func (m *MDBond) GetTotalSellNumber() int64 {
	if m != nil {
		return m.TotalSellNumber
	}
	return 0
}

func (m *MDBond) GetBuyTradeMaxDuration() int64 {
	if m != nil {
		return m.BuyTradeMaxDuration
	}
	return 0
}

func (m *MDBond) GetSellTradeMaxDuration() int64 {
	if m != nil {
		return m.SellTradeMaxDuration
	}
	return 0
}

func (m *MDBond) GetNumBuyOrders() int32 {
	if m != nil {
		return m.NumBuyOrders
	}
	return 0
}

func (m *MDBond) GetNumSellOrders() int32 {
	if m != nil {
		return m.NumSellOrders
	}
	return 0
}

func (m *MDBond) GetYieldToMaturity() int64 {
	if m != nil {
		return m.YieldToMaturity
	}
	return 0
}

func (m *MDBond) GetWeightedAvgPx() int64 {
	if m != nil {
		return m.WeightedAvgPx
	}
	return 0
}

func (m *MDBond) GetWeightedAvgPxBP() int64 {
	if m != nil {
		return m.WeightedAvgPxBP
	}
	return 0
}

func (m *MDBond) GetPreCloseWeightedAvgPx() int64 {
	if m != nil {
		return m.PreCloseWeightedAvgPx
	}
	return 0
}

func (m *MDBond) GetBuyOrderQueue() []int64 {
	if m != nil {
		return m.BuyOrderQueue
	}
	return nil
}

func (m *MDBond) GetSellOrderQueue() []int64 {
	if m != nil {
		return m.SellOrderQueue
	}
	return nil
}

func (m *MDBond) GetBuy1Price() int64 {
	if m != nil {
		return m.Buy1Price
	}
	return 0
}

func (m *MDBond) GetBuy1OrderQty() int64 {
	if m != nil {
		return m.Buy1OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy1NumOrders() int64 {
	if m != nil {
		return m.Buy1NumOrders
	}
	return 0
}

func (m *MDBond) GetSell1Price() int64 {
	if m != nil {
		return m.Sell1Price
	}
	return 0
}

func (m *MDBond) GetSell1OrderQty() int64 {
	if m != nil {
		return m.Sell1OrderQty
	}
	return 0
}

func (m *MDBond) GetSell1NumOrders() int64 {
	if m != nil {
		return m.Sell1NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy2Price() int64 {
	if m != nil {
		return m.Buy2Price
	}
	return 0
}

func (m *MDBond) GetBuy2OrderQty() int64 {
	if m != nil {
		return m.Buy2OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy2NumOrders() int64 {
	if m != nil {
		return m.Buy2NumOrders
	}
	return 0
}

func (m *MDBond) GetSell2Price() int64 {
	if m != nil {
		return m.Sell2Price
	}
	return 0
}

func (m *MDBond) GetSell2OrderQty() int64 {
	if m != nil {
		return m.Sell2OrderQty
	}
	return 0
}

func (m *MDBond) GetSell2NumOrders() int64 {
	if m != nil {
		return m.Sell2NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy3Price() int64 {
	if m != nil {
		return m.Buy3Price
	}
	return 0
}

func (m *MDBond) GetBuy3OrderQty() int64 {
	if m != nil {
		return m.Buy3OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy3NumOrders() int64 {
	if m != nil {
		return m.Buy3NumOrders
	}
	return 0
}

func (m *MDBond) GetSell3Price() int64 {
	if m != nil {
		return m.Sell3Price
	}
	return 0
}

func (m *MDBond) GetSell3OrderQty() int64 {
	if m != nil {
		return m.Sell3OrderQty
	}
	return 0
}

func (m *MDBond) GetSell3NumOrders() int64 {
	if m != nil {
		return m.Sell3NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy4Price() int64 {
	if m != nil {
		return m.Buy4Price
	}
	return 0
}

func (m *MDBond) GetBuy4OrderQty() int64 {
	if m != nil {
		return m.Buy4OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy4NumOrders() int64 {
	if m != nil {
		return m.Buy4NumOrders
	}
	return 0
}

func (m *MDBond) GetSell4Price() int64 {
	if m != nil {
		return m.Sell4Price
	}
	return 0
}

func (m *MDBond) GetSell4OrderQty() int64 {
	if m != nil {
		return m.Sell4OrderQty
	}
	return 0
}

func (m *MDBond) GetSell4NumOrders() int64 {
	if m != nil {
		return m.Sell4NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy5Price() int64 {
	if m != nil {
		return m.Buy5Price
	}
	return 0
}

func (m *MDBond) GetBuy5OrderQty() int64 {
	if m != nil {
		return m.Buy5OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy5NumOrders() int64 {
	if m != nil {
		return m.Buy5NumOrders
	}
	return 0
}

func (m *MDBond) GetSell5Price() int64 {
	if m != nil {
		return m.Sell5Price
	}
	return 0
}

func (m *MDBond) GetSell5OrderQty() int64 {
	if m != nil {
		return m.Sell5OrderQty
	}
	return 0
}

func (m *MDBond) GetSell5NumOrders() int64 {
	if m != nil {
		return m.Sell5NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy6Price() int64 {
	if m != nil {
		return m.Buy6Price
	}
	return 0
}

func (m *MDBond) GetBuy6OrderQty() int64 {
	if m != nil {
		return m.Buy6OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy6NumOrders() int64 {
	if m != nil {
		return m.Buy6NumOrders
	}
	return 0
}

func (m *MDBond) GetSell6Price() int64 {
	if m != nil {
		return m.Sell6Price
	}
	return 0
}

func (m *MDBond) GetSell6OrderQty() int64 {
	if m != nil {
		return m.Sell6OrderQty
	}
	return 0
}

func (m *MDBond) GetSell6NumOrders() int64 {
	if m != nil {
		return m.Sell6NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy7Price() int64 {
	if m != nil {
		return m.Buy7Price
	}
	return 0
}

func (m *MDBond) GetBuy7OrderQty() int64 {
	if m != nil {
		return m.Buy7OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy7NumOrders() int64 {
	if m != nil {
		return m.Buy7NumOrders
	}
	return 0
}

func (m *MDBond) GetSell7Price() int64 {
	if m != nil {
		return m.Sell7Price
	}
	return 0
}

func (m *MDBond) GetSell7OrderQty() int64 {
	if m != nil {
		return m.Sell7OrderQty
	}
	return 0
}

func (m *MDBond) GetSell7NumOrders() int64 {
	if m != nil {
		return m.Sell7NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy8Price() int64 {
	if m != nil {
		return m.Buy8Price
	}
	return 0
}

func (m *MDBond) GetBuy8OrderQty() int64 {
	if m != nil {
		return m.Buy8OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy8NumOrders() int64 {
	if m != nil {
		return m.Buy8NumOrders
	}
	return 0
}

func (m *MDBond) GetSell8Price() int64 {
	if m != nil {
		return m.Sell8Price
	}
	return 0
}

func (m *MDBond) GetSell8OrderQty() int64 {
	if m != nil {
		return m.Sell8OrderQty
	}
	return 0
}

func (m *MDBond) GetSell8NumOrders() int64 {
	if m != nil {
		return m.Sell8NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy9Price() int64 {
	if m != nil {
		return m.Buy9Price
	}
	return 0
}

func (m *MDBond) GetBuy9OrderQty() int64 {
	if m != nil {
		return m.Buy9OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy9NumOrders() int64 {
	if m != nil {
		return m.Buy9NumOrders
	}
	return 0
}

func (m *MDBond) GetSell9Price() int64 {
	if m != nil {
		return m.Sell9Price
	}
	return 0
}

func (m *MDBond) GetSell9OrderQty() int64 {
	if m != nil {
		return m.Sell9OrderQty
	}
	return 0
}

func (m *MDBond) GetSell9NumOrders() int64 {
	if m != nil {
		return m.Sell9NumOrders
	}
	return 0
}

func (m *MDBond) GetBuy10Price() int64 {
	if m != nil {
		return m.Buy10Price
	}
	return 0
}

func (m *MDBond) GetBuy10OrderQty() int64 {
	if m != nil {
		return m.Buy10OrderQty
	}
	return 0
}

func (m *MDBond) GetBuy10NumOrders() int64 {
	if m != nil {
		return m.Buy10NumOrders
	}
	return 0
}

func (m *MDBond) GetSell10Price() int64 {
	if m != nil {
		return m.Sell10Price
	}
	return 0
}

func (m *MDBond) GetSell10OrderQty() int64 {
	if m != nil {
		return m.Sell10OrderQty
	}
	return 0
}

func (m *MDBond) GetSell10NumOrders() int64 {
	if m != nil {
		return m.Sell10NumOrders
	}
	return 0
}

func init() {
	proto.RegisterType((*MDBond)(nil), "com.htsc.mdc.insight.model.MDBond")
}

func init() { proto.RegisterFile("MDBond.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x97, 0xe9, 0x6f, 0xdb, 0xb6,
	0x1b, 0xc7, 0xa1, 0x5f, 0x7f, 0x6d, 0x57, 0x36, 0x4d, 0x52, 0x26, 0x6d, 0xb9, 0xac, 0x69, 0x9d,
	0xb4, 0x69, 0xbd, 0x61, 0xf0, 0x12, 0xd9, 0xf1, 0xf1, 0xb2, 0x8e, 0x0b, 0x64, 0x40, 0x93, 0x2a,
	0x07, 0x36, 0xec, 0xa5, 0x6a, 0x33, 0xb1, 0x36, 0xcb, 0xca, 0x74, 0x34, 0xd2, 0xee, 0xfb, 0xbe,
	0xef, 0x7b, 0x05, 0xf6, 0x4f, 0xee, 0xe5, 0xc0, 0xc3, 0x7c, 0x48, 0x2a, 0xe8, 0xbb, 0xf0, 0xcb,
	0x87, 0xfc, 0x3c, 0x1f, 0x4a, 0xa1, 0x21, 0x34, 0xb5, 0xd5, 0xeb, 0x46, 0xe3, 0x41, 0xed, 0x28,
	0x8e, 0xd2, 0x08, 0x2f, 0xf4, 0xa3, 0xb0, 0x36, 0x4c, 0x93, 0x7e, 0x2d, 0x1c, 0xf4, 0x6b, 0xc1,
	0x38, 0x09, 0x0e, 0x87, 0x69, 0x2d, 0x8c, 0x06, 0x74, 0xb4, 0x70, 0xe5, 0xee, 0x1e, 0xed, 0x67,
	0x71, 0x90, 0x16, 0xcf, 0xf7, 0xf6, 0xa2, 0x2c, 0xee, 0x53, 0xb1, 0x68, 0x61, 0x4e, 0x4d, 0xec,
	0x17, 0x47, 0x32, 0x5c, 0xfe, 0x77, 0x11, 0x9d, 0x11, 0x5b, 0xe3, 0x5b, 0x68, 0x7a, 0x73, 0x7f,
	0x6f, 0x03, 0x56, 0x13, 0xa7, 0xe2, 0x54, 0xcf, 0xed, 0x5a, 0x29, 0xbe, 0xcc, 0x56, 0xf4, 0xfc,
	0x94, 0x92, 0xff, 0x55, 0x9c, 0xea, 0xe9, 0x5d, 0x39, 0x12, 0xf9, 0x7e, 0x10, 0x52, 0x72, 0x6a,
	0x92, 0xb3, 0x11, 0xbe, 0x89, 0x2e, 0xf4, 0xfc, 0xd4, 0x67, 0x7f, 0x27, 0xa9, 0x1f, 0x1e, 0x91,
	0xff, 0x57, 0x9c, 0xea, 0xa9, 0x5d, 0x33, 0xc4, 0xcf, 0xa0, 0xd9, 0xfd, 0xd8, 0x1f, 0x04, 0xe3,
	0x43, 0x6f, 0xe8, 0x27, 0x74, 0x23, 0x1a, 0x50, 0x72, 0x9a, 0xf3, 0x4b, 0x39, 0xde, 0x41, 0xb3,
	0x89, 0xe5, 0x48, 0xce, 0x54, 0x9c, 0xea, 0xb4, 0xbb, 0x52, 0x33, 0x4e, 0x86, 0x9f, 0x48, 0xad,
	0x74, 0x20, 0xbb, 0xa5, 0xe5, 0xf8, 0x2e, 0x9a, 0x4a, 0xb4, 0xd3, 0x21, 0x67, 0xf9, 0x76, 0x4b,
	0x8f, 0xdd, 0x8e, 0x15, 0xee, 0x1a, 0xcb, 0xf0, 0x3c, 0x3a, 0xbd, 0xe5, 0xe7, 0x5e, 0x4e, 0x9e,
	0xe0, 0x8e, 0x62, 0xc0, 0xd3, 0x60, 0xec, 0xe5, 0xe4, 0x9c, 0x4c, 0xd9, 0x00, 0x5f, 0x43, 0xc8,
	0x8b, 0xe9, 0xc6, 0x28, 0x4a, 0xa8, 0x97, 0x13, 0xc4, 0xa7, 0xb4, 0x04, 0x5f, 0x45, 0xe7, 0xb6,
	0xb3, 0x90, 0xc9, 0xd3, 0x84, 0x9c, 0xe7, 0xd3, 0x10, 0xf0, 0xf3, 0x8a, 0x52, 0x7f, 0xf4, 0x42,
	0x34, 0xca, 0x42, 0xca, 0x43, 0x32, 0xc5, 0x8b, 0x4a, 0x39, 0xae, 0xa2, 0x19, 0x91, 0xf9, 0xa3,
	0x4c, 0x96, 0x5e, 0xe0, 0xa5, 0x76, 0xcc, 0x9e, 0xe1, 0x3d, 0x3f, 0x49, 0xbd, 0x9c, 0x4c, 0xf3,
	0x02, 0x39, 0x62, 0xf9, 0xfd, 0x23, 0xca, 0x14, 0x66, 0x44, 0x2e, 0x46, 0x98, 0xa0, 0xb3, 0x13,
	0x81, 0x59, 0x3e, 0x31, 0x19, 0xb2, 0x15, 0x9b, 0xc1, 0xe1, 0xd0, 0xcb, 0xc9, 0x45, 0xb1, 0x42,
	0x8c, 0xd8, 0x59, 0xdc, 0x8b, 0x8e, 0xbd, 0x9c, 0x60, 0x71, 0x16, 0x7c, 0xc0, 0xf6, 0xe9, 0x05,
	0x07, 0x07, 0x5e, 0xbe, 0x46, 0xe6, 0xc4, 0x3e, 0x72, 0x08, 0x33, 0x2e, 0x99, 0xd7, 0x67, 0x5c,
	0x5c, 0x41, 0xe7, 0x79, 0xfb, 0xdd, 0xac, 0xd8, 0x49, 0x0b, 0x72, 0x89, 0xcf, 0xea, 0x11, 0x5e,
	0x46, 0x53, 0x7c, 0xb8, 0x47, 0x47, 0x23, 0x56, 0x72, 0x99, 0x97, 0x18, 0x19, 0x3b, 0xc7, 0x17,
	0x29, 0xfb, 0xf7, 0xa1, 0x83, 0x3b, 0x0f, 0x0f, 0xbb, 0x59, 0xe1, 0xe5, 0xe4, 0x8a, 0x38, 0x47,
	0x3b, 0xc7, 0xcf, 0xa2, 0x8b, 0x5a, 0xc6, 0x76, 0xf0, 0x72, 0x42, 0x78, 0x71, 0x79, 0x82, 0x57,
	0x07, 0xe9, 0x70, 0x10, 0xfb, 0xc7, 0xdd, 0xac, 0xd8, 0xce, 0xc2, 0x07, 0x34, 0x26, 0x4f, 0xca,
	0x6a, 0x7b, 0xc2, 0xaa, 0xbe, 0x13, 0x46, 0xd9, 0x38, 0x25, 0x0b, 0xa5, 0x6a, 0x31, 0xc1, 0xbb,
	0x86, 0x70, 0x2b, 0x1a, 0xd3, 0x82, 0x3c, 0x25, 0xbb, 0xb6, 0x72, 0x5c, 0x43, 0x78, 0x92, 0xb1,
	0xce, 0x64, 0x23, 0x57, 0x79, 0xf5, 0x09, 0x33, 0x76, 0xbd, 0x6c, 0x65, 0xb1, 0x5c, 0x2f, 0x7b,
	0xd1, 0x3a, 0x67, 0xa9, 0x68, 0xe6, 0x9a, 0xd9, 0xb9, 0x9a, 0x60, 0xb7, 0xcc, 0xe4, 0x11, 0xc9,
	0x4e, 0xae, 0xf3, 0x52, 0x2b, 0x55, 0xef, 0xac, 0xd6, 0x72, 0x45, 0x7b, 0x67, 0xb5, 0x7e, 0x57,
	0xd1, 0x5c, 0x37, 0x2b, 0xf8, 0xfb, 0xbb, 0xe5, 0xe7, 0xbd, 0x2c, 0xf6, 0xd3, 0x20, 0x1a, 0x93,
	0x25, 0x5e, 0x7d, 0xd2, 0x14, 0x76, 0xd1, 0x3c, 0x5b, 0x5f, 0x5a, 0xb2, 0xcc, 0x97, 0x9c, 0x38,
	0xc7, 0xde, 0xa5, 0xed, 0x2c, 0xec, 0x66, 0xc5, 0xfd, 0x78, 0x40, 0xe3, 0x84, 0xdc, 0xe0, 0x77,
	0x9c, 0x91, 0xb1, 0x9b, 0x6e, 0x3b, 0x0b, 0xd9, 0x72, 0x59, 0x74, 0x93, 0x17, 0x99, 0x21, 0x33,
	0x7b, 0x29, 0xa0, 0xa3, 0xc1, 0x7e, 0xb4, 0xe5, 0xa7, 0xfc, 0xea, 0x20, 0x2b, 0xc2, 0xcc, 0x8a,
	0xd9, 0x7e, 0xda, 0x6b, 0xe5, 0xe5, 0xe4, 0x96, 0xb8, 0x39, 0x8d, 0x90, 0xed, 0x67, 0x04, 0x5d,
	0x8f, 0xdc, 0x16, 0xfb, 0x59, 0x31, 0x6e, 0xa0, 0x4b, 0x93, 0xfb, 0xc5, 0xdc, 0xb7, 0xca, 0xeb,
	0x4f, 0x9e, 0x64, 0x5d, 0x4c, 0x14, 0x77, 0x32, 0x9a, 0x51, 0x32, 0xa8, 0x9c, 0x62, 0x5d, 0x18,
	0x21, 0x7b, 0xae, 0xca, 0x51, 0x94, 0x51, 0x5e, 0x66, 0xa5, 0xec, 0x56, 0xeb, 0x66, 0xc5, 0x9a,
	0x17, 0x07, 0x7d, 0x4a, 0x0e, 0xc4, 0xad, 0xa6, 0x02, 0x76, 0xca, 0x6c, 0x20, 0xea, 0xd3, 0x82,
	0x1c, 0x8a, 0xff, 0x58, 0x3d, 0x93, 0xfd, 0xac, 0x6d, 0x67, 0xa1, 0x3c, 0xe5, 0xa1, 0x38, 0x15,
	0x23, 0x64, 0xb7, 0x2b, 0x23, 0x4b, 0x50, 0x20, 0x6e, 0x57, 0x48, 0xd8, 0x2e, 0x7c, 0xa4, 0x50,
	0x2f, 0x8b, 0x5d, 0x8c, 0x70, 0x62, 0xa5, 0xc1, 0x5e, 0x11, 0x6f, 0xab, 0x99, 0x4a, 0x2b, 0x57,
	0xc0, 0x46, 0xca, 0xca, 0xd5, 0xad, 0x5c, 0x85, 0x0a, 0x95, 0x95, 0x6b, 0x59, 0xb9, 0x00, 0x1a,
	0x2b, 0x2b, 0xb7, 0x64, 0x25, 0x41, 0x11, 0x58, 0xb9, 0x86, 0x15, 0xa0, 0x8e, 0xc0, 0xca, 0xb5,
	0xad, 0x34, 0xd8, 0xab, 0x60, 0xe5, 0xda, 0x56, 0x75, 0x01, 0x8b, 0x95, 0x55, 0x5d, 0xb7, 0xaa,
	0x2b, 0x54, 0xa2, 0xac, 0xea, 0x96, 0x55, 0x1d, 0x40, 0xa9, 0xb2, 0xaa, 0x97, 0xac, 0x24, 0x28,
	0x03, 0xab, 0xba, 0x61, 0x05, 0xa8, 0x87, 0x60, 0x55, 0xb7, 0xad, 0x34, 0xd8, 0x31, 0x58, 0xd5,
	0x6d, 0xab, 0x86, 0x80, 0xe5, 0xca, 0xaa, 0xa1, 0x5b, 0x35, 0x14, 0xaa, 0x50, 0x56, 0x0d, 0xcb,
	0xaa, 0x01, 0xa0, 0xd7, 0x94, 0x55, 0xa3, 0x64, 0x25, 0x41, 0xaf, 0x83, 0x55, 0xc3, 0xb0, 0x02,
	0xd4, 0x1b, 0x60, 0xd5, 0xb0, 0xad, 0x34, 0xd8, 0x9b, 0x60, 0xd5, 0xb0, 0xad, 0xd6, 0x05, 0xec,
	0x2d, 0x65, 0xb5, 0xae, 0x5b, 0xad, 0x2b, 0xd4, 0xdb, 0xca, 0x4a, 0x65, 0x78, 0x85, 0x5b, 0xad,
	0x03, 0xe8, 0x1d, 0x47, 0x69, 0x41, 0x8a, 0xaf, 0x0b, 0x2d, 0x49, 0x7a, 0xd7, 0x01, 0x2f, 0xc9,
	0x5a, 0x11, 0x5e, 0x00, 0x7b, 0xcf, 0x01, 0x31, 0xc0, 0xdd, 0x16, 0x62, 0x1a, 0xef, 0x7d, 0x07,
	0xcc, 0x34, 0xe0, 0x22, 0x37, 0x6b, 0x0a, 0xde, 0x07, 0x8e, 0x52, 0x13, 0x09, 0xbe, 0xc1, 0xd5,
	0x9a, 0x8a, 0xf6, 0xa1, 0xa3, 0xdc, 0x9a, 0x96, 0x5b, 0x13, 0x58, 0x1f, 0x81, 0x5b, 0xb3, 0xe4,
	0x26, 0x59, 0x1f, 0x6b, 0x6e, 0x4d, 0xc3, 0x0d, 0x68, 0x9f, 0x68, 0x6e, 0x4d, 0xdb, 0x4d, 0xe3,
	0x7d, 0xaa, 0xb9, 0x35, 0x6d, 0xb7, 0x96, 0xe0, 0x7d, 0x06, 0x6e, 0x2d, 0xdd, 0xad, 0xa5, 0x68,
	0x9f, 0x83, 0x5b, 0xcb, 0x72, 0x6b, 0x01, 0xeb, 0x0b, 0x70, 0x6b, 0x95, 0xdc, 0x24, 0xeb, 0x4b,
	0xcd, 0xad, 0x65, 0xb8, 0x01, 0xed, 0x2b, 0xcd, 0xad, 0x65, 0xbb, 0x69, 0xbc, 0xaf, 0x35, 0xb7,
	0x96, 0xed, 0xd6, 0x16, 0xbc, 0x6f, 0xc0, 0xad, 0xad, 0xbb, 0xb5, 0x15, 0xed, 0x5b, 0x70, 0x6b,
	0x5b, 0x6e, 0x6d, 0x60, 0x7d, 0x07, 0x6e, 0xed, 0x92, 0x9b, 0x64, 0x7d, 0xaf, 0xb9, 0xb5, 0x0d,
	0x37, 0xa0, 0xfd, 0xa0, 0xb9, 0xb5, 0x6d, 0x37, 0x8d, 0xf7, 0xa3, 0xe6, 0xd6, 0xb6, 0xdd, 0x3a,
	0x82, 0xf7, 0x13, 0xb8, 0x75, 0x74, 0xb7, 0x8e, 0xa2, 0xfd, 0x0c, 0x6e, 0x1d, 0xcb, 0xad, 0x03,
	0xac, 0x5f, 0xc0, 0xad, 0x53, 0x72, 0x93, 0xac, 0x5f, 0x35, 0xb7, 0x8e, 0xe1, 0x06, 0xb4, 0xdf,
	0x34, 0xb7, 0x8e, 0xed, 0xa6, 0xf1, 0x7e, 0xd7, 0xdc, 0x4c, 0x20, 0xfb, 0x29, 0x5d, 0x15, 0xc0,
	0x3f, 0x24, 0x10, 0x22, 0xd9, 0xf8, 0xda, 0xaa, 0x02, 0xfe, 0x09, 0x8d, 0x43, 0xca, 0x80, 0x3c,
	0x00, 0xe0, 0x5f, 0x12, 0x68, 0xc6, 0x78, 0x09, 0x9d, 0xe7, 0x3f, 0xa7, 0x92, 0xf8, 0xb7, 0xa8,
	0xd2, 0xb3, 0x49, 0xf3, 0x1a, 0xf3, 0x91, 0xd6, 0xbc, 0x06, 0x7d, 0x1a, 0xcd, 0x88, 0x04, 0xa8,
	0xff, 0x88, 0x4a, 0x3b, 0xef, 0x3e, 0x87, 0x1e, 0xf3, 0x19, 0xdd, 0x95, 0x1f, 0xdc, 0x1e, 0xfb,
	0x4a, 0x4e, 0x36, 0x9d, 0x47, 0x8e, 0xf3, 0xe0, 0x0c, 0xff, 0x64, 0xae, 0xff, 0x17, 0x00, 0x00,
	0xff, 0xff, 0x00, 0x9b, 0x69, 0x42, 0x8c, 0x0f, 0x00, 0x00,
}
