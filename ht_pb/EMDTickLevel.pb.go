// Code generated by protoc-gen-go. DO NOT EDIT.
// source: EMDTickLevel.proto

package com_htsc_mdc_insight_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EMDTickLevel int32

const (
	EMDTickLevel_DEFAULT_TICK_LEVEL EMDTickLevel = 0
	EMDTickLevel_TICK_LEVEL_ZERO    EMDTickLevel = 1
	EMDTickLevel_TICK_LEVEL_ONE     EMDTickLevel = 2
	EMDTickLevel_TICK_LEVEL_FIVE    EMDTickLevel = 3
	EMDTickLevel_TICK_LEVEL_TEN     EMDTickLevel = 4
	EMDTickLevel_TICK_LEVEL_ALL     EMDTickLevel = 5
)

var EMDTickLevel_name = map[int32]string{
	0: "DEFAULT_TICK_LEVEL",
	1: "TICK_LEVEL_ZERO",
	2: "TICK_LEVEL_ONE",
	3: "TICK_LEVEL_FIVE",
	4: "TICK_LEVEL_TEN",
	5: "TICK_LEVEL_ALL",
}

var EMDTickLevel_value = map[string]int32{
	"DEFAULT_TICK_LEVEL": 0,
	"TICK_LEVEL_ZERO":    1,
	"TICK_LEVEL_ONE":     2,
	"TICK_LEVEL_FIVE":    3,
	"TICK_LEVEL_TEN":     4,
	"TICK_LEVEL_ALL":     5,
}

func (x EMDTickLevel) String() string {
	return proto.EnumName(EMDTickLevel_name, int32(x))
}

func (EMDTickLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_646f45b40fbacced, []int{0}
}

func init() {
	proto.RegisterEnum("com.htsc.mdc.insight.model.EMDTickLevel", EMDTickLevel_name, EMDTickLevel_value)
}

func init() { proto.RegisterFile("EMDTickLevel.proto", fileDescriptor_646f45b40fbacced) }

var fileDescriptor_646f45b40fbacced = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x72, 0xf5, 0x75, 0x09,
	0xc9, 0x4c, 0xce, 0xf6, 0x49, 0x2d, 0x4b, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92,
	0x4a, 0xce, 0xcf, 0xd5, 0xcb, 0x28, 0x29, 0x4e, 0xd6, 0xcb, 0x4d, 0x49, 0xd6, 0xcb, 0xcc, 0x2b,
	0xce, 0x4c, 0xcf, 0x28, 0xd1, 0xcb, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0xea, 0x61, 0xe4, 0xe2, 0x41,
	0xd6, 0x22, 0x24, 0xc6, 0x25, 0xe4, 0xe2, 0xea, 0xe6, 0x18, 0xea, 0x13, 0x12, 0x1f, 0xe2, 0xe9,
	0xec, 0x1d, 0xef, 0xe3, 0x1a, 0xe6, 0xea, 0x23, 0xc0, 0x20, 0x24, 0xcc, 0xc5, 0x8f, 0xe0, 0xc7,
	0x47, 0xb9, 0x06, 0xf9, 0x0b, 0x30, 0x0a, 0x09, 0x71, 0xf1, 0x21, 0x09, 0xfa, 0xfb, 0xb9, 0x0a,
	0x30, 0xa1, 0x29, 0x74, 0xf3, 0x0c, 0x73, 0x15, 0x60, 0x46, 0x53, 0x18, 0xe2, 0xea, 0x27, 0xc0,
	0x82, 0x26, 0xe6, 0xe8, 0xe3, 0x23, 0xc0, 0xea, 0x64, 0xca, 0x85, 0xc7, 0xb1, 0x4e, 0x28, 0x9e,
	0x0b, 0x00, 0xf9, 0xad, 0xd8, 0x83, 0x71, 0x01, 0x23, 0x63, 0x12, 0x1b, 0xd8, 0xa3, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x19, 0xf0, 0xae, 0x5d, 0xfe, 0x00, 0x00, 0x00,
}
