// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MDPlayback.proto

package ht_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//复权类型
type EPlaybackExrightsType int32

const (
	EPlaybackExrightsType_DEFAULT_EXRIGHTS_TYPE EPlaybackExrightsType = 0
	EPlaybackExrightsType_NO_EXRIGHTS           EPlaybackExrightsType = 10
	EPlaybackExrightsType_FORWARD_EXRIGHTS      EPlaybackExrightsType = 11
	EPlaybackExrightsType_BACKWARD_EXRIGHTS     EPlaybackExrightsType = 12
)

var EPlaybackExrightsType_name = map[int32]string{
	0:  "DEFAULT_EXRIGHTS_TYPE",
	10: "NO_EXRIGHTS",
	11: "FORWARD_EXRIGHTS",
	12: "BACKWARD_EXRIGHTS",
}

var EPlaybackExrightsType_value = map[string]int32{
	"DEFAULT_EXRIGHTS_TYPE": 0,
	"NO_EXRIGHTS":           10,
	"FORWARD_EXRIGHTS":      11,
	"BACKWARD_EXRIGHTS":     12,
}

func (x EPlaybackExrightsType) String() string {
	return proto.EnumName(EPlaybackExrightsType_name, int32(x))
}

func (EPlaybackExrightsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{0}
}

//任务控制类型
type EPlaybackTaskControlType int32

const (
	EPlaybackTaskControlType_DEFAULT_CONTROL_TYPE EPlaybackTaskControlType = 0
	EPlaybackTaskControlType_CANCEL_TASK          EPlaybackTaskControlType = 1
	EPlaybackTaskControlType_SET_PLAYBACK_RATE    EPlaybackTaskControlType = 2
)

var EPlaybackTaskControlType_name = map[int32]string{
	0: "DEFAULT_CONTROL_TYPE",
	1: "CANCEL_TASK",
	2: "SET_PLAYBACK_RATE",
}

var EPlaybackTaskControlType_value = map[string]int32{
	"DEFAULT_CONTROL_TYPE": 0,
	"CANCEL_TASK":          1,
	"SET_PLAYBACK_RATE":    2,
}

func (x EPlaybackTaskControlType) String() string {
	return proto.EnumName(EPlaybackTaskControlType_name, int32(x))
}

func (EPlaybackTaskControlType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{1}
}

//任务状态指示
type EPlaybackTaskStatus int32

const (
	EPlaybackTaskStatus_DEFAULT_STATUS EPlaybackTaskStatus = 0
	EPlaybackTaskStatus_INITIALIZING   EPlaybackTaskStatus = 11
	EPlaybackTaskStatus_PREPARING      EPlaybackTaskStatus = 12
	EPlaybackTaskStatus_PREPARED       EPlaybackTaskStatus = 13
	EPlaybackTaskStatus_RUNNING        EPlaybackTaskStatus = 14
	EPlaybackTaskStatus_APPENDING      EPlaybackTaskStatus = 15
	EPlaybackTaskStatus_CANCELED       EPlaybackTaskStatus = 16
	EPlaybackTaskStatus_COMPLETED      EPlaybackTaskStatus = 17
	EPlaybackTaskStatus_FAILED         EPlaybackTaskStatus = 18
)

var EPlaybackTaskStatus_name = map[int32]string{
	0:  "DEFAULT_STATUS",
	11: "INITIALIZING",
	12: "PREPARING",
	13: "PREPARED",
	14: "RUNNING",
	15: "APPENDING",
	16: "CANCELED",
	17: "COMPLETED",
	18: "FAILED",
}

var EPlaybackTaskStatus_value = map[string]int32{
	"DEFAULT_STATUS": 0,
	"INITIALIZING":   11,
	"PREPARING":      12,
	"PREPARED":       13,
	"RUNNING":        14,
	"APPENDING":      15,
	"CANCELED":       16,
	"COMPLETED":      17,
	"FAILED":         18,
}

func (x EPlaybackTaskStatus) String() string {
	return proto.EnumName(EPlaybackTaskStatus_name, int32(x))
}

func (EPlaybackTaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{2}
}

//行情回放请求
type PlaybackRequest struct {
	TaskId               string                `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	HtscSecurityIDs      []string              `protobuf:"bytes,2,rep,name=htscSecurityIDs,proto3" json:"htscSecurityIDs,omitempty"`
	SecuritySourceType   []*SecuritySourceType `protobuf:"bytes,3,rep,name=securitySourceType,proto3" json:"securitySourceType,omitempty"`
	StartTime            string                `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime             string                `protobuf:"bytes,5,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	ReplayDataType       EMarketDataType       `protobuf:"varint,6,opt,name=replayDataType,proto3,enum=com.htsc.mdc.insight.model.EMarketDataType" json:"replayDataType,omitempty"`
	ReplayRate           int32                 `protobuf:"varint,7,opt,name=replayRate,proto3" json:"replayRate,omitempty"`
	ExrightsType         EPlaybackExrightsType `protobuf:"varint,8,opt,name=exrightsType,proto3,enum=com.htsc.mdc.insight.model.EPlaybackExrightsType" json:"exrightsType,omitempty"`
	IsNeedInitialData    bool                  `protobuf:"varint,9,opt,name=isNeedInitialData,proto3" json:"isNeedInitialData,omitempty"`
	InitialDataStartTime string                `protobuf:"bytes,10,opt,name=initialDataStartTime,proto3" json:"initialDataStartTime,omitempty"`
	ReplayFuncType       int32                 `protobuf:"varint,11,opt,name=replayFuncType,proto3" json:"replayFuncType,omitempty"`
	SortType             int32                 `protobuf:"varint,12,opt,name=sortType,proto3" json:"sortType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PlaybackRequest) Reset()         { *m = PlaybackRequest{} }
func (m *PlaybackRequest) String() string { return proto.CompactTextString(m) }
func (*PlaybackRequest) ProtoMessage()    {}
func (*PlaybackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{0}
}

func (m *PlaybackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackRequest.Unmarshal(m, b)
}
func (m *PlaybackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackRequest.Marshal(b, m, deterministic)
}
func (m *PlaybackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackRequest.Merge(m, src)
}
func (m *PlaybackRequest) XXX_Size() int {
	return xxx_messageInfo_PlaybackRequest.Size(m)
}
func (m *PlaybackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackRequest proto.InternalMessageInfo

func (m *PlaybackRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackRequest) GetHtscSecurityIDs() []string {
	if m != nil {
		return m.HtscSecurityIDs
	}
	return nil
}

func (m *PlaybackRequest) GetSecuritySourceType() []*SecuritySourceType {
	if m != nil {
		return m.SecuritySourceType
	}
	return nil
}

func (m *PlaybackRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *PlaybackRequest) GetStopTime() string {
	if m != nil {
		return m.StopTime
	}
	return ""
}

func (m *PlaybackRequest) GetReplayDataType() EMarketDataType {
	if m != nil {
		return m.ReplayDataType
	}
	return EMarketDataType_UNKNOWN_DATA_TYPE
}

func (m *PlaybackRequest) GetReplayRate() int32 {
	if m != nil {
		return m.ReplayRate
	}
	return 0
}

func (m *PlaybackRequest) GetExrightsType() EPlaybackExrightsType {
	if m != nil {
		return m.ExrightsType
	}
	return EPlaybackExrightsType_DEFAULT_EXRIGHTS_TYPE
}

func (m *PlaybackRequest) GetIsNeedInitialData() bool {
	if m != nil {
		return m.IsNeedInitialData
	}
	return false
}

func (m *PlaybackRequest) GetInitialDataStartTime() string {
	if m != nil {
		return m.InitialDataStartTime
	}
	return ""
}

func (m *PlaybackRequest) GetReplayFuncType() int32 {
	if m != nil {
		return m.ReplayFuncType
	}
	return 0
}

func (m *PlaybackRequest) GetSortType() int32 {
	if m != nil {
		return m.SortType
	}
	return 0
}

//回放应答
type PlaybackResponse struct {
	TaskId               string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	IsSuccess            bool                 `protobuf:"varint,2,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	ErrorContext         *InsightErrorContext `protobuf:"bytes,3,opt,name=errorContext,proto3" json:"errorContext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PlaybackResponse) Reset()         { *m = PlaybackResponse{} }
func (m *PlaybackResponse) String() string { return proto.CompactTextString(m) }
func (*PlaybackResponse) ProtoMessage()    {}
func (*PlaybackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{1}
}

func (m *PlaybackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackResponse.Unmarshal(m, b)
}
func (m *PlaybackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackResponse.Marshal(b, m, deterministic)
}
func (m *PlaybackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackResponse.Merge(m, src)
}
func (m *PlaybackResponse) XXX_Size() int {
	return xxx_messageInfo_PlaybackResponse.Size(m)
}
func (m *PlaybackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackResponse proto.InternalMessageInfo

func (m *PlaybackResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackResponse) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PlaybackResponse) GetErrorContext() *InsightErrorContext {
	if m != nil {
		return m.ErrorContext
	}
	return nil
}

//任务控制请求
type PlaybackControlRequest struct {
	TaskId               string                   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	ControlType          EPlaybackTaskControlType `protobuf:"varint,2,opt,name=controlType,proto3,enum=com.htsc.mdc.insight.model.EPlaybackTaskControlType" json:"controlType,omitempty"`
	ReplayRate           int32                    `protobuf:"varint,3,opt,name=replayRate,proto3" json:"replayRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PlaybackControlRequest) Reset()         { *m = PlaybackControlRequest{} }
func (m *PlaybackControlRequest) String() string { return proto.CompactTextString(m) }
func (*PlaybackControlRequest) ProtoMessage()    {}
func (*PlaybackControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{2}
}

func (m *PlaybackControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackControlRequest.Unmarshal(m, b)
}
func (m *PlaybackControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackControlRequest.Marshal(b, m, deterministic)
}
func (m *PlaybackControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackControlRequest.Merge(m, src)
}
func (m *PlaybackControlRequest) XXX_Size() int {
	return xxx_messageInfo_PlaybackControlRequest.Size(m)
}
func (m *PlaybackControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackControlRequest proto.InternalMessageInfo

func (m *PlaybackControlRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackControlRequest) GetControlType() EPlaybackTaskControlType {
	if m != nil {
		return m.ControlType
	}
	return EPlaybackTaskControlType_DEFAULT_CONTROL_TYPE
}

func (m *PlaybackControlRequest) GetReplayRate() int32 {
	if m != nil {
		return m.ReplayRate
	}
	return 0
}

//回放任务控制应答
type PlaybackControlResponse struct {
	TaskId               string               `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	IsSuccess            bool                 `protobuf:"varint,2,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	ErrorContext         *InsightErrorContext `protobuf:"bytes,3,opt,name=errorContext,proto3" json:"errorContext,omitempty"`
	CurrentReplayRate    int32                `protobuf:"varint,4,opt,name=currentReplayRate,proto3" json:"currentReplayRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PlaybackControlResponse) Reset()         { *m = PlaybackControlResponse{} }
func (m *PlaybackControlResponse) String() string { return proto.CompactTextString(m) }
func (*PlaybackControlResponse) ProtoMessage()    {}
func (*PlaybackControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{3}
}

func (m *PlaybackControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackControlResponse.Unmarshal(m, b)
}
func (m *PlaybackControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackControlResponse.Marshal(b, m, deterministic)
}
func (m *PlaybackControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackControlResponse.Merge(m, src)
}
func (m *PlaybackControlResponse) XXX_Size() int {
	return xxx_messageInfo_PlaybackControlResponse.Size(m)
}
func (m *PlaybackControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackControlResponse proto.InternalMessageInfo

func (m *PlaybackControlResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackControlResponse) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PlaybackControlResponse) GetErrorContext() *InsightErrorContext {
	if m != nil {
		return m.ErrorContext
	}
	return nil
}

func (m *PlaybackControlResponse) GetCurrentReplayRate() int32 {
	if m != nil {
		return m.CurrentReplayRate
	}
	return 0
}

//回放任务状态请求
type PlaybackStatusRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaybackStatusRequest) Reset()         { *m = PlaybackStatusRequest{} }
func (m *PlaybackStatusRequest) String() string { return proto.CompactTextString(m) }
func (*PlaybackStatusRequest) ProtoMessage()    {}
func (*PlaybackStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{4}
}

func (m *PlaybackStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackStatusRequest.Unmarshal(m, b)
}
func (m *PlaybackStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackStatusRequest.Marshal(b, m, deterministic)
}
func (m *PlaybackStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackStatusRequest.Merge(m, src)
}
func (m *PlaybackStatusRequest) XXX_Size() int {
	return xxx_messageInfo_PlaybackStatusRequest.Size(m)
}
func (m *PlaybackStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackStatusRequest proto.InternalMessageInfo

func (m *PlaybackStatusRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

//回放任务状态
type PlaybackStatus struct {
	TaskId               string              `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	TaskStatus           EPlaybackTaskStatus `protobuf:"varint,2,opt,name=taskStatus,proto3,enum=com.htsc.mdc.insight.model.EPlaybackTaskStatus" json:"taskStatus,omitempty"`
	ReplayPercent        int32               `protobuf:"varint,3,opt,name=replayPercent,proto3" json:"replayPercent,omitempty"`
	CurrentReplayRate    int32               `protobuf:"varint,4,opt,name=currentReplayRate,proto3" json:"currentReplayRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PlaybackStatus) Reset()         { *m = PlaybackStatus{} }
func (m *PlaybackStatus) String() string { return proto.CompactTextString(m) }
func (*PlaybackStatus) ProtoMessage()    {}
func (*PlaybackStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{5}
}

func (m *PlaybackStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackStatus.Unmarshal(m, b)
}
func (m *PlaybackStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackStatus.Marshal(b, m, deterministic)
}
func (m *PlaybackStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackStatus.Merge(m, src)
}
func (m *PlaybackStatus) XXX_Size() int {
	return xxx_messageInfo_PlaybackStatus.Size(m)
}
func (m *PlaybackStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackStatus proto.InternalMessageInfo

func (m *PlaybackStatus) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackStatus) GetTaskStatus() EPlaybackTaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return EPlaybackTaskStatus_DEFAULT_STATUS
}

func (m *PlaybackStatus) GetReplayPercent() int32 {
	if m != nil {
		return m.ReplayPercent
	}
	return 0
}

func (m *PlaybackStatus) GetCurrentReplayRate() int32 {
	if m != nil {
		return m.CurrentReplayRate
	}
	return 0
}

//回放数据
type PlaybackPayload struct {
	TaskId               string            `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	MarketDataStream     *MarketDataStream `protobuf:"bytes,2,opt,name=marketDataStream,proto3" json:"marketDataStream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlaybackPayload) Reset()         { *m = PlaybackPayload{} }
func (m *PlaybackPayload) String() string { return proto.CompactTextString(m) }
func (*PlaybackPayload) ProtoMessage()    {}
func (*PlaybackPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead767d86ce873ce, []int{6}
}

func (m *PlaybackPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaybackPayload.Unmarshal(m, b)
}
func (m *PlaybackPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaybackPayload.Marshal(b, m, deterministic)
}
func (m *PlaybackPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaybackPayload.Merge(m, src)
}
func (m *PlaybackPayload) XXX_Size() int {
	return xxx_messageInfo_PlaybackPayload.Size(m)
}
func (m *PlaybackPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaybackPayload.DiscardUnknown(m)
}

var xxx_messageInfo_PlaybackPayload proto.InternalMessageInfo

func (m *PlaybackPayload) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PlaybackPayload) GetMarketDataStream() *MarketDataStream {
	if m != nil {
		return m.MarketDataStream
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.htsc.mdc.insight.model.EPlaybackExrightsType", EPlaybackExrightsType_name, EPlaybackExrightsType_value)
	proto.RegisterEnum("com.htsc.mdc.insight.model.EPlaybackTaskControlType", EPlaybackTaskControlType_name, EPlaybackTaskControlType_value)
	proto.RegisterEnum("com.htsc.mdc.insight.model.EPlaybackTaskStatus", EPlaybackTaskStatus_name, EPlaybackTaskStatus_value)
	proto.RegisterType((*PlaybackRequest)(nil), "com.htsc.mdc.insight.model.PlaybackRequest")
	proto.RegisterType((*PlaybackResponse)(nil), "com.htsc.mdc.insight.model.PlaybackResponse")
	proto.RegisterType((*PlaybackControlRequest)(nil), "com.htsc.mdc.insight.model.PlaybackControlRequest")
	proto.RegisterType((*PlaybackControlResponse)(nil), "com.htsc.mdc.insight.model.PlaybackControlResponse")
	proto.RegisterType((*PlaybackStatusRequest)(nil), "com.htsc.mdc.insight.model.PlaybackStatusRequest")
	proto.RegisterType((*PlaybackStatus)(nil), "com.htsc.mdc.insight.model.PlaybackStatus")
	proto.RegisterType((*PlaybackPayload)(nil), "com.htsc.mdc.insight.model.PlaybackPayload")
}

func init() { proto.RegisterFile("MDPlayback.proto", fileDescriptor_ead767d86ce873ce) }

var fileDescriptor_ead767d86ce873ce = []byte{
	// 815 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xef, 0x8e, 0xda, 0x46,
	0x10, 0xcf, 0x1e, 0x97, 0xcb, 0x31, 0xe6, 0x60, 0x6f, 0x7b, 0xa4, 0xce, 0x29, 0xaa, 0x10, 0xaa,
	0x2a, 0x74, 0x8d, 0x38, 0x95, 0xf6, 0x05, 0x7c, 0xd8, 0x97, 0x58, 0xe1, 0x8c, 0xb5, 0x36, 0x6d,
	0x52, 0x55, 0x45, 0x8e, 0x59, 0x35, 0xd6, 0x01, 0xa6, 0xbb, 0x8b, 0x14, 0x3e, 0xf7, 0x39, 0x22,
	0xf5, 0x63, 0x5f, 0xa6, 0x5f, 0xfa, 0x02, 0x7d, 0x95, 0x6a, 0x17, 0x8c, 0xf9, 0x9f, 0xeb, 0xb7,
	0x7c, 0x63, 0x7e, 0x33, 0xfb, 0x9b, 0xf9, 0xcd, 0x8c, 0x77, 0x01, 0x7c, 0x67, 0xfb, 0xc3, 0x68,
	0xf6, 0x2e, 0x8a, 0xef, 0x9b, 0x13, 0x9e, 0xca, 0x94, 0x5c, 0xc6, 0xe9, 0xa8, 0xf9, 0x5e, 0x8a,
	0xb8, 0x39, 0x1a, 0xc4, 0xcd, 0x64, 0x2c, 0x92, 0xdf, 0xde, 0xcb, 0xe6, 0x28, 0x1d, 0xb0, 0xe1,
	0x65, 0xd5, 0xb9, 0x8b, 0xf8, 0x3d, 0x93, 0x76, 0x24, 0xa3, 0x70, 0x36, 0x61, 0xf3, 0x23, 0x97,
	0x38, 0x47, 0x17, 0xc8, 0x33, 0x77, 0x7e, 0xce, 0xe1, 0x3c, 0xe5, 0xed, 0x74, 0x2c, 0xd9, 0x07,
	0xb9, 0x70, 0x99, 0x01, 0x8b, 0xa7, 0x3c, 0x91, 0xb3, 0x20, 0x9d, 0xf2, 0x98, 0xe5, 0x34, 0xf5,
	0x7f, 0x8f, 0xa1, 0x92, 0x15, 0x43, 0xd9, 0xef, 0x53, 0x26, 0x24, 0x79, 0x0a, 0x27, 0x32, 0x12,
	0xf7, 0xee, 0xc0, 0x44, 0x35, 0xd4, 0x28, 0xd2, 0x85, 0x45, 0x1a, 0x50, 0x51, 0x35, 0x66, 0x5c,
	0xae, 0x2d, 0xcc, 0xa3, 0x5a, 0xa1, 0x51, 0xa4, 0x9b, 0x30, 0xf9, 0x15, 0x88, 0xd8, 0xca, 0x68,
	0x16, 0x6a, 0x85, 0x86, 0xd1, 0x6a, 0x36, 0xf7, 0x8b, 0x6d, 0x6e, 0xd7, 0x49, 0x77, 0x30, 0x91,
	0xe7, 0x50, 0x14, 0x32, 0xe2, 0x32, 0x4c, 0x46, 0xcc, 0x3c, 0xd6, 0x45, 0xe6, 0x00, 0xb9, 0x84,
	0x53, 0x21, 0xd3, 0x89, 0x76, 0x3e, 0xd6, 0xce, 0xa5, 0x4d, 0x02, 0x28, 0x73, 0x36, 0x19, 0x46,
	0xb3, 0xac, 0x9d, 0xe6, 0x49, 0x0d, 0x35, 0xca, 0xad, 0x6f, 0x0f, 0x55, 0xb5, 0x31, 0x01, 0xba,
	0x41, 0x41, 0xbe, 0x02, 0x98, 0x23, 0x34, 0x92, 0xcc, 0x7c, 0x52, 0x43, 0x8d, 0xc7, 0x74, 0x05,
	0x21, 0x3d, 0x28, 0xb1, 0x0f, 0x5c, 0x11, 0x0a, 0x9d, 0xf2, 0x54, 0xa7, 0xfc, 0xee, 0x60, 0xca,
	0x6c, 0x28, 0xce, 0xca, 0x41, 0xba, 0x46, 0x43, 0x5e, 0xc0, 0x79, 0x22, 0x3c, 0xc6, 0x06, 0xee,
	0x38, 0x91, 0x49, 0x34, 0x54, 0xf5, 0x98, 0xc5, 0x1a, 0x6a, 0x9c, 0xd2, 0x6d, 0x07, 0x69, 0xc1,
	0x45, 0x92, 0x9b, 0xc1, 0xb2, 0x7d, 0xa0, 0x3b, 0xb4, 0xd3, 0x47, 0xbe, 0xc9, 0xba, 0x75, 0x3b,
	0x1d, 0xc7, 0xba, 0x74, 0x43, 0x8b, 0xdb, 0x40, 0x75, 0xc7, 0x53, 0x2e, 0x75, 0x44, 0x49, 0x47,
	0x2c, 0xed, 0xfa, 0x47, 0x04, 0x38, 0xdf, 0x30, 0x31, 0x49, 0xc7, 0x82, 0xed, 0x5d, 0xb1, 0xe7,
	0x50, 0x4c, 0x44, 0x30, 0x8d, 0x63, 0x26, 0xd4, 0x72, 0x29, 0x29, 0x39, 0x40, 0x02, 0x28, 0xb1,
	0x95, 0xe5, 0x36, 0x0b, 0x35, 0xd4, 0x30, 0x5a, 0xd7, 0x87, 0xfa, 0xb8, 0xe3, 0x9b, 0xa0, 0x6b,
	0x24, 0xf5, 0xbf, 0x10, 0x3c, 0xcd, 0xea, 0x53, 0x18, 0x4f, 0x87, 0x9f, 0xfa, 0x10, 0x7e, 0x04,
	0x23, 0x9e, 0x47, 0x6a, 0xc5, 0x47, 0x7a, 0x9c, 0x3f, 0x3c, 0x68, 0x9c, 0x61, 0x24, 0xb2, 0x2c,
	0x7a, 0xa2, 0xab, 0x44, 0x1b, 0x7b, 0x54, 0xd8, 0xdc, 0xa3, 0xfa, 0x3f, 0x08, 0xbe, 0xdc, 0x2a,
	0xf5, 0xb3, 0xeb, 0xa8, 0xda, 0xcb, 0x78, 0xca, 0x39, 0x1b, 0x4b, 0x9a, 0xab, 0x39, 0xd6, 0x6a,
	0xb6, 0x1d, 0xf5, 0x6b, 0xa8, 0x66, 0x9a, 0x02, 0x19, 0xc9, 0xa9, 0xf8, 0x44, 0xf7, 0xeb, 0x7f,
	0x23, 0x28, 0xaf, 0x9f, 0xd8, 0x2b, 0xbe, 0x0b, 0xa0, 0x7e, 0xcd, 0xa3, 0x16, 0x73, 0xba, 0x7e,
	0xf0, 0x9c, 0x16, 0xe5, 0xac, 0x50, 0x90, 0xaf, 0xe1, 0x6c, 0x3e, 0x0f, 0x9f, 0xf1, 0x98, 0x8d,
	0xe5, 0x62, 0x48, 0xeb, 0xe0, 0xff, 0x6c, 0xc0, 0x1f, 0x28, 0xbf, 0x82, 0xfd, 0x68, 0x36, 0x4c,
	0xa3, 0xc1, 0x5e, 0x41, 0x6f, 0x00, 0x8f, 0x96, 0x77, 0x51, 0x20, 0x39, 0x8b, 0x46, 0x5a, 0x96,
	0xd1, 0x7a, 0x71, 0x48, 0xd6, 0xdd, 0xc6, 0x19, 0xba, 0xc5, 0x72, 0x35, 0x81, 0xea, 0xce, 0x3b,
	0x87, 0x3c, 0x83, 0xaa, 0xed, 0xdc, 0x5a, 0xbd, 0x4e, 0xd8, 0x77, 0xde, 0x50, 0xf7, 0xe5, 0xab,
	0x30, 0xe8, 0x87, 0x6f, 0x7d, 0x07, 0x3f, 0x22, 0x15, 0x30, 0xbc, 0xee, 0x12, 0xc5, 0x40, 0x2e,
	0x00, 0xdf, 0x76, 0xe9, 0x4f, 0x16, 0xb5, 0x73, 0xd4, 0x20, 0x55, 0x38, 0xbf, 0xb1, 0xda, 0xaf,
	0xd7, 0xe1, 0xd2, 0xd5, 0x2f, 0x60, 0xee, 0xfb, 0x2c, 0x88, 0x09, 0x17, 0x59, 0xd2, 0x76, 0xd7,
	0x0b, 0x69, 0xb7, 0xb3, 0x92, 0xb3, 0x6d, 0x79, 0x6d, 0xa7, 0xd3, 0x0f, 0xad, 0xe0, 0x35, 0x46,
	0x8a, 0x3d, 0x70, 0xc2, 0xbe, 0xdf, 0xb1, 0xde, 0xaa, 0x2c, 0x7d, 0x6a, 0x85, 0x0e, 0x3e, 0xba,
	0xfa, 0x88, 0xe0, 0x8b, 0x1d, 0xd3, 0x24, 0x04, 0xca, 0x19, 0x73, 0x10, 0x5a, 0x61, 0x2f, 0xc0,
	0x8f, 0x08, 0x86, 0x92, 0xeb, 0xb9, 0xa1, 0x6b, 0x75, 0xdc, 0x9f, 0x5d, 0xef, 0x25, 0x36, 0xc8,
	0x19, 0x14, 0x7d, 0xea, 0xf8, 0x16, 0x55, 0x66, 0x89, 0x94, 0xe0, 0x74, 0x6e, 0x3a, 0x36, 0x3e,
	0x23, 0x06, 0x3c, 0xa1, 0x3d, 0xcf, 0x53, 0xae, 0xb2, 0x8a, 0xb4, 0x7c, 0xdf, 0xf1, 0x6c, 0x65,
	0x56, 0x54, 0xe4, 0xbc, 0x3c, 0xc7, 0xc6, 0x58, 0x39, 0xdb, 0xdd, 0x3b, 0xbf, 0xe3, 0x84, 0x8e,
	0x8d, 0xcf, 0x09, 0xc0, 0xc9, 0xad, 0xe5, 0x2a, 0x17, 0xb9, 0x69, 0xc1, 0x81, 0x47, 0xff, 0xa6,
	0x92, 0xff, 0x45, 0xf0, 0xd5, 0x3b, 0xfd, 0x0a, 0xfd, 0x89, 0xd0, 0xbb, 0x13, 0xfd, 0x66, 0x7f,
	0xff, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x26, 0xeb, 0x17, 0x41, 0x08, 0x00, 0x00,
}
