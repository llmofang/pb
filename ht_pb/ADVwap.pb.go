// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ADVwap.proto

/*
Package com_htsc_mdc_insight_model is a generated protocol buffer package.

It is generated from these files:
	ADVwap.proto

It has these top-level messages:
	ADVwap
*/
package com_htsc_mdc_insight_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import com_htsc_mdc_model "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// VWAP指标
type ADVwap struct {
	HTSCSecurityID string                           `protobuf:"bytes,1,opt,name=HTSCSecurityID" json:"HTSCSecurityID,omitempty"`
	MDDate         int32                            `protobuf:"varint,2,opt,name=MDDate" json:"MDDate,omitempty"`
	MDTime         int32                            `protobuf:"varint,3,opt,name=MDTime" json:"MDTime,omitempty"`
	DataTimestamp  int64                            `protobuf:"varint,4,opt,name=DataTimestamp" json:"DataTimestamp,omitempty"`
	PeriodType     com_htsc_mdc_model.EMDPeriodType `protobuf:"varint,5,opt,name=PeriodType,enum=com.htsc.mdc.model.EMDPeriodType" json:"PeriodType,omitempty"`
	Volume         int64                            `protobuf:"varint,6,opt,name=Volume" json:"Volume,omitempty"`
	Vwap           int64                            `protobuf:"varint,7,opt,name=Vwap" json:"Vwap,omitempty"`
}

func (m *ADVwap) Reset()                    { *m = ADVwap{} }
func (m *ADVwap) String() string            { return proto.CompactTextString(m) }
func (*ADVwap) ProtoMessage()               {}
func (*ADVwap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ADVwap) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *ADVwap) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *ADVwap) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *ADVwap) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *ADVwap) GetPeriodType() com_htsc_mdc_model.EMDPeriodType {
	if m != nil {
		return m.PeriodType
	}
	return com_htsc_mdc_model.EMDPeriodType_DefaultPeriod
}

func (m *ADVwap) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ADVwap) GetVwap() int64 {
	if m != nil {
		return m.Vwap
	}
	return 0
}

func init() {
	proto.RegisterType((*ADVwap)(nil), "com.htsc.mdc.insight.model.ADVwap")
}

func init() { proto.RegisterFile("ADVwap.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x19, 0xdb, 0xae, 0x38, 0x68, 0x0f, 0x11, 0x24, 0xf4, 0xb4, 0x8a, 0xc8, 0x9e, 0x22,
	0xe8, 0x13, 0xb4, 0x46, 0xa8, 0x87, 0x42, 0xd9, 0x2e, 0xbd, 0xc7, 0x6c, 0xb0, 0x81, 0xc6, 0x84,
	0x4d, 0x8a, 0xec, 0xdb, 0xf8, 0x92, 0xde, 0x25, 0xd9, 0x15, 0x5d, 0x0f, 0xbd, 0xcd, 0xff, 0xc1,
	0x24, 0xf3, 0x7f, 0x78, 0x3e, 0xe7, 0xdb, 0x0f, 0xe1, 0x98, 0x6b, 0x6c, 0xb0, 0x64, 0x26, 0xad,
	0x61, 0xbb, 0xe0, 0x25, 0x33, 0xb5, 0x64, 0xfa, 0xdd, 0xeb, 0xb7, 0x5d, 0x60, 0xc6, 0xd6, 0x6a,
	0x3f, 0xbb, 0x7c, 0x5e, 0xf1, 0xb5, 0x6a, 0xb4, 0xad, 0xab, 0xd6, 0xa9, 0x6e, 0xe1, 0xe6, 0x0b,
	0x30, 0xeb, 0x5e, 0x20, 0x77, 0x38, 0x5d, 0x56, 0x9b, 0xa7, 0x8d, 0x92, 0x87, 0x46, 0x87, 0xf6,
	0x85, 0x53, 0xc8, 0xa1, 0x38, 0x2b, 0xff, 0x51, 0x72, 0x85, 0xd9, 0x8a, 0x73, 0x11, 0x14, 0x3d,
	0xc9, 0xa1, 0x98, 0x94, 0x7d, 0xea, 0x78, 0xa5, 0x8d, 0xa2, 0xa3, 0x1f, 0x1e, 0x13, 0xb9, 0xc5,
	0x0b, 0x2e, 0x82, 0x88, 0xb3, 0x0f, 0xc2, 0x38, 0x3a, 0xce, 0xa1, 0x18, 0x95, 0x43, 0x48, 0xe6,
	0x88, 0xbf, 0xc7, 0xd1, 0x49, 0x0e, 0xc5, 0xf4, 0xe1, 0x9a, 0x0d, 0xea, 0xa4, 0x1a, 0x6c, 0xd0,
	0xa2, 0xfc, 0xb3, 0x14, 0x0f, 0xd8, 0xda, 0xfd, 0xc1, 0x28, 0x9a, 0xa5, 0x1f, 0xfa, 0x44, 0x08,
	0x8e, 0x63, 0x41, 0x7a, 0x9a, 0x68, 0x9a, 0x17, 0xf7, 0x78, 0x44, 0xd5, 0xa2, 0x97, 0xba, 0x8e,
	0x8a, 0xfc, 0x12, 0x3e, 0x01, 0x5e, 0xb3, 0xe4, 0xeb, 0xf1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x21,
	0x68, 0x45, 0x28, 0x70, 0x01, 0x00, 0x00,
}
