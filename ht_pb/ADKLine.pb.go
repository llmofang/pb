// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ADKLine.proto

/*
Package com_htsc_mdc_insight_model is a generated protocol buffer package.

It is generated from these files:
	ADKLine.proto

It has these top-level messages:
	ADKLine
*/
package com_htsc_mdc_insight_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// K线指标
type ADKLine struct {
	HTSCSecurityID   string        `protobuf:"bytes,1,opt,name=HTSCSecurityID" json:"HTSCSecurityID,omitempty"`
	MDDate           int32         `protobuf:"varint,2,opt,name=MDDate" json:"MDDate,omitempty"`
	MDTime           int32         `protobuf:"varint,3,opt,name=MDTime" json:"MDTime,omitempty"`
	DataTimestamp    int64         `protobuf:"varint,4,opt,name=DataTimestamp" json:"DataTimestamp,omitempty"`
	PeriodType       EMDPeriodType `protobuf:"varint,5,opt,name=PeriodType,enum=com.htsc.mdc.model.EMDPeriodType" json:"PeriodType,omitempty"`
	OpenPx           int64         `protobuf:"varint,6,opt,name=OpenPx" json:"OpenPx,omitempty"`
	ClosePx          int64         `protobuf:"varint,7,opt,name=ClosePx" json:"ClosePx,omitempty"`
	HighPx           int64         `protobuf:"varint,8,opt,name=HighPx" json:"HighPx,omitempty"`
	LowPx            int64         `protobuf:"varint,9,opt,name=LowPx" json:"LowPx,omitempty"`
	NumTrades        int64         `protobuf:"varint,10,opt,name=NumTrades" json:"NumTrades,omitempty"`
	TotalVolumeTrade int64         `protobuf:"varint,11,opt,name=TotalVolumeTrade" json:"TotalVolumeTrade,omitempty"`
	TotalValueTrade  int64         `protobuf:"varint,12,opt,name=TotalValueTrade" json:"TotalValueTrade,omitempty"`
	IOPV             int64         `protobuf:"varint,13,opt,name=IOPV" json:"IOPV,omitempty"`
	OpenInterest     int64         `protobuf:"varint,14,opt,name=OpenInterest" json:"OpenInterest,omitempty"`
	SettlePrice      int64         `protobuf:"varint,15,opt,name=SettlePrice" json:"SettlePrice,omitempty"`
}

func (m *ADKLine) Reset()         { *m = ADKLine{} }
func (m *ADKLine) String() string { return proto.CompactTextString(m) }
func (*ADKLine) ProtoMessage()    {}

func (m *ADKLine) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *ADKLine) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *ADKLine) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *ADKLine) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *ADKLine) GetPeriodType() EMDPeriodType {
	if m != nil {
		return m.PeriodType
	}
	return EMDPeriodType_DefaultPeriod
}

func (m *ADKLine) GetOpenPx() int64 {
	if m != nil {
		return m.OpenPx
	}
	return 0
}

func (m *ADKLine) GetClosePx() int64 {
	if m != nil {
		return m.ClosePx
	}
	return 0
}

func (m *ADKLine) GetHighPx() int64 {
	if m != nil {
		return m.HighPx
	}
	return 0
}

func (m *ADKLine) GetLowPx() int64 {
	if m != nil {
		return m.LowPx
	}
	return 0
}

func (m *ADKLine) GetNumTrades() int64 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *ADKLine) GetTotalVolumeTrade() int64 {
	if m != nil {
		return m.TotalVolumeTrade
	}
	return 0
}

func (m *ADKLine) GetTotalValueTrade() int64 {
	if m != nil {
		return m.TotalValueTrade
	}
	return 0
}

func (m *ADKLine) GetIOPV() int64 {
	if m != nil {
		return m.IOPV
	}
	return 0
}

func (m *ADKLine) GetOpenInterest() int64 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *ADKLine) GetSettlePrice() int64 {
	if m != nil {
		return m.SettlePrice
	}
	return 0
}

func init() {
	proto.RegisterType((*ADKLine)(nil), "com.htsc.mdc.insight.model.ADKLine")
}
