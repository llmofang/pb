// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ADDerivedAnalysis.proto

package ht_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//衍生指标
type ADDerivedAnalysis struct {
	HTSCSecurityID       string            `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	MDDate               int32             `protobuf:"varint,2,opt,name=MDDate,proto3" json:"MDDate,omitempty"`
	MDTime               int32             `protobuf:"varint,3,opt,name=MDTime,proto3" json:"MDTime,omitempty"`
	DataTimestamp        int64             `protobuf:"varint,4,opt,name=DataTimestamp,proto3" json:"DataTimestamp,omitempty"`
	TradingPhaseCode     string            `protobuf:"bytes,5,opt,name=TradingPhaseCode,proto3" json:"TradingPhaseCode,omitempty"`
	SecurityIDSource     ESecurityIDSource `protobuf:"varint,6,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType         ESecurityType     `protobuf:"varint,7,opt,name=securityType,proto3,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	NumTrades            int64             `protobuf:"varint,8,opt,name=NumTrades,proto3" json:"NumTrades,omitempty"`
	TotalVolumeTrade     int64             `protobuf:"varint,9,opt,name=TotalVolumeTrade,proto3" json:"TotalVolumeTrade,omitempty"`
	TotalValueTrade      int64             `protobuf:"varint,10,opt,name=TotalValueTrade,proto3" json:"TotalValueTrade,omitempty"`
	PreClosePx           int64             `protobuf:"varint,11,opt,name=PreClosePx,proto3" json:"PreClosePx,omitempty"`
	LastPx               int64             `protobuf:"varint,12,opt,name=LastPx,proto3" json:"LastPx,omitempty"`
	OpenPx               int64             `protobuf:"varint,13,opt,name=OpenPx,proto3" json:"OpenPx,omitempty"`
	ClosePx              int64             `protobuf:"varint,14,opt,name=ClosePx,proto3" json:"ClosePx,omitempty"`
	HighPx               int64             `protobuf:"varint,15,opt,name=HighPx,proto3" json:"HighPx,omitempty"`
	LowPx                int64             `protobuf:"varint,16,opt,name=LowPx,proto3" json:"LowPx,omitempty"`
	IOPV                 int64             `protobuf:"varint,17,opt,name=IOPV,proto3" json:"IOPV,omitempty"`
	PreIOPV              int64             `protobuf:"varint,18,opt,name=PreIOPV,proto3" json:"PreIOPV,omitempty"`
	OpenInterest         int64             `protobuf:"varint,19,opt,name=OpenInterest,proto3" json:"OpenInterest,omitempty"`
	PreOpenInterest      int64             `protobuf:"varint,20,opt,name=PreOpenInterest,proto3" json:"PreOpenInterest,omitempty"`
	SettlePrice          int64             `protobuf:"varint,21,opt,name=SettlePrice,proto3" json:"SettlePrice,omitempty"`
	PreSettlePrice       int64             `protobuf:"varint,22,opt,name=PreSettlePrice,proto3" json:"PreSettlePrice,omitempty"`
	ExchangeDate         int32             `protobuf:"varint,23,opt,name=ExchangeDate,proto3" json:"ExchangeDate,omitempty"`
	ExchangeTime         int32             `protobuf:"varint,24,opt,name=ExchangeTime,proto3" json:"ExchangeTime,omitempty"`
	BBI                  int64             `protobuf:"varint,40,opt,name=BBI,proto3" json:"BBI,omitempty"`
	Amv                  []*ADAmv          `protobuf:"bytes,41,rep,name=Amv,proto3" json:"Amv,omitempty"`
	ArBr                 []*ADArBr         `protobuf:"bytes,42,rep,name=ArBr,proto3" json:"ArBr,omitempty"`
	Bias                 []*ADBias         `protobuf:"bytes,43,rep,name=Bias,proto3" json:"Bias,omitempty"`
	Boll                 []*ADBoll         `protobuf:"bytes,44,rep,name=Boll,proto3" json:"Boll,omitempty"`
	Cr                   []*ADCr           `protobuf:"bytes,45,rep,name=Cr,proto3" json:"Cr,omitempty"`
	VmaMa                []*ADVmaMa        `protobuf:"bytes,46,rep,name=VmaMa,proto3" json:"VmaMa,omitempty"`
	Vr                   []*ADVr           `protobuf:"bytes,47,rep,name=Vr,proto3" json:"Vr,omitempty"`
	Wr                   []*ADWr           `protobuf:"bytes,48,rep,name=Wr,proto3" json:"Wr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ADDerivedAnalysis) Reset()         { *m = ADDerivedAnalysis{} }
func (m *ADDerivedAnalysis) String() string { return proto.CompactTextString(m) }
func (*ADDerivedAnalysis) ProtoMessage()    {}
func (*ADDerivedAnalysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{0}
}

func (m *ADDerivedAnalysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADDerivedAnalysis.Unmarshal(m, b)
}
func (m *ADDerivedAnalysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADDerivedAnalysis.Marshal(b, m, deterministic)
}
func (m *ADDerivedAnalysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADDerivedAnalysis.Merge(m, src)
}
func (m *ADDerivedAnalysis) XXX_Size() int {
	return xxx_messageInfo_ADDerivedAnalysis.Size(m)
}
func (m *ADDerivedAnalysis) XXX_DiscardUnknown() {
	xxx_messageInfo_ADDerivedAnalysis.DiscardUnknown(m)
}

var xxx_messageInfo_ADDerivedAnalysis proto.InternalMessageInfo

func (m *ADDerivedAnalysis) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *ADDerivedAnalysis) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *ADDerivedAnalysis) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *ADDerivedAnalysis) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *ADDerivedAnalysis) GetTradingPhaseCode() string {
	if m != nil {
		return m.TradingPhaseCode
	}
	return ""
}

func (m *ADDerivedAnalysis) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *ADDerivedAnalysis) GetSecurityType() ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return ESecurityType_DefaultSecurityType
}

func (m *ADDerivedAnalysis) GetNumTrades() int64 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *ADDerivedAnalysis) GetTotalVolumeTrade() int64 {
	if m != nil {
		return m.TotalVolumeTrade
	}
	return 0
}

func (m *ADDerivedAnalysis) GetTotalValueTrade() int64 {
	if m != nil {
		return m.TotalValueTrade
	}
	return 0
}

func (m *ADDerivedAnalysis) GetPreClosePx() int64 {
	if m != nil {
		return m.PreClosePx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetLastPx() int64 {
	if m != nil {
		return m.LastPx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetOpenPx() int64 {
	if m != nil {
		return m.OpenPx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetClosePx() int64 {
	if m != nil {
		return m.ClosePx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetHighPx() int64 {
	if m != nil {
		return m.HighPx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetLowPx() int64 {
	if m != nil {
		return m.LowPx
	}
	return 0
}

func (m *ADDerivedAnalysis) GetIOPV() int64 {
	if m != nil {
		return m.IOPV
	}
	return 0
}

func (m *ADDerivedAnalysis) GetPreIOPV() int64 {
	if m != nil {
		return m.PreIOPV
	}
	return 0
}

func (m *ADDerivedAnalysis) GetOpenInterest() int64 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *ADDerivedAnalysis) GetPreOpenInterest() int64 {
	if m != nil {
		return m.PreOpenInterest
	}
	return 0
}

func (m *ADDerivedAnalysis) GetSettlePrice() int64 {
	if m != nil {
		return m.SettlePrice
	}
	return 0
}

func (m *ADDerivedAnalysis) GetPreSettlePrice() int64 {
	if m != nil {
		return m.PreSettlePrice
	}
	return 0
}

func (m *ADDerivedAnalysis) GetExchangeDate() int32 {
	if m != nil {
		return m.ExchangeDate
	}
	return 0
}

func (m *ADDerivedAnalysis) GetExchangeTime() int32 {
	if m != nil {
		return m.ExchangeTime
	}
	return 0
}

func (m *ADDerivedAnalysis) GetBBI() int64 {
	if m != nil {
		return m.BBI
	}
	return 0
}

func (m *ADDerivedAnalysis) GetAmv() []*ADAmv {
	if m != nil {
		return m.Amv
	}
	return nil
}

func (m *ADDerivedAnalysis) GetArBr() []*ADArBr {
	if m != nil {
		return m.ArBr
	}
	return nil
}

func (m *ADDerivedAnalysis) GetBias() []*ADBias {
	if m != nil {
		return m.Bias
	}
	return nil
}

func (m *ADDerivedAnalysis) GetBoll() []*ADBoll {
	if m != nil {
		return m.Boll
	}
	return nil
}

func (m *ADDerivedAnalysis) GetCr() []*ADCr {
	if m != nil {
		return m.Cr
	}
	return nil
}

func (m *ADDerivedAnalysis) GetVmaMa() []*ADVmaMa {
	if m != nil {
		return m.VmaMa
	}
	return nil
}

func (m *ADDerivedAnalysis) GetVr() []*ADVr {
	if m != nil {
		return m.Vr
	}
	return nil
}

func (m *ADDerivedAnalysis) GetWr() []*ADWr {
	if m != nil {
		return m.Wr
	}
	return nil
}

//成本均价线
type ADAmv struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Amv                  int64    `protobuf:"varint,2,opt,name=Amv,proto3" json:"Amv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADAmv) Reset()         { *m = ADAmv{} }
func (m *ADAmv) String() string { return proto.CompactTextString(m) }
func (*ADAmv) ProtoMessage()    {}
func (*ADAmv) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{1}
}

func (m *ADAmv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADAmv.Unmarshal(m, b)
}
func (m *ADAmv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADAmv.Marshal(b, m, deterministic)
}
func (m *ADAmv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADAmv.Merge(m, src)
}
func (m *ADAmv) XXX_Size() int {
	return xxx_messageInfo_ADAmv.Size(m)
}
func (m *ADAmv) XXX_DiscardUnknown() {
	xxx_messageInfo_ADAmv.DiscardUnknown(m)
}

var xxx_messageInfo_ADAmv proto.InternalMessageInfo

func (m *ADAmv) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADAmv) GetAmv() int64 {
	if m != nil {
		return m.Amv
	}
	return 0
}

//人气和买卖意愿指标明细
type ADArBr struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Ar                   int64    `protobuf:"varint,2,opt,name=Ar,proto3" json:"Ar,omitempty"`
	Br                   int64    `protobuf:"varint,3,opt,name=Br,proto3" json:"Br,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADArBr) Reset()         { *m = ADArBr{} }
func (m *ADArBr) String() string { return proto.CompactTextString(m) }
func (*ADArBr) ProtoMessage()    {}
func (*ADArBr) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{2}
}

func (m *ADArBr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADArBr.Unmarshal(m, b)
}
func (m *ADArBr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADArBr.Marshal(b, m, deterministic)
}
func (m *ADArBr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADArBr.Merge(m, src)
}
func (m *ADArBr) XXX_Size() int {
	return xxx_messageInfo_ADArBr.Size(m)
}
func (m *ADArBr) XXX_DiscardUnknown() {
	xxx_messageInfo_ADArBr.DiscardUnknown(m)
}

var xxx_messageInfo_ADArBr proto.InternalMessageInfo

func (m *ADArBr) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADArBr) GetAr() int64 {
	if m != nil {
		return m.Ar
	}
	return 0
}

func (m *ADArBr) GetBr() int64 {
	if m != nil {
		return m.Br
	}
	return 0
}

//乖离率明细
type ADBias struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Bias                 int64    `protobuf:"varint,2,opt,name=Bias,proto3" json:"Bias,omitempty"`
	ClosePx              int64    `protobuf:"varint,3,opt,name=ClosePx,proto3" json:"ClosePx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADBias) Reset()         { *m = ADBias{} }
func (m *ADBias) String() string { return proto.CompactTextString(m) }
func (*ADBias) ProtoMessage()    {}
func (*ADBias) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{3}
}

func (m *ADBias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADBias.Unmarshal(m, b)
}
func (m *ADBias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADBias.Marshal(b, m, deterministic)
}
func (m *ADBias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADBias.Merge(m, src)
}
func (m *ADBias) XXX_Size() int {
	return xxx_messageInfo_ADBias.Size(m)
}
func (m *ADBias) XXX_DiscardUnknown() {
	xxx_messageInfo_ADBias.DiscardUnknown(m)
}

var xxx_messageInfo_ADBias proto.InternalMessageInfo

func (m *ADBias) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADBias) GetBias() int64 {
	if m != nil {
		return m.Bias
	}
	return 0
}

func (m *ADBias) GetClosePx() int64 {
	if m != nil {
		return m.ClosePx
	}
	return 0
}

//布林线明细
type ADBoll struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	PValue               int32    `protobuf:"varint,2,opt,name=PValue,proto3" json:"PValue,omitempty"`
	Mid                  int64    `protobuf:"varint,3,opt,name=Mid,proto3" json:"Mid,omitempty"`
	Upper                int64    `protobuf:"varint,4,opt,name=Upper,proto3" json:"Upper,omitempty"`
	Lower                int64    `protobuf:"varint,5,opt,name=Lower,proto3" json:"Lower,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADBoll) Reset()         { *m = ADBoll{} }
func (m *ADBoll) String() string { return proto.CompactTextString(m) }
func (*ADBoll) ProtoMessage()    {}
func (*ADBoll) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{4}
}

func (m *ADBoll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADBoll.Unmarshal(m, b)
}
func (m *ADBoll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADBoll.Marshal(b, m, deterministic)
}
func (m *ADBoll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADBoll.Merge(m, src)
}
func (m *ADBoll) XXX_Size() int {
	return xxx_messageInfo_ADBoll.Size(m)
}
func (m *ADBoll) XXX_DiscardUnknown() {
	xxx_messageInfo_ADBoll.DiscardUnknown(m)
}

var xxx_messageInfo_ADBoll proto.InternalMessageInfo

func (m *ADBoll) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADBoll) GetPValue() int32 {
	if m != nil {
		return m.PValue
	}
	return 0
}

func (m *ADBoll) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *ADBoll) GetUpper() int64 {
	if m != nil {
		return m.Upper
	}
	return 0
}

func (m *ADBoll) GetLower() int64 {
	if m != nil {
		return m.Lower
	}
	return 0
}

//中间意愿指标明细
type ADCr struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Cr                   int64    `protobuf:"varint,2,opt,name=Cr,proto3" json:"Cr,omitempty"`
	P1                   int64    `protobuf:"varint,3,opt,name=P1,proto3" json:"P1,omitempty"`
	P2                   int64    `protobuf:"varint,4,opt,name=P2,proto3" json:"P2,omitempty"`
	YM                   int64    `protobuf:"varint,5,opt,name=YM,proto3" json:"YM,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADCr) Reset()         { *m = ADCr{} }
func (m *ADCr) String() string { return proto.CompactTextString(m) }
func (*ADCr) ProtoMessage()    {}
func (*ADCr) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{5}
}

func (m *ADCr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADCr.Unmarshal(m, b)
}
func (m *ADCr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADCr.Marshal(b, m, deterministic)
}
func (m *ADCr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADCr.Merge(m, src)
}
func (m *ADCr) XXX_Size() int {
	return xxx_messageInfo_ADCr.Size(m)
}
func (m *ADCr) XXX_DiscardUnknown() {
	xxx_messageInfo_ADCr.DiscardUnknown(m)
}

var xxx_messageInfo_ADCr proto.InternalMessageInfo

func (m *ADCr) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADCr) GetCr() int64 {
	if m != nil {
		return m.Cr
	}
	return 0
}

func (m *ADCr) GetP1() int64 {
	if m != nil {
		return m.P1
	}
	return 0
}

func (m *ADCr) GetP2() int64 {
	if m != nil {
		return m.P2
	}
	return 0
}

func (m *ADCr) GetYM() int64 {
	if m != nil {
		return m.YM
	}
	return 0
}

//成交量平均线VMA和移动平均线MA
type ADVmaMa struct {
	NValue               int64    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Vma                  int64    `protobuf:"varint,2,opt,name=Vma,proto3" json:"Vma,omitempty"`
	Ma                   int64    `protobuf:"varint,3,opt,name=Ma,proto3" json:"Ma,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADVmaMa) Reset()         { *m = ADVmaMa{} }
func (m *ADVmaMa) String() string { return proto.CompactTextString(m) }
func (*ADVmaMa) ProtoMessage()    {}
func (*ADVmaMa) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{6}
}

func (m *ADVmaMa) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADVmaMa.Unmarshal(m, b)
}
func (m *ADVmaMa) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADVmaMa.Marshal(b, m, deterministic)
}
func (m *ADVmaMa) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADVmaMa.Merge(m, src)
}
func (m *ADVmaMa) XXX_Size() int {
	return xxx_messageInfo_ADVmaMa.Size(m)
}
func (m *ADVmaMa) XXX_DiscardUnknown() {
	xxx_messageInfo_ADVmaMa.DiscardUnknown(m)
}

var xxx_messageInfo_ADVmaMa proto.InternalMessageInfo

func (m *ADVmaMa) GetNValue() int64 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADVmaMa) GetVma() int64 {
	if m != nil {
		return m.Vma
	}
	return 0
}

func (m *ADVmaMa) GetMa() int64 {
	if m != nil {
		return m.Ma
	}
	return 0
}

//成交量变异率
type ADVr struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	VR                   int64    `protobuf:"varint,2,opt,name=VR,proto3" json:"VR,omitempty"`
	AVS                  int64    `protobuf:"varint,3,opt,name=AVS,proto3" json:"AVS,omitempty"`
	BVS                  int64    `protobuf:"varint,4,opt,name=BVS,proto3" json:"BVS,omitempty"`
	CVS                  int64    `protobuf:"varint,5,opt,name=CVS,proto3" json:"CVS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADVr) Reset()         { *m = ADVr{} }
func (m *ADVr) String() string { return proto.CompactTextString(m) }
func (*ADVr) ProtoMessage()    {}
func (*ADVr) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{7}
}

func (m *ADVr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADVr.Unmarshal(m, b)
}
func (m *ADVr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADVr.Marshal(b, m, deterministic)
}
func (m *ADVr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADVr.Merge(m, src)
}
func (m *ADVr) XXX_Size() int {
	return xxx_messageInfo_ADVr.Size(m)
}
func (m *ADVr) XXX_DiscardUnknown() {
	xxx_messageInfo_ADVr.DiscardUnknown(m)
}

var xxx_messageInfo_ADVr proto.InternalMessageInfo

func (m *ADVr) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADVr) GetVR() int64 {
	if m != nil {
		return m.VR
	}
	return 0
}

func (m *ADVr) GetAVS() int64 {
	if m != nil {
		return m.AVS
	}
	return 0
}

func (m *ADVr) GetBVS() int64 {
	if m != nil {
		return m.BVS
	}
	return 0
}

func (m *ADVr) GetCVS() int64 {
	if m != nil {
		return m.CVS
	}
	return 0
}

//威廉指标明细
type ADWr struct {
	NValue               int32    `protobuf:"varint,1,opt,name=NValue,proto3" json:"NValue,omitempty"`
	Wr                   int64    `protobuf:"varint,2,opt,name=Wr,proto3" json:"Wr,omitempty"`
	ClosePx              int64    `protobuf:"varint,3,opt,name=ClosePx,proto3" json:"ClosePx,omitempty"`
	NHighPx              int64    `protobuf:"varint,4,opt,name=NHighPx,proto3" json:"NHighPx,omitempty"`
	NLowPx               int64    `protobuf:"varint,5,opt,name=NLowPx,proto3" json:"NLowPx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADWr) Reset()         { *m = ADWr{} }
func (m *ADWr) String() string { return proto.CompactTextString(m) }
func (*ADWr) ProtoMessage()    {}
func (*ADWr) Descriptor() ([]byte, []int) {
	return fileDescriptor_383529db6d12d313, []int{8}
}

func (m *ADWr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADWr.Unmarshal(m, b)
}
func (m *ADWr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADWr.Marshal(b, m, deterministic)
}
func (m *ADWr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADWr.Merge(m, src)
}
func (m *ADWr) XXX_Size() int {
	return xxx_messageInfo_ADWr.Size(m)
}
func (m *ADWr) XXX_DiscardUnknown() {
	xxx_messageInfo_ADWr.DiscardUnknown(m)
}

var xxx_messageInfo_ADWr proto.InternalMessageInfo

func (m *ADWr) GetNValue() int32 {
	if m != nil {
		return m.NValue
	}
	return 0
}

func (m *ADWr) GetWr() int64 {
	if m != nil {
		return m.Wr
	}
	return 0
}

func (m *ADWr) GetClosePx() int64 {
	if m != nil {
		return m.ClosePx
	}
	return 0
}

func (m *ADWr) GetNHighPx() int64 {
	if m != nil {
		return m.NHighPx
	}
	return 0
}

func (m *ADWr) GetNLowPx() int64 {
	if m != nil {
		return m.NLowPx
	}
	return 0
}

func init() {
	proto.RegisterType((*ADDerivedAnalysis)(nil), "com.htsc.mdc.insight.model.ADDerivedAnalysis")
	proto.RegisterType((*ADAmv)(nil), "com.htsc.mdc.insight.model.ADAmv")
	proto.RegisterType((*ADArBr)(nil), "com.htsc.mdc.insight.model.ADArBr")
	proto.RegisterType((*ADBias)(nil), "com.htsc.mdc.insight.model.ADBias")
	proto.RegisterType((*ADBoll)(nil), "com.htsc.mdc.insight.model.ADBoll")
	proto.RegisterType((*ADCr)(nil), "com.htsc.mdc.insight.model.ADCr")
	proto.RegisterType((*ADVmaMa)(nil), "com.htsc.mdc.insight.model.ADVmaMa")
	proto.RegisterType((*ADVr)(nil), "com.htsc.mdc.insight.model.ADVr")
	proto.RegisterType((*ADWr)(nil), "com.htsc.mdc.insight.model.ADWr")
}

func init() { proto.RegisterFile("ADDerivedAnalysis.proto", fileDescriptor_383529db6d12d313) }

var fileDescriptor_383529db6d12d313 = []byte{
	// 877 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0x86, 0xe5, 0xd8, 0x59, 0x98, 0x34, 0x4d, 0xd9, 0x2e, 0x21, 0x82, 0x61, 0xf0, 0xb4, 0x17,
	0x78, 0xdd, 0xa6, 0x35, 0x29, 0x30, 0x60, 0xfb, 0x34, 0x49, 0x0e, 0x90, 0x00, 0x75, 0xca, 0x51,
	0x99, 0x8c, 0x7e, 0x19, 0xc0, 0xd9, 0x44, 0x2c, 0x40, 0xb2, 0x0c, 0x4a, 0xf6, 0x9c, 0xfd, 0x9a,
	0xfd, 0x85, 0xfd, 0xc3, 0xe1, 0x8e, 0x54, 0x2a, 0xd9, 0x88, 0xe7, 0x6f, 0xbc, 0x87, 0xcf, 0x73,
	0x47, 0xde, 0xf1, 0x0e, 0x24, 0x67, 0xfe, 0x60, 0xa0, 0x74, 0xb2, 0x54, 0x13, 0x7f, 0x26, 0xd3,
	0x87, 0x22, 0x29, 0xbc, 0xb9, 0xce, 0xcb, 0x9c, 0x9e, 0x8f, 0xf3, 0xcc, 0x9b, 0x96, 0xc5, 0xd8,
	0xcb, 0x26, 0x63, 0x2f, 0x99, 0x15, 0xc9, 0xfd, 0xb4, 0xf4, 0xb2, 0x7c, 0xa2, 0xd2, 0xf3, 0x97,
	0x57, 0x91, 0x1a, 0x2f, 0x74, 0x52, 0x3e, 0xdc, 0x3d, 0xcc, 0x95, 0x11, 0x9c, 0x9f, 0x3d, 0x82,
	0x37, 0x83, 0x28, 0x5f, 0xe8, 0xb1, 0xdd, 0x70, 0xff, 0x25, 0xe4, 0xc5, 0x46, 0x14, 0xfa, 0x0d,
	0x39, 0xbe, 0xbe, 0x8b, 0xc2, 0x8f, 0x1a, 0xd6, 0xea, 0xb5, 0xfa, 0x07, 0x62, 0x0d, 0xa5, 0xa7,
	0xa4, 0x3b, 0x1c, 0x0c, 0x64, 0xa9, 0x98, 0xd3, 0x6b, 0xf5, 0x3b, 0xc2, 0x5a, 0x06, 0xbf, 0x4b,
	0x32, 0xc5, 0xda, 0x15, 0x0e, 0x16, 0xfd, 0x8a, 0x3c, 0x1b, 0xc8, 0x52, 0xc2, 0xba, 0x28, 0x65,
	0x36, 0x67, 0x7b, 0xbd, 0x56, 0xbf, 0x2d, 0x9a, 0x20, 0x7d, 0x4d, 0x4e, 0xee, 0xb4, 0x9c, 0x24,
	0xb3, 0x7b, 0x3e, 0x95, 0x85, 0x0a, 0xf3, 0x89, 0x62, 0x1d, 0x8c, 0xbf, 0x81, 0xd3, 0xdf, 0xc8,
	0x49, 0xb1, 0x76, 0x33, 0xd6, 0xed, 0xb5, 0xfa, 0xc7, 0x97, 0x5f, 0x7b, 0x8d, 0x24, 0x61, 0x72,
	0xbc, 0x8d, 0x34, 0x88, 0x0d, 0x39, 0xbd, 0x22, 0x47, 0x45, 0x2d, 0x83, 0x6c, 0x1f, 0xdd, 0x7d,
	0xb1, 0xd5, 0x1d, 0x10, 0x45, 0x43, 0x46, 0x3f, 0x23, 0x07, 0xb7, 0x8b, 0x0c, 0x0e, 0xac, 0x0a,
	0xf6, 0x09, 0xde, 0xf3, 0x23, 0x80, 0x77, 0xcc, 0x4b, 0x99, 0xc6, 0x79, 0xba, 0xc8, 0x14, 0x82,
	0xec, 0x00, 0x49, 0x1b, 0x38, 0xed, 0x93, 0xe7, 0x06, 0x93, 0xe9, 0xc2, 0x52, 0x09, 0x52, 0xd7,
	0x61, 0xfa, 0x39, 0x21, 0x5c, 0xab, 0x30, 0xcd, 0x0b, 0xc5, 0x57, 0xec, 0x10, 0x49, 0x35, 0x04,
	0xea, 0xf2, 0x4e, 0x16, 0x25, 0x5f, 0xb1, 0x23, 0xdc, 0xb3, 0x16, 0xe0, 0xef, 0xe7, 0x6a, 0xc6,
	0x57, 0xec, 0x99, 0xc1, 0x8d, 0x45, 0x19, 0xd9, 0xaf, 0x9c, 0x1d, 0xe3, 0xc6, 0x7e, 0xcd, 0xd3,
	0x75, 0x72, 0x3f, 0xe5, 0x2b, 0xf6, 0xdc, 0x28, 0x8c, 0x45, 0x5f, 0x91, 0xce, 0xbb, 0xfc, 0x2f,
	0xbe, 0x62, 0x27, 0x08, 0x1b, 0x83, 0x52, 0xb2, 0x77, 0xf3, 0x9e, 0xc7, 0xec, 0x05, 0x82, 0xb8,
	0x06, 0xdf, 0x5c, 0x2b, 0x84, 0xa9, 0xf1, 0x6d, 0x4d, 0xea, 0x92, 0x23, 0x88, 0x7f, 0x33, 0x2b,
	0x95, 0x56, 0x45, 0xc9, 0x5e, 0xe2, 0x76, 0x03, 0x83, 0x9c, 0x70, 0xad, 0x1a, 0xb4, 0x57, 0x26,
	0x27, 0x6b, 0x30, 0xed, 0x91, 0xc3, 0x48, 0x95, 0x65, 0xaa, 0xb8, 0x4e, 0xc6, 0x8a, 0x7d, 0x8a,
	0xac, 0x3a, 0x04, 0xaf, 0x9d, 0x6b, 0x55, 0x27, 0x9d, 0x22, 0x69, 0x0d, 0x85, 0x73, 0x5d, 0xad,
	0xc6, 0x53, 0x39, 0xbb, 0x57, 0xf8, 0xe6, 0xcf, 0xf0, 0x6d, 0x37, 0xb0, 0x3a, 0x07, 0xdf, 0x3f,
	0x6b, 0x72, 0xb0, 0x0b, 0x4e, 0x48, 0x3b, 0x08, 0x6e, 0x58, 0x1f, 0x83, 0xc0, 0x92, 0xbe, 0x25,
	0x6d, 0x3f, 0x5b, 0xb2, 0x6f, 0x7b, 0xed, 0xfe, 0xe1, 0xfa, 0x4b, 0x6b, 0x74, 0xb7, 0xe7, 0x0f,
	0xfc, 0x6c, 0x29, 0x80, 0x4d, 0x7f, 0x22, 0x7b, 0xbe, 0x0e, 0x34, 0x7b, 0x8d, 0x2a, 0xf7, 0x7f,
	0x54, 0x3a, 0xd0, 0x02, 0xf9, 0xa0, 0x0b, 0x12, 0x59, 0xb0, 0xef, 0x76, 0xd1, 0x01, 0x53, 0x20,
	0x1f, 0x75, 0x79, 0x9a, 0xb2, 0xef, 0x77, 0xd2, 0xe5, 0x69, 0x2a, 0x90, 0x4f, 0xdf, 0x10, 0x27,
	0xd4, 0xec, 0x07, 0x54, 0xf5, 0xb6, 0xab, 0x42, 0x2d, 0x9c, 0x50, 0xd3, 0x9f, 0x49, 0x27, 0xce,
	0xe4, 0x50, 0x32, 0x0f, 0x45, 0x5f, 0x6e, 0x17, 0x21, 0x55, 0x18, 0x05, 0x04, 0x8b, 0x35, 0xfb,
	0x71, 0x97, 0x60, 0xb1, 0x16, 0x4e, 0xac, 0x41, 0x31, 0xd2, 0xec, 0xcd, 0x2e, 0x8a, 0x91, 0x16,
	0xce, 0x48, 0xbb, 0x17, 0xa4, 0x83, 0x65, 0x80, 0x26, 0xb8, 0xc5, 0xee, 0xc3, 0xf1, 0xd8, 0x11,
	0xd6, 0x82, 0x02, 0x43, 0x39, 0x1d, 0x53, 0x60, 0x3f, 0x5b, 0xba, 0xbf, 0x92, 0xae, 0xa9, 0xc1,
	0x93, 0x9a, 0x63, 0xe2, 0xf8, 0xda, 0x4a, 0x1c, 0x5f, 0x83, 0x1d, 0x68, 0x1c, 0x9f, 0x6d, 0xe1,
	0x04, 0xda, 0xbd, 0x05, 0x0f, 0x58, 0x87, 0xa7, 0x3c, 0x50, 0x5b, 0x57, 0xe3, 0xc3, 0xd4, 0xac,
	0xd6, 0xc0, 0xed, 0x46, 0x03, 0xbb, 0x4b, 0xf4, 0x07, 0xf5, 0x79, 0xca, 0xdf, 0x29, 0xe9, 0x72,
	0x83, 0xdb, 0xe1, 0xce, 0x1f, 0x6f, 0x37, 0x4c, 0x26, 0xd6, 0x1f, 0x2c, 0xa1, 0xe9, 0x7f, 0x9f,
	0xcf, 0x95, 0xb6, 0xe3, 0xdc, 0x18, 0x76, 0x14, 0x28, 0x8d, 0xb3, 0xdb, 0x8c, 0x02, 0xa5, 0xdd,
	0x3f, 0xc8, 0x1e, 0xd4, 0x79, 0x5b, 0x1e, 0xc2, 0xc7, 0x3c, 0x84, 0x98, 0x07, 0x7e, 0x51, 0xe5,
	0x81, 0x5f, 0xa0, 0x7d, 0x69, 0x03, 0x39, 0xfc, 0x12, 0xec, 0x0f, 0x43, 0x1b, 0xc2, 0xf9, 0x30,
	0x74, 0x43, 0xb2, 0x6f, 0x9f, 0xc4, 0x5a, 0x88, 0x76, 0xbd, 0x3c, 0x71, 0x26, 0xab, 0xf2, 0xc4,
	0x99, 0x04, 0x27, 0x43, 0x59, 0x05, 0x19, 0x4a, 0x77, 0x02, 0x87, 0x8c, 0xb7, 0x1e, 0x32, 0x16,
	0xd5, 0x21, 0x63, 0x81, 0x05, 0x8f, 0xa3, 0x2a, 0x25, 0x7e, 0x1c, 0x61, 0x8f, 0xc7, 0x91, 0x3d,
	0x27, 0x2c, 0x01, 0x09, 0xe3, 0xc8, 0x9e, 0x14, 0x96, 0xee, 0xdf, 0x10, 0x65, 0xb4, 0x35, 0xca,
	0xe8, 0x31, 0x15, 0x23, 0xfd, 0x74, 0x31, 0x61, 0xe7, 0xd6, 0x8e, 0x63, 0x13, 0xb1, 0x32, 0xd1,
	0xb7, 0x19, 0xc8, 0x1d, 0x9b, 0x03, 0xb4, 0x82, 0x5f, 0xc8, 0x96, 0x3f, 0x44, 0xb0, 0xf9, 0xf1,
	0xe0, 0xf0, 0x5b, 0x28, 0xae, 0x5b, 0xff, 0xb4, 0x5a, 0x7f, 0x76, 0xf1, 0xeb, 0xf0, 0xf6, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0xee, 0xa5, 0xf7, 0x9f, 0x08, 0x00, 0x00,
}
