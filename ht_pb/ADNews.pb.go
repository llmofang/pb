// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ADNews.proto

package com_htsc_mdc_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//新闻舆情数据(ADNews)
type ADNews struct {
	HTSCSecurityID       string                `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	MDDate               int32                 `protobuf:"varint,2,opt,name=MDDate,proto3" json:"MDDate,omitempty"`
	MDTime               int32                 `protobuf:"varint,3,opt,name=MDTime,proto3" json:"MDTime,omitempty"`
	DataTimestamp        int64                 `protobuf:"varint,4,opt,name=DataTimestamp,proto3" json:"DataTimestamp,omitempty"`
	TradingPhaseCode     string                `protobuf:"bytes,5,opt,name=TradingPhaseCode,proto3" json:"TradingPhaseCode,omitempty"`
	SecurityIDSource     ESecurityIDSource     `protobuf:"varint,6,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType         ESecurityType         `protobuf:"varint,7,opt,name=securityType,proto3,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	Author               string                `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Content              string                `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	EventCat             string                `protobuf:"bytes,10,opt,name=eventCat,proto3" json:"eventCat,omitempty"`
	EventName            string                `protobuf:"bytes,11,opt,name=eventName,proto3" json:"eventName,omitempty"`
	EventPos             int32                 `protobuf:"varint,12,opt,name=eventPos,proto3" json:"eventPos,omitempty"`
	Id                   string                `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	Industry             string                `protobuf:"bytes,14,opt,name=industry,proto3" json:"industry,omitempty"`
	NewsHot              float64               `protobuf:"fixed64,15,opt,name=newsHot,proto3" json:"newsHot,omitempty"`
	NewsTime             string                `protobuf:"bytes,16,opt,name=newsTime,proto3" json:"newsTime,omitempty"`
	Summ                 string                `protobuf:"bytes,17,opt,name=summ,proto3" json:"summ,omitempty"`
	Title                string                `protobuf:"bytes,18,opt,name=title,proto3" json:"title,omitempty"`
	Url                  string                `protobuf:"bytes,19,opt,name=url,proto3" json:"url,omitempty"`
	NewsEmotion          *ADNewsEmotion        `protobuf:"bytes,20,opt,name=newsEmotion,proto3" json:"newsEmotion,omitempty"`
	SecuList             []*ADInvolvedSecurity `protobuf:"bytes,21,rep,name=secuList,proto3" json:"secuList,omitempty"`
	PerEmList            []*ADRelatedPerson    `protobuf:"bytes,22,rep,name=perEmList,proto3" json:"perEmList,omitempty"`
	ComEmList            []*ADRelatedCompany   `protobuf:"bytes,23,rep,name=comEmList,proto3" json:"comEmList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ADNews) Reset()         { *m = ADNews{} }
func (m *ADNews) String() string { return proto.CompactTextString(m) }
func (*ADNews) ProtoMessage()    {}
func (*ADNews) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa4a85ad0e9c12, []int{0}
}

func (m *ADNews) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADNews.Unmarshal(m, b)
}
func (m *ADNews) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADNews.Marshal(b, m, deterministic)
}
func (m *ADNews) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADNews.Merge(m, src)
}
func (m *ADNews) XXX_Size() int {
	return xxx_messageInfo_ADNews.Size(m)
}
func (m *ADNews) XXX_DiscardUnknown() {
	xxx_messageInfo_ADNews.DiscardUnknown(m)
}

var xxx_messageInfo_ADNews proto.InternalMessageInfo

func (m *ADNews) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *ADNews) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *ADNews) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *ADNews) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *ADNews) GetTradingPhaseCode() string {
	if m != nil {
		return m.TradingPhaseCode
	}
	return ""
}

func (m *ADNews) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *ADNews) GetSecurityType() ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return ESecurityType_DefaultSecurityType
}

func (m *ADNews) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ADNews) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ADNews) GetEventCat() string {
	if m != nil {
		return m.EventCat
	}
	return ""
}

func (m *ADNews) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *ADNews) GetEventPos() int32 {
	if m != nil {
		return m.EventPos
	}
	return 0
}

func (m *ADNews) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ADNews) GetIndustry() string {
	if m != nil {
		return m.Industry
	}
	return ""
}

func (m *ADNews) GetNewsHot() float64 {
	if m != nil {
		return m.NewsHot
	}
	return 0
}

func (m *ADNews) GetNewsTime() string {
	if m != nil {
		return m.NewsTime
	}
	return ""
}

func (m *ADNews) GetSumm() string {
	if m != nil {
		return m.Summ
	}
	return ""
}

func (m *ADNews) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ADNews) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ADNews) GetNewsEmotion() *ADNewsEmotion {
	if m != nil {
		return m.NewsEmotion
	}
	return nil
}

func (m *ADNews) GetSecuList() []*ADInvolvedSecurity {
	if m != nil {
		return m.SecuList
	}
	return nil
}

func (m *ADNews) GetPerEmList() []*ADRelatedPerson {
	if m != nil {
		return m.PerEmList
	}
	return nil
}

func (m *ADNews) GetComEmList() []*ADRelatedCompany {
	if m != nil {
		return m.ComEmList
	}
	return nil
}

//情感分析指标
type ADNewsEmotion struct {
	Negative             float64  `protobuf:"fixed64,1,opt,name=negative,proto3" json:"negative,omitempty"`
	Neutral              float64  `protobuf:"fixed64,2,opt,name=neutral,proto3" json:"neutral,omitempty"`
	Pos                  int32    `protobuf:"varint,3,opt,name=pos,proto3" json:"pos,omitempty"`
	Positive             float64  `protobuf:"fixed64,4,opt,name=positive,proto3" json:"positive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADNewsEmotion) Reset()         { *m = ADNewsEmotion{} }
func (m *ADNewsEmotion) String() string { return proto.CompactTextString(m) }
func (*ADNewsEmotion) ProtoMessage()    {}
func (*ADNewsEmotion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa4a85ad0e9c12, []int{1}
}

func (m *ADNewsEmotion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADNewsEmotion.Unmarshal(m, b)
}
func (m *ADNewsEmotion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADNewsEmotion.Marshal(b, m, deterministic)
}
func (m *ADNewsEmotion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADNewsEmotion.Merge(m, src)
}
func (m *ADNewsEmotion) XXX_Size() int {
	return xxx_messageInfo_ADNewsEmotion.Size(m)
}
func (m *ADNewsEmotion) XXX_DiscardUnknown() {
	xxx_messageInfo_ADNewsEmotion.DiscardUnknown(m)
}

var xxx_messageInfo_ADNewsEmotion proto.InternalMessageInfo

func (m *ADNewsEmotion) GetNegative() float64 {
	if m != nil {
		return m.Negative
	}
	return 0
}

func (m *ADNewsEmotion) GetNeutral() float64 {
	if m != nil {
		return m.Neutral
	}
	return 0
}

func (m *ADNewsEmotion) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *ADNewsEmotion) GetPositive() float64 {
	if m != nil {
		return m.Positive
	}
	return 0
}

//涉及的证券信息
type ADInvolvedSecurity struct {
	ComCode              string   `protobuf:"bytes,1,opt,name=comCode,proto3" json:"comCode,omitempty"`
	SecuCode             string   `protobuf:"bytes,2,opt,name=secuCode,proto3" json:"secuCode,omitempty"`
	SecuName             string   `protobuf:"bytes,3,opt,name=secuName,proto3" json:"secuName,omitempty"`
	HTSCSecurityID       string   `protobuf:"bytes,4,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADInvolvedSecurity) Reset()         { *m = ADInvolvedSecurity{} }
func (m *ADInvolvedSecurity) String() string { return proto.CompactTextString(m) }
func (*ADInvolvedSecurity) ProtoMessage()    {}
func (*ADInvolvedSecurity) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa4a85ad0e9c12, []int{2}
}

func (m *ADInvolvedSecurity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADInvolvedSecurity.Unmarshal(m, b)
}
func (m *ADInvolvedSecurity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADInvolvedSecurity.Marshal(b, m, deterministic)
}
func (m *ADInvolvedSecurity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADInvolvedSecurity.Merge(m, src)
}
func (m *ADInvolvedSecurity) XXX_Size() int {
	return xxx_messageInfo_ADInvolvedSecurity.Size(m)
}
func (m *ADInvolvedSecurity) XXX_DiscardUnknown() {
	xxx_messageInfo_ADInvolvedSecurity.DiscardUnknown(m)
}

var xxx_messageInfo_ADInvolvedSecurity proto.InternalMessageInfo

func (m *ADInvolvedSecurity) GetComCode() string {
	if m != nil {
		return m.ComCode
	}
	return ""
}

func (m *ADInvolvedSecurity) GetSecuCode() string {
	if m != nil {
		return m.SecuCode
	}
	return ""
}

func (m *ADInvolvedSecurity) GetSecuName() string {
	if m != nil {
		return m.SecuName
	}
	return ""
}

func (m *ADInvolvedSecurity) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

//关联公司信息
type ADRelatedCompany struct {
	Chiname              string   `protobuf:"bytes,1,opt,name=chiname,proto3" json:"chiname,omitempty"`
	ComCode              string   `protobuf:"bytes,2,opt,name=comCode,proto3" json:"comCode,omitempty"`
	Com                  string   `protobuf:"bytes,3,opt,name=com,proto3" json:"com,omitempty"`
	GeneralPos           int32    `protobuf:"varint,4,opt,name=generalPos,proto3" json:"generalPos,omitempty"`
	SecuCode             string   `protobuf:"bytes,5,opt,name=secuCode,proto3" json:"secuCode,omitempty"`
	HTSCSecurityID       string   `protobuf:"bytes,6,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADRelatedCompany) Reset()         { *m = ADRelatedCompany{} }
func (m *ADRelatedCompany) String() string { return proto.CompactTextString(m) }
func (*ADRelatedCompany) ProtoMessage()    {}
func (*ADRelatedCompany) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa4a85ad0e9c12, []int{3}
}

func (m *ADRelatedCompany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRelatedCompany.Unmarshal(m, b)
}
func (m *ADRelatedCompany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRelatedCompany.Marshal(b, m, deterministic)
}
func (m *ADRelatedCompany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRelatedCompany.Merge(m, src)
}
func (m *ADRelatedCompany) XXX_Size() int {
	return xxx_messageInfo_ADRelatedCompany.Size(m)
}
func (m *ADRelatedCompany) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRelatedCompany.DiscardUnknown(m)
}

var xxx_messageInfo_ADRelatedCompany proto.InternalMessageInfo

func (m *ADRelatedCompany) GetChiname() string {
	if m != nil {
		return m.Chiname
	}
	return ""
}

func (m *ADRelatedCompany) GetComCode() string {
	if m != nil {
		return m.ComCode
	}
	return ""
}

func (m *ADRelatedCompany) GetCom() string {
	if m != nil {
		return m.Com
	}
	return ""
}

func (m *ADRelatedCompany) GetGeneralPos() int32 {
	if m != nil {
		return m.GeneralPos
	}
	return 0
}

func (m *ADRelatedCompany) GetSecuCode() string {
	if m != nil {
		return m.SecuCode
	}
	return ""
}

func (m *ADRelatedCompany) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

//关联人物信息
type ADRelatedPerson struct {
	Per                  string   `protobuf:"bytes,1,opt,name=per,proto3" json:"per,omitempty"`
	ComCode              string   `protobuf:"bytes,2,opt,name=comCode,proto3" json:"comCode,omitempty"`
	Com                  string   `protobuf:"bytes,3,opt,name=com,proto3" json:"com,omitempty"`
	GeneralPos           int32    `protobuf:"varint,4,opt,name=generalPos,proto3" json:"generalPos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADRelatedPerson) Reset()         { *m = ADRelatedPerson{} }
func (m *ADRelatedPerson) String() string { return proto.CompactTextString(m) }
func (*ADRelatedPerson) ProtoMessage()    {}
func (*ADRelatedPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa4a85ad0e9c12, []int{4}
}

func (m *ADRelatedPerson) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRelatedPerson.Unmarshal(m, b)
}
func (m *ADRelatedPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRelatedPerson.Marshal(b, m, deterministic)
}
func (m *ADRelatedPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRelatedPerson.Merge(m, src)
}
func (m *ADRelatedPerson) XXX_Size() int {
	return xxx_messageInfo_ADRelatedPerson.Size(m)
}
func (m *ADRelatedPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRelatedPerson.DiscardUnknown(m)
}

var xxx_messageInfo_ADRelatedPerson proto.InternalMessageInfo

func (m *ADRelatedPerson) GetPer() string {
	if m != nil {
		return m.Per
	}
	return ""
}

func (m *ADRelatedPerson) GetComCode() string {
	if m != nil {
		return m.ComCode
	}
	return ""
}

func (m *ADRelatedPerson) GetCom() string {
	if m != nil {
		return m.Com
	}
	return ""
}

func (m *ADRelatedPerson) GetGeneralPos() int32 {
	if m != nil {
		return m.GeneralPos
	}
	return 0
}

func init() {
	proto.RegisterType((*ADNews)(nil), "com.htsc.mdc.insight.model.ADNews")
	proto.RegisterType((*ADNewsEmotion)(nil), "com.htsc.mdc.insight.model.ADNewsEmotion")
	proto.RegisterType((*ADInvolvedSecurity)(nil), "com.htsc.mdc.insight.model.ADInvolvedSecurity")
	proto.RegisterType((*ADRelatedCompany)(nil), "com.htsc.mdc.insight.model.ADRelatedCompany")
	proto.RegisterType((*ADRelatedPerson)(nil), "com.htsc.mdc.insight.model.ADRelatedPerson")
}

func init() { proto.RegisterFile("ADNews.proto", fileDescriptor_8bfa4a85ad0e9c12) }

var fileDescriptor_8bfa4a85ad0e9c12 = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xeb, 0x6e, 0xd3, 0x30,
	0x14, 0x96, 0x7b, 0xdb, 0x7a, 0xba, 0x75, 0xc5, 0x1b, 0x9b, 0x55, 0x21, 0x54, 0x2a, 0x40, 0xe5,
	0xa2, 0x20, 0x8d, 0x27, 0x60, 0x6d, 0xa5, 0x6d, 0xc0, 0x54, 0xb2, 0xbe, 0x80, 0x49, 0xac, 0xd6,
	0x52, 0x1d, 0x47, 0xb1, 0xd3, 0xa9, 0x2f, 0xc1, 0x33, 0x20, 0x9e, 0x83, 0x87, 0x43, 0x3e, 0x49,
	0x7a, 0x1d, 0x15, 0x3f, 0xf8, 0x77, 0xbe, 0x73, 0xfc, 0x7d, 0x39, 0x3e, 0x97, 0x18, 0x8e, 0x3e,
	0x0d, 0xee, 0xc4, 0x83, 0xf1, 0xe2, 0x44, 0x5b, 0x4d, 0xdb, 0x81, 0x56, 0xde, 0xd4, 0x9a, 0xc0,
	0x53, 0x61, 0xe0, 0xc9, 0xc8, 0xc8, 0xc9, 0xd4, 0x7a, 0x4a, 0x87, 0x62, 0xd6, 0x3e, 0x1d, 0xde,
	0x8b, 0x20, 0x4d, 0xa4, 0x5d, 0x8c, 0x17, 0xb1, 0xc8, 0x08, 0xed, 0x8b, 0xa5, 0xf3, 0x66, 0x70,
	0xaf, 0xd3, 0x24, 0xc8, 0x03, 0xdd, 0x5f, 0x07, 0x50, 0xcb, 0xa4, 0xe9, 0x6b, 0x68, 0x5e, 0x8f,
	0xef, 0xfb, 0xab, 0x83, 0x8c, 0x74, 0x48, 0xaf, 0xee, 0x6f, 0x79, 0xe9, 0x39, 0xd4, 0xbe, 0x0e,
	0x06, 0xdc, 0x0a, 0x56, 0xea, 0x90, 0x5e, 0xd5, 0xcf, 0x51, 0xe6, 0x1f, 0x4b, 0x25, 0x58, 0xb9,
	0xf0, 0x3b, 0x44, 0x5f, 0xc2, 0xf1, 0x80, 0x5b, 0xee, 0x6c, 0x63, 0xb9, 0x8a, 0x59, 0xa5, 0x43,
	0x7a, 0x65, 0x7f, 0xd3, 0x49, 0xdf, 0x42, 0x6b, 0x9c, 0xf0, 0x50, 0x46, 0x93, 0xd1, 0x94, 0x1b,
	0xd1, 0xd7, 0xa1, 0x60, 0x55, 0xfc, 0xfe, 0x8e, 0x9f, 0x7e, 0x83, 0x96, 0xd9, 0xba, 0x0e, 0xab,
	0x75, 0x48, 0xaf, 0x79, 0xf9, 0xca, 0xdb, 0xa8, 0x0c, 0x56, 0xc4, 0xdb, 0xb9, 0xbb, 0xbf, 0x43,
	0xa7, 0x43, 0x38, 0x32, 0x6b, 0x65, 0x63, 0x07, 0x28, 0xf7, 0x62, 0xaf, 0x9c, 0x3b, 0xe8, 0x6f,
	0xd0, 0x5c, 0x0d, 0x78, 0x6a, 0xa7, 0x3a, 0x61, 0x87, 0x98, 0x7b, 0x8e, 0x28, 0x83, 0x83, 0x40,
	0x47, 0x56, 0x44, 0x96, 0xd5, 0x31, 0x50, 0x40, 0xda, 0x86, 0x43, 0x31, 0x17, 0x91, 0xed, 0x73,
	0xcb, 0x00, 0x43, 0x4b, 0x4c, 0x9f, 0x41, 0x1d, 0xed, 0x3b, 0xae, 0x04, 0x6b, 0x60, 0x70, 0xe5,
	0x58, 0x32, 0x47, 0xda, 0xb0, 0x23, 0xac, 0xf8, 0x12, 0xd3, 0x26, 0x94, 0x64, 0xc8, 0x8e, 0x91,
	0x52, 0x92, 0xa1, 0x3b, 0x2b, 0xa3, 0x30, 0x35, 0x36, 0x59, 0xb0, 0x66, 0xf6, 0x95, 0x02, 0xbb,
	0xdc, 0x22, 0xf1, 0x60, 0xae, 0xb5, 0x65, 0x27, 0x1d, 0xd2, 0x23, 0x7e, 0x01, 0x1d, 0xcb, 0x99,
	0xd8, 0xd3, 0x56, 0xc6, 0x2a, 0x30, 0xa5, 0x50, 0x31, 0xa9, 0x52, 0xec, 0x09, 0xfa, 0xd1, 0xa6,
	0x67, 0x50, 0xb5, 0xd2, 0xce, 0x04, 0xa3, 0xe8, 0xcc, 0x00, 0x6d, 0x41, 0x39, 0x4d, 0x66, 0xec,
	0x14, 0x7d, 0xce, 0xa4, 0x9f, 0xa1, 0xe1, 0x74, 0x86, 0x4a, 0x5b, 0xa9, 0x23, 0x76, 0xd6, 0x21,
	0xbd, 0xc6, 0xe5, 0x1b, 0xef, 0xef, 0x43, 0xed, 0x65, 0x23, 0x9a, 0x13, 0xfc, 0x75, 0x36, 0xbd,
	0x85, 0x43, 0xd7, 0x82, 0x2f, 0xd2, 0x58, 0xf6, 0xb4, 0x53, 0xee, 0x35, 0x2e, 0xbd, 0xfd, 0x4a,
	0x37, 0xd1, 0x5c, 0xcf, 0xe6, 0x22, 0x2c, 0xda, 0xe8, 0x2f, 0xf9, 0xf4, 0x06, 0xea, 0xb1, 0x48,
	0x86, 0x0a, 0xc5, 0xce, 0x51, 0xec, 0xdd, 0x7e, 0x31, 0x5f, 0xcc, 0xb8, 0x15, 0xe1, 0x48, 0x24,
	0x46, 0x47, 0xfe, 0x8a, 0x4d, 0x6f, 0xa1, 0x1e, 0x68, 0x95, 0x4b, 0x5d, 0xa0, 0xd4, 0xfb, 0x7f,
	0x92, 0xea, 0x6b, 0x15, 0xf3, 0x68, 0xe1, 0xaf, 0xe8, 0x5d, 0x03, 0xc7, 0x1b, 0x05, 0xc8, 0x1a,
	0x33, 0xe1, 0x56, 0xce, 0x05, 0x2e, 0x29, 0xf1, 0x97, 0x38, 0x6b, 0x67, 0x6a, 0x13, 0x3e, 0xc3,
	0xfd, 0xc4, 0x76, 0x22, 0x74, 0x8d, 0x88, 0xb5, 0xc9, 0xb7, 0xd3, 0x99, 0x4e, 0x27, 0xd6, 0x46,
	0xa2, 0x4e, 0x25, 0xd3, 0x29, 0x70, 0xf7, 0x07, 0x01, 0xba, 0x5b, 0xac, 0x6c, 0x92, 0x15, 0xae,
	0x27, 0x29, 0x26, 0x19, 0xa1, 0x13, 0x73, 0x85, 0xc4, 0x50, 0x29, 0x9b, 0x96, 0x02, 0x17, 0x31,
	0x1c, 0xe4, 0xf2, 0x2a, 0x86, 0x73, 0xbc, 0xfb, 0xdf, 0xa9, 0x3c, 0xf6, 0xdf, 0xe9, 0xfe, 0x26,
	0xd0, 0xda, 0xae, 0x12, 0xa6, 0x33, 0x95, 0x91, 0xd3, 0x2d, 0xd2, 0xc9, 0xe0, 0x7a, 0xa2, 0xa5,
	0xcd, 0x44, 0x5b, 0x50, 0x0e, 0xb4, 0xca, 0xf3, 0x70, 0x26, 0x7d, 0x0e, 0x30, 0x11, 0x91, 0x48,
	0xf8, 0xcc, 0x2d, 0x53, 0x05, 0x0b, 0xb4, 0xe6, 0xd9, 0xb8, 0x5a, 0x75, 0xeb, 0x6a, 0xbb, 0xe9,
	0xd7, 0x1e, 0x4d, 0x5f, 0xc3, 0xc9, 0xd6, 0xb8, 0x60, 0x43, 0x44, 0x92, 0x27, 0xee, 0xcc, 0xff,
	0x99, 0xf4, 0xd5, 0x07, 0xd8, 0xf3, 0x4c, 0x5c, 0xe5, 0x0f, 0xca, 0xc8, 0xbd, 0x02, 0xe6, 0x9a,
	0xfc, 0x24, 0xe4, 0x7b, 0x0d, 0x9f, 0x84, 0x8f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xea, 0xab,
	0xad, 0x8f, 0x6c, 0x06, 0x00, 0x00,
}
