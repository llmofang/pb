// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ServiceDiscovery.proto

/*
Package com_htsc_mdc_insight_model is a generated protocol buffer package.

It is generated from these files:
	ServiceDiscovery.proto

It has these top-level messages:
	ServiceDiscoveryRequest
	ServiceDiscoveryResponse
	ServerInfo
*/
package com_htsc_mdc_insight_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import com_htsc_mdc_insight_model1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 服务发现请求,在大部分场景下，服务发现网关会在用户登录成功后直接回送ServiceDiscoveryResponse，因此一般用户无需发送此请求
type ServiceDiscoveryRequest struct {
	AppType    int32  `protobuf:"varint,1,opt,name=appType" json:"appType,omitempty"`
	AppVersion string `protobuf:"bytes,2,opt,name=appVersion" json:"appVersion,omitempty"`
	UserName   string `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	DeviceId   string `protobuf:"bytes,4,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *ServiceDiscoveryRequest) Reset()                    { *m = ServiceDiscoveryRequest{} }
func (m *ServiceDiscoveryRequest) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscoveryRequest) ProtoMessage()               {}
func (*ServiceDiscoveryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServiceDiscoveryRequest) GetAppType() int32 {
	if m != nil {
		return m.AppType
	}
	return 0
}

func (m *ServiceDiscoveryRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *ServiceDiscoveryRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ServiceDiscoveryRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

// 服务发现回复
type ServiceDiscoveryResponse struct {
	IsSuccess    bool                                             `protobuf:"varint,1,opt,name=isSuccess" json:"isSuccess,omitempty"`
	ErrorContext *com_htsc_mdc_insight_model1.InsightErrorContext `protobuf:"bytes,2,opt,name=errorContext" json:"errorContext,omitempty"`
	Servers      []*ServerInfo                                    `protobuf:"bytes,3,rep,name=servers" json:"servers,omitempty"`
}

func (m *ServiceDiscoveryResponse) Reset()                    { *m = ServiceDiscoveryResponse{} }
func (m *ServiceDiscoveryResponse) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscoveryResponse) ProtoMessage()               {}
func (*ServiceDiscoveryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServiceDiscoveryResponse) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *ServiceDiscoveryResponse) GetErrorContext() *com_htsc_mdc_insight_model1.InsightErrorContext {
	if m != nil {
		return m.ErrorContext
	}
	return nil
}

func (m *ServiceDiscoveryResponse) GetServers() []*ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

// 服务器信息
type ServerInfo struct {
	Ip   string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServerInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*ServiceDiscoveryRequest)(nil), "com.htsc.mdc.insight.model.ServiceDiscoveryRequest")
	proto.RegisterType((*ServiceDiscoveryResponse)(nil), "com.htsc.mdc.insight.model.ServiceDiscoveryResponse")
	proto.RegisterType((*ServerInfo)(nil), "com.htsc.mdc.insight.model.ServerInfo")
}

func init() { proto.RegisterFile("ServiceDiscovery.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x4f, 0x02, 0x31,
	0x14, 0x4c, 0xf9, 0x10, 0x78, 0x18, 0x0f, 0x4d, 0xd4, 0x4a, 0x8c, 0x21, 0x1c, 0x0c, 0xa7, 0x6a,
	0xf0, 0xe2, 0xd1, 0xa0, 0x26, 0x72, 0x31, 0xa6, 0x6b, 0xbc, 0x63, 0xf7, 0x29, 0x4d, 0xdc, 0x6d,
	0xed, 0x2b, 0x44, 0x7e, 0x83, 0x7f, 0xc2, 0x7f, 0xe4, 0x5f, 0x32, 0x74, 0xb3, 0x82, 0xa8, 0xdc,
	0x3a, 0x6f, 0xfa, 0xa6, 0xd3, 0x19, 0xd8, 0x4b, 0xd0, 0xcf, 0x8c, 0xc6, 0x2b, 0x43, 0xda, 0xce,
	0xd0, 0xcf, 0xa5, 0xf3, 0x36, 0x58, 0xde, 0xd1, 0x36, 0x93, 0x93, 0x40, 0x5a, 0x66, 0xa9, 0x96,
	0x26, 0x27, 0xf3, 0x3c, 0x09, 0x32, 0xb3, 0x29, 0xbe, 0x74, 0x0e, 0x46, 0x05, 0xbc, 0xf6, 0xde,
	0xfa, 0x4b, 0x9b, 0x07, 0x7c, 0x0b, 0xc5, 0x5a, 0xef, 0x9d, 0xc1, 0xfe, 0xba, 0xa2, 0xc2, 0xd7,
	0x29, 0x52, 0xe0, 0x02, 0x1a, 0x63, 0xe7, 0xee, 0xe7, 0x0e, 0x05, 0xeb, 0xb2, 0x7e, 0x5d, 0x95,
	0x90, 0x1f, 0x01, 0x8c, 0x9d, 0x7b, 0x40, 0x4f, 0xc6, 0xe6, 0xa2, 0xd2, 0x65, 0xfd, 0x96, 0x5a,
	0x99, 0xf0, 0x0e, 0x34, 0xa7, 0x84, 0xfe, 0x76, 0x9c, 0xa1, 0xa8, 0x46, 0xf6, 0x1b, 0x2f, 0xb8,
	0x14, 0x17, 0xef, 0x8d, 0x52, 0x51, 0x2b, 0xb8, 0x12, 0xf7, 0x3e, 0x19, 0x88, 0xdf, 0x6e, 0xc8,
	0xd9, 0x9c, 0x90, 0x1f, 0x42, 0xcb, 0x50, 0x32, 0xd5, 0x1a, 0x89, 0xa2, 0xa1, 0xa6, 0x5a, 0x0e,
	0x78, 0x02, 0xdb, 0xb8, 0xf2, 0xbd, 0x68, 0xaa, 0x3d, 0x38, 0x91, 0xff, 0xc7, 0x22, 0xff, 0x48,
	0x45, 0xfd, 0x10, 0xe1, 0x17, 0xd0, 0x20, 0xf4, 0x33, 0xf4, 0x24, 0xaa, 0xdd, 0x6a, 0xbf, 0x3d,
	0x38, 0xde, 0xa4, 0x97, 0xc4, 0xab, 0xa3, 0xfc, 0xc9, 0xaa, 0x72, 0xad, 0x77, 0x0a, 0xb0, 0x1c,
	0xf3, 0x1d, 0xa8, 0x18, 0x17, 0xbd, 0xb7, 0x54, 0xc5, 0x38, 0xce, 0xa1, 0xe6, 0xac, 0x2f, 0xcc,
	0xd6, 0x55, 0x3c, 0x0f, 0xcf, 0x61, 0x43, 0x95, 0xc3, 0xdd, 0xf5, 0x78, 0xee, 0x16, 0x35, 0xde,
	0xb0, 0x0f, 0xc6, 0x1e, 0xb7, 0x62, 0xa5, 0x67, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xb3,
	0x0c, 0x76, 0x23, 0x02, 0x00, 0x00,
}
