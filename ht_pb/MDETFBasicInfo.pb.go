// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MDETFBasicInfo.proto

package com_htsc_mdc_insight_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MDETFSubstituteFlag int32

const (
	MDETFSubstituteFlag_DEFAULT_SUBSTITUTE_FLAG MDETFSubstituteFlag = 0
	MDETFSubstituteFlag_DISALLOW_SUBSTITUTE     MDETFSubstituteFlag = 1
	MDETFSubstituteFlag_ALLOW_SUBSTITUTE        MDETFSubstituteFlag = 2
	MDETFSubstituteFlag_MUST_SUBSTITUTE         MDETFSubstituteFlag = 3
)

var MDETFSubstituteFlag_name = map[int32]string{
	0: "DEFAULT_SUBSTITUTE_FLAG",
	1: "DISALLOW_SUBSTITUTE",
	2: "ALLOW_SUBSTITUTE",
	3: "MUST_SUBSTITUTE",
}

var MDETFSubstituteFlag_value = map[string]int32{
	"DEFAULT_SUBSTITUTE_FLAG": 0,
	"DISALLOW_SUBSTITUTE":     1,
	"ALLOW_SUBSTITUTE":        2,
	"MUST_SUBSTITUTE":         3,
}

func (x MDETFSubstituteFlag) String() string {
	return proto.EnumName(MDETFSubstituteFlag_name, int32(x))
}

func (MDETFSubstituteFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_15bf3747c044de5d, []int{0}
}

//ETF基础信息
type MDETFBasicInfo struct {
	HTSCSecurityID                  string                  `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	SecurityID                      string                  `protobuf:"bytes,2,opt,name=SecurityID,proto3" json:"SecurityID,omitempty"`
	Symbol                          string                  `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	MDDate                          int32                   `protobuf:"varint,4,opt,name=MDDate,proto3" json:"MDDate,omitempty"`
	MDTime                          int32                   `protobuf:"varint,5,opt,name=MDTime,proto3" json:"MDTime,omitempty"`
	SecurityIDSource                ESecurityIDSource       `protobuf:"varint,6,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType                    ESecurityType           `protobuf:"varint,7,opt,name=securityType,proto3,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	CreationID                      string                  `protobuf:"bytes,11,opt,name=CreationID,proto3" json:"CreationID,omitempty"`
	CreationSymbol                  string                  `protobuf:"bytes,12,opt,name=CreationSymbol,proto3" json:"CreationSymbol,omitempty"`
	RedemptionID                    string                  `protobuf:"bytes,13,opt,name=RedemptionID,proto3" json:"RedemptionID,omitempty"`
	RedemptionSymbol                string                  `protobuf:"bytes,14,opt,name=RedemptionSymbol,proto3" json:"RedemptionSymbol,omitempty"`
	CreationRedemptionCapitalID     string                  `protobuf:"bytes,15,opt,name=CreationRedemptionCapitalID,proto3" json:"CreationRedemptionCapitalID,omitempty"`
	CreationRedemptionCapitalSymbol string                  `protobuf:"bytes,16,opt,name=CreationRedemptionCapitalSymbol,proto3" json:"CreationRedemptionCapitalSymbol,omitempty"`
	CrossSourceCapitalID            string                  `protobuf:"bytes,17,opt,name=CrossSourceCapitalID,proto3" json:"CrossSourceCapitalID,omitempty"`
	CrossSourceCapitalSymbol        string                  `protobuf:"bytes,18,opt,name=CrossSourceCapitalSymbol,proto3" json:"CrossSourceCapitalSymbol,omitempty"`
	FundManagementCompany           string                  `protobuf:"bytes,19,opt,name=FundManagementCompany,proto3" json:"FundManagementCompany,omitempty"`
	UnderlyingSecurityID            string                  `protobuf:"bytes,20,opt,name=UnderlyingSecurityID,proto3" json:"UnderlyingSecurityID,omitempty"`
	UnderlyingSecurityIDSource      ESecurityIDSource       `protobuf:"varint,21,opt,name=UnderlyingSecurityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"UnderlyingSecurityIDSource,omitempty"`
	CreationRedemptionUnit          float64                 `protobuf:"fixed64,22,opt,name=CreationRedemptionUnit,proto3" json:"CreationRedemptionUnit,omitempty"`
	EstimateCashComponent           float64                 `protobuf:"fixed64,23,opt,name=EstimateCashComponent,proto3" json:"EstimateCashComponent,omitempty"`
	MaxCashRatio                    float64                 `protobuf:"fixed64,24,opt,name=MaxCashRatio,proto3" json:"MaxCashRatio,omitempty"`
	IsPublish                       bool                    `protobuf:"varint,25,opt,name=IsPublish,proto3" json:"IsPublish,omitempty"`
	IsAllowCreation                 bool                    `protobuf:"varint,26,opt,name=IsAllowCreation,proto3" json:"IsAllowCreation,omitempty"`
	IsAllowRedemption               bool                    `protobuf:"varint,27,opt,name=IsAllowRedemption,proto3" json:"IsAllowRedemption,omitempty"`
	RecordNum                       int64                   `protobuf:"varint,28,opt,name=RecordNum,proto3" json:"RecordNum,omitempty"`
	TradingDay                      string                  `protobuf:"bytes,29,opt,name=TradingDay,proto3" json:"TradingDay,omitempty"`
	PreTradingDay                   string                  `protobuf:"bytes,30,opt,name=PreTradingDay,proto3" json:"PreTradingDay,omitempty"`
	CashComponent                   float64                 `protobuf:"fixed64,31,opt,name=CashComponent,proto3" json:"CashComponent,omitempty"`
	NAVperCU                        float64                 `protobuf:"fixed64,32,opt,name=NAVperCU,proto3" json:"NAVperCU,omitempty"`
	NAV                             float64                 `protobuf:"fixed64,33,opt,name=NAV,proto3" json:"NAV,omitempty"`
	DividendPerCU                   float64                 `protobuf:"fixed64,34,opt,name=DividendPerCU,proto3" json:"DividendPerCU,omitempty"`
	CreationLimit                   float64                 `protobuf:"fixed64,35,opt,name=CreationLimit,proto3" json:"CreationLimit,omitempty"`
	RedemptionLimit                 float64                 `protobuf:"fixed64,36,opt,name=RedemptionLimit,proto3" json:"RedemptionLimit,omitempty"`
	CreationLimitPerUser            float64                 `protobuf:"fixed64,37,opt,name=CreationLimitPerUser,proto3" json:"CreationLimitPerUser,omitempty"`
	RedemptionLimitPerUser          float64                 `protobuf:"fixed64,38,opt,name=RedemptionLimitPerUser,proto3" json:"RedemptionLimitPerUser,omitempty"`
	NetCreationLimit                float64                 `protobuf:"fixed64,39,opt,name=NetCreationLimit,proto3" json:"NetCreationLimit,omitempty"`
	NetRedemptionLimit              float64                 `protobuf:"fixed64,40,opt,name=NetRedemptionLimit,proto3" json:"NetRedemptionLimit,omitempty"`
	NetCreationLimitPerUser         float64                 `protobuf:"fixed64,41,opt,name=NetCreationLimitPerUser,proto3" json:"NetCreationLimitPerUser,omitempty"`
	NetRedemptionLimitPerUser       float64                 `protobuf:"fixed64,42,opt,name=NetRedemptionLimitPerUser,proto3" json:"NetRedemptionLimitPerUser,omitempty"`
	ETFComponents                   []*MDETFComponentDetail `protobuf:"bytes,43,rep,name=ETFComponents,proto3" json:"ETFComponents,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                `json:"-"`
	XXX_unrecognized                []byte                  `json:"-"`
	XXX_sizecache                   int32                   `json:"-"`
}

func (m *MDETFBasicInfo) Reset()         { *m = MDETFBasicInfo{} }
func (m *MDETFBasicInfo) String() string { return proto.CompactTextString(m) }
func (*MDETFBasicInfo) ProtoMessage()    {}
func (*MDETFBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_15bf3747c044de5d, []int{0}
}

func (m *MDETFBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MDETFBasicInfo.Unmarshal(m, b)
}
func (m *MDETFBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MDETFBasicInfo.Marshal(b, m, deterministic)
}
func (m *MDETFBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MDETFBasicInfo.Merge(m, src)
}
func (m *MDETFBasicInfo) XXX_Size() int {
	return xxx_messageInfo_MDETFBasicInfo.Size(m)
}
func (m *MDETFBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MDETFBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MDETFBasicInfo proto.InternalMessageInfo

func (m *MDETFBasicInfo) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *MDETFBasicInfo) GetSecurityID() string {
	if m != nil {
		return m.SecurityID
	}
	return ""
}

func (m *MDETFBasicInfo) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MDETFBasicInfo) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *MDETFBasicInfo) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *MDETFBasicInfo) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *MDETFBasicInfo) GetSecurityType() ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return ESecurityType_DefaultSecurityType
}

func (m *MDETFBasicInfo) GetCreationID() string {
	if m != nil {
		return m.CreationID
	}
	return ""
}

func (m *MDETFBasicInfo) GetCreationSymbol() string {
	if m != nil {
		return m.CreationSymbol
	}
	return ""
}

func (m *MDETFBasicInfo) GetRedemptionID() string {
	if m != nil {
		return m.RedemptionID
	}
	return ""
}

func (m *MDETFBasicInfo) GetRedemptionSymbol() string {
	if m != nil {
		return m.RedemptionSymbol
	}
	return ""
}

func (m *MDETFBasicInfo) GetCreationRedemptionCapitalID() string {
	if m != nil {
		return m.CreationRedemptionCapitalID
	}
	return ""
}

func (m *MDETFBasicInfo) GetCreationRedemptionCapitalSymbol() string {
	if m != nil {
		return m.CreationRedemptionCapitalSymbol
	}
	return ""
}

func (m *MDETFBasicInfo) GetCrossSourceCapitalID() string {
	if m != nil {
		return m.CrossSourceCapitalID
	}
	return ""
}

func (m *MDETFBasicInfo) GetCrossSourceCapitalSymbol() string {
	if m != nil {
		return m.CrossSourceCapitalSymbol
	}
	return ""
}

func (m *MDETFBasicInfo) GetFundManagementCompany() string {
	if m != nil {
		return m.FundManagementCompany
	}
	return ""
}

func (m *MDETFBasicInfo) GetUnderlyingSecurityID() string {
	if m != nil {
		return m.UnderlyingSecurityID
	}
	return ""
}

func (m *MDETFBasicInfo) GetUnderlyingSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.UnderlyingSecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *MDETFBasicInfo) GetCreationRedemptionUnit() float64 {
	if m != nil {
		return m.CreationRedemptionUnit
	}
	return 0
}

func (m *MDETFBasicInfo) GetEstimateCashComponent() float64 {
	if m != nil {
		return m.EstimateCashComponent
	}
	return 0
}

func (m *MDETFBasicInfo) GetMaxCashRatio() float64 {
	if m != nil {
		return m.MaxCashRatio
	}
	return 0
}

func (m *MDETFBasicInfo) GetIsPublish() bool {
	if m != nil {
		return m.IsPublish
	}
	return false
}

func (m *MDETFBasicInfo) GetIsAllowCreation() bool {
	if m != nil {
		return m.IsAllowCreation
	}
	return false
}

func (m *MDETFBasicInfo) GetIsAllowRedemption() bool {
	if m != nil {
		return m.IsAllowRedemption
	}
	return false
}

func (m *MDETFBasicInfo) GetRecordNum() int64 {
	if m != nil {
		return m.RecordNum
	}
	return 0
}

func (m *MDETFBasicInfo) GetTradingDay() string {
	if m != nil {
		return m.TradingDay
	}
	return ""
}

func (m *MDETFBasicInfo) GetPreTradingDay() string {
	if m != nil {
		return m.PreTradingDay
	}
	return ""
}

func (m *MDETFBasicInfo) GetCashComponent() float64 {
	if m != nil {
		return m.CashComponent
	}
	return 0
}

func (m *MDETFBasicInfo) GetNAVperCU() float64 {
	if m != nil {
		return m.NAVperCU
	}
	return 0
}

func (m *MDETFBasicInfo) GetNAV() float64 {
	if m != nil {
		return m.NAV
	}
	return 0
}

func (m *MDETFBasicInfo) GetDividendPerCU() float64 {
	if m != nil {
		return m.DividendPerCU
	}
	return 0
}

func (m *MDETFBasicInfo) GetCreationLimit() float64 {
	if m != nil {
		return m.CreationLimit
	}
	return 0
}

func (m *MDETFBasicInfo) GetRedemptionLimit() float64 {
	if m != nil {
		return m.RedemptionLimit
	}
	return 0
}

func (m *MDETFBasicInfo) GetCreationLimitPerUser() float64 {
	if m != nil {
		return m.CreationLimitPerUser
	}
	return 0
}

func (m *MDETFBasicInfo) GetRedemptionLimitPerUser() float64 {
	if m != nil {
		return m.RedemptionLimitPerUser
	}
	return 0
}

func (m *MDETFBasicInfo) GetNetCreationLimit() float64 {
	if m != nil {
		return m.NetCreationLimit
	}
	return 0
}

func (m *MDETFBasicInfo) GetNetRedemptionLimit() float64 {
	if m != nil {
		return m.NetRedemptionLimit
	}
	return 0
}

func (m *MDETFBasicInfo) GetNetCreationLimitPerUser() float64 {
	if m != nil {
		return m.NetCreationLimitPerUser
	}
	return 0
}

func (m *MDETFBasicInfo) GetNetRedemptionLimitPerUser() float64 {
	if m != nil {
		return m.NetRedemptionLimitPerUser
	}
	return 0
}

func (m *MDETFBasicInfo) GetETFComponents() []*MDETFComponentDetail {
	if m != nil {
		return m.ETFComponents
	}
	return nil
}

type MDETFComponentDetail struct {
	HTSCSecurityID           string              `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	SecurityID               string              `protobuf:"bytes,2,opt,name=SecurityID,proto3" json:"SecurityID,omitempty"`
	Symbol                   string              `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	SecurityIDSource         ESecurityIDSource   `protobuf:"varint,4,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	ComponentShare           float64             `protobuf:"fixed64,5,opt,name=ComponentShare,proto3" json:"ComponentShare,omitempty"`
	SubstituteFlag           MDETFSubstituteFlag `protobuf:"varint,6,opt,name=SubstituteFlag,proto3,enum=com.htsc.mdc.insight.model.MDETFSubstituteFlag" json:"SubstituteFlag,omitempty"`
	PremiumRatio             float64             `protobuf:"fixed64,7,opt,name=PremiumRatio,proto3" json:"PremiumRatio,omitempty"`
	CreationCashSubstitute   float64             `protobuf:"fixed64,8,opt,name=CreationCashSubstitute,proto3" json:"CreationCashSubstitute,omitempty"`
	RedemptionCashSubstitute float64             `protobuf:"fixed64,9,opt,name=RedemptionCashSubstitute,proto3" json:"RedemptionCashSubstitute,omitempty"`
	TotalCashSubstitute      float64             `protobuf:"fixed64,10,opt,name=TotalCashSubstitute,proto3" json:"TotalCashSubstitute,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}            `json:"-"`
	XXX_unrecognized         []byte              `json:"-"`
	XXX_sizecache            int32               `json:"-"`
}

func (m *MDETFComponentDetail) Reset()         { *m = MDETFComponentDetail{} }
func (m *MDETFComponentDetail) String() string { return proto.CompactTextString(m) }
func (*MDETFComponentDetail) ProtoMessage()    {}
func (*MDETFComponentDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_15bf3747c044de5d, []int{1}
}

func (m *MDETFComponentDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MDETFComponentDetail.Unmarshal(m, b)
}
func (m *MDETFComponentDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MDETFComponentDetail.Marshal(b, m, deterministic)
}
func (m *MDETFComponentDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MDETFComponentDetail.Merge(m, src)
}
func (m *MDETFComponentDetail) XXX_Size() int {
	return xxx_messageInfo_MDETFComponentDetail.Size(m)
}
func (m *MDETFComponentDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MDETFComponentDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MDETFComponentDetail proto.InternalMessageInfo

func (m *MDETFComponentDetail) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *MDETFComponentDetail) GetSecurityID() string {
	if m != nil {
		return m.SecurityID
	}
	return ""
}

func (m *MDETFComponentDetail) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MDETFComponentDetail) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *MDETFComponentDetail) GetComponentShare() float64 {
	if m != nil {
		return m.ComponentShare
	}
	return 0
}

func (m *MDETFComponentDetail) GetSubstituteFlag() MDETFSubstituteFlag {
	if m != nil {
		return m.SubstituteFlag
	}
	return MDETFSubstituteFlag_DEFAULT_SUBSTITUTE_FLAG
}

func (m *MDETFComponentDetail) GetPremiumRatio() float64 {
	if m != nil {
		return m.PremiumRatio
	}
	return 0
}

func (m *MDETFComponentDetail) GetCreationCashSubstitute() float64 {
	if m != nil {
		return m.CreationCashSubstitute
	}
	return 0
}

func (m *MDETFComponentDetail) GetRedemptionCashSubstitute() float64 {
	if m != nil {
		return m.RedemptionCashSubstitute
	}
	return 0
}

func (m *MDETFComponentDetail) GetTotalCashSubstitute() float64 {
	if m != nil {
		return m.TotalCashSubstitute
	}
	return 0
}

func init() {
	proto.RegisterEnum("com.htsc.mdc.insight.model.MDETFSubstituteFlag", MDETFSubstituteFlag_name, MDETFSubstituteFlag_value)
	proto.RegisterType((*MDETFBasicInfo)(nil), "com.htsc.mdc.insight.model.MDETFBasicInfo")
	proto.RegisterType((*MDETFComponentDetail)(nil), "com.htsc.mdc.insight.model.MDETFComponentDetail")
}

func init() { proto.RegisterFile("MDETFBasicInfo.proto", fileDescriptor_15bf3747c044de5d) }

var fileDescriptor_15bf3747c044de5d = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdb, 0x6e, 0xdb, 0x36,
	0x18, 0x9e, 0xea, 0x34, 0x4d, 0xfe, 0x26, 0x8e, 0x4b, 0xa7, 0x31, 0xeb, 0x74, 0xad, 0x9b, 0xb5,
	0x9d, 0x96, 0x0d, 0x5a, 0x91, 0x0d, 0xdb, 0x30, 0xec, 0x62, 0x8e, 0x65, 0x2f, 0x06, 0x6c, 0xcf,
	0x93, 0xe4, 0xf4, 0xb2, 0x60, 0x2c, 0xce, 0x26, 0xa0, 0x83, 0x21, 0xd1, 0xdd, 0xfc, 0x1e, 0x7b,
	0x80, 0xbd, 0xe0, 0xde, 0x61, 0x20, 0x25, 0x45, 0x47, 0xa7, 0x18, 0x86, 0xde, 0x99, 0xdf, 0x89,
	0xe4, 0x6f, 0x8a, 0x3f, 0xe1, 0x78, 0xac, 0xf7, 0xad, 0xc1, 0x25, 0x09, 0xd9, 0x7c, 0xe8, 0xfd,
	0xee, 0x6b, 0xab, 0xc0, 0xe7, 0x3e, 0x6a, 0xcf, 0x7d, 0x57, 0x5b, 0xf2, 0x70, 0xae, 0xb9, 0xf6,
	0x5c, 0x63, 0x5e, 0xc8, 0x16, 0x4b, 0xae, 0xb9, 0xbe, 0x4d, 0x9d, 0x76, 0xab, 0x6f, 0xd2, 0xf9,
	0x3a, 0x60, 0x7c, 0x33, 0xd4, 0x4d, 0x7f, 0x1d, 0xcc, 0x69, 0x64, 0x6a, 0x37, 0x6f, 0x09, 0x6b,
	0xb3, 0x8a, 0xc1, 0xb3, 0x7f, 0xea, 0x50, 0xcf, 0x4f, 0x81, 0x5e, 0x43, 0xfd, 0xca, 0x32, 0x7b,
	0x69, 0x0a, 0x56, 0x3a, 0x8a, 0xba, 0x6f, 0x14, 0x50, 0xf4, 0x0c, 0x20, 0xa3, 0xb9, 0x27, 0x35,
	0x19, 0x04, 0x9d, 0xc0, 0xae, 0xb9, 0x71, 0x6f, 0x7c, 0x07, 0xd7, 0x24, 0x17, 0x8f, 0x04, 0x3e,
	0xd6, 0x75, 0xc2, 0x29, 0xde, 0xe9, 0x28, 0xea, 0x7d, 0x23, 0x1e, 0x45, 0xb8, 0xc5, 0x5c, 0x8a,
	0xef, 0x27, 0xb8, 0x18, 0xa1, 0xdf, 0xa0, 0x11, 0x16, 0x76, 0x84, 0x77, 0x3b, 0x8a, 0x5a, 0xbf,
	0x78, 0xa5, 0xe5, 0xea, 0x20, 0xf7, 0xaf, 0x95, 0xb6, 0x6f, 0x94, 0xec, 0xa8, 0x0f, 0x07, 0x61,
	0xa6, 0x16, 0xf8, 0x81, 0x8c, 0x7b, 0x71, 0x67, 0x9c, 0x10, 0x1a, 0x39, 0x9b, 0xa8, 0x40, 0x2f,
	0xa0, 0x84, 0x33, 0xdf, 0x1b, 0xea, 0xf8, 0x61, 0x54, 0x81, 0x14, 0x11, 0x95, 0x4c, 0x46, 0x71,
	0x25, 0x0e, 0xa2, 0x4a, 0xe6, 0x51, 0x74, 0x06, 0x07, 0x06, 0xb5, 0xa9, 0xbb, 0x8a, 0x93, 0x0e,
	0xa5, 0x2a, 0x87, 0xa1, 0x73, 0x68, 0xa4, 0xe3, 0x38, 0xad, 0x2e, 0x75, 0x25, 0x1c, 0xfd, 0x0c,
	0xa7, 0xc9, 0x0c, 0x29, 0xd7, 0x23, 0x2b, 0xc6, 0x89, 0x33, 0xd4, 0xf1, 0x91, 0xb4, 0xdd, 0x25,
	0x41, 0x57, 0xf0, 0x7c, 0x2b, 0x1d, 0x4f, 0xde, 0x90, 0x29, 0x1f, 0x92, 0xa1, 0x0b, 0x38, 0xee,
	0x05, 0x7e, 0x18, 0x46, 0x95, 0x4f, 0x17, 0xf1, 0x48, 0xda, 0x2b, 0x39, 0xf4, 0x23, 0xe0, 0x32,
	0x1e, 0x4f, 0x8b, 0xa4, 0x6f, 0x2b, 0x8f, 0xbe, 0x85, 0xc7, 0x83, 0xb5, 0x67, 0x8f, 0x89, 0x47,
	0x16, 0xd4, 0xa5, 0x1e, 0xef, 0xf9, 0xee, 0x8a, 0x78, 0x1b, 0xdc, 0x94, 0xc6, 0x6a, 0x52, 0xac,
	0x72, 0xe6, 0xd9, 0x34, 0x70, 0x36, 0xcc, 0x5b, 0x64, 0x4e, 0xf5, 0x71, 0xb4, 0xca, 0x2a, 0x0e,
	0x51, 0x68, 0x57, 0xe1, 0xf1, 0x09, 0x7d, 0xfc, 0x5f, 0x4e, 0xe8, 0x1d, 0x41, 0xe8, 0x3b, 0x38,
	0x29, 0xd7, 0x78, 0xe6, 0x31, 0x8e, 0x4f, 0x3a, 0x8a, 0xaa, 0x18, 0x5b, 0x58, 0x51, 0x88, 0x7e,
	0xc8, 0x99, 0x4b, 0x38, 0xed, 0x91, 0x70, 0x29, 0x76, 0xea, 0x7b, 0xd4, 0xe3, 0xb8, 0x25, 0x6d,
	0xd5, 0xa4, 0x38, 0x8a, 0x63, 0xf2, 0xa7, 0xc0, 0x0c, 0x11, 0x8a, 0xb1, 0x14, 0xe7, 0x30, 0xf4,
	0x14, 0xf6, 0x87, 0xe1, 0x74, 0x7d, 0xe3, 0xb0, 0x70, 0x89, 0x9f, 0x74, 0x14, 0x75, 0xcf, 0x48,
	0x01, 0xa4, 0xc2, 0xd1, 0x30, 0xec, 0x3a, 0x8e, 0xff, 0x47, 0xb2, 0x30, 0xdc, 0x96, 0x9a, 0x22,
	0x8c, 0xbe, 0x82, 0x47, 0x31, 0x94, 0x2e, 0x1d, 0x9f, 0x4a, 0x6d, 0x99, 0x10, 0xb3, 0x1a, 0x74,
	0xee, 0x07, 0xf6, 0x64, 0xed, 0xe2, 0xa7, 0x1d, 0x45, 0xad, 0x19, 0x29, 0x20, 0x3e, 0x45, 0x2b,
	0x20, 0x36, 0xf3, 0x16, 0x3a, 0xd9, 0xe0, 0x4f, 0xa3, 0x4f, 0x31, 0x45, 0xd0, 0x4b, 0x38, 0x9c,
	0x06, 0x34, 0x23, 0x79, 0x26, 0x25, 0x79, 0x50, 0xa8, 0xf2, 0xb5, 0x7a, 0x2e, 0xb7, 0x9f, 0x07,
	0x51, 0x1b, 0xf6, 0x26, 0xdd, 0xeb, 0x15, 0x0d, 0x7a, 0x33, 0xdc, 0x91, 0x82, 0xdb, 0x31, 0x6a,
	0x40, 0x6d, 0xd2, 0xbd, 0xc6, 0x2f, 0x24, 0x2c, 0x7e, 0x8a, 0x4c, 0x9d, 0xbd, 0x67, 0x36, 0xf5,
	0xec, 0xa9, 0xb4, 0x9c, 0x45, 0x99, 0x39, 0x50, 0xce, 0x1c, 0xd7, 0x65, 0xc4, 0x5c, 0xc6, 0xf1,
	0x67, 0xf1, 0xcc, 0x59, 0x50, 0xd4, 0x36, 0xad, 0x48, 0xa4, 0x7b, 0x29, 0x75, 0x45, 0x38, 0xfa,
	0xec, 0x32, 0xd6, 0x29, 0x0d, 0x66, 0x21, 0x0d, 0xf0, 0x2b, 0x29, 0xaf, 0xe4, 0xc4, 0x49, 0x2b,
	0xc4, 0x24, 0xae, 0xd7, 0xd1, 0x49, 0xab, 0x66, 0xc5, 0xd5, 0x34, 0xa1, 0x3c, 0xbf, 0xfc, 0xcf,
	0xa5, 0xa3, 0x84, 0x23, 0x0d, 0xd0, 0x84, 0xf2, 0xe2, 0x26, 0x54, 0xa9, 0xae, 0x60, 0xd0, 0x0f,
	0xd0, 0x2a, 0x66, 0x24, 0x8b, 0xfa, 0x42, 0x9a, 0xb6, 0xd1, 0xe8, 0x27, 0x78, 0x52, 0xce, 0x4b,
	0xbc, 0xe7, 0xd2, 0xbb, 0x5d, 0x80, 0xae, 0xe1, 0xb0, 0x6f, 0x0d, 0x6e, 0xff, 0xf3, 0x10, 0x7f,
	0xd9, 0xa9, 0xa9, 0x0f, 0x2f, 0xde, 0x68, 0xdb, 0x3b, 0xaf, 0x26, 0xfb, 0xe8, 0xad, 0x45, 0xa7,
	0x9c, 0x30, 0xc7, 0xc8, 0xc7, 0x9c, 0xfd, 0xb5, 0x13, 0xb7, 0xf4, 0x82, 0xee, 0xa3, 0x77, 0xdd,
	0xaa, 0x2e, 0xba, 0xf3, 0xff, 0xba, 0xa8, 0x68, 0x6f, 0xc9, 0x2e, 0xcc, 0x25, 0x09, 0xa2, 0xc6,
	0xad, 0x18, 0x05, 0x14, 0xbd, 0x85, 0xba, 0xb9, 0xbe, 0x09, 0x39, 0xe3, 0x6b, 0x4e, 0x07, 0x0e,
	0x59, 0xc4, 0xed, 0xfb, 0xeb, 0x0f, 0x16, 0x33, 0x6f, 0x33, 0x0a, 0x31, 0xe2, 0xb2, 0x9a, 0x06,
	0xd4, 0x65, 0x6b, 0x37, 0xba, 0xac, 0x1e, 0x44, 0x97, 0x55, 0x16, 0xcb, 0x5e, 0x9f, 0xe2, 0x2b,
	0x4e, 0x13, 0xf0, 0x5e, 0xfe, 0xfa, 0xcc, 0xb3, 0xa2, 0x07, 0x65, 0x5b, 0x5a, 0xce, 0xb9, 0x2f,
	0x9d, 0x5b, 0x79, 0xf4, 0x06, 0x9a, 0x96, 0xcf, 0x89, 0x53, 0xb0, 0x81, 0xb4, 0x55, 0x51, 0xe7,
	0xef, 0xa1, 0x59, 0xb1, 0x61, 0x74, 0x0a, 0x2d, 0xbd, 0x3f, 0xe8, 0xce, 0x46, 0xd6, 0x3b, 0x73,
	0x76, 0x69, 0x5a, 0x43, 0x6b, 0x66, 0xf5, 0xdf, 0x0d, 0x46, 0xdd, 0x5f, 0x1a, 0x9f, 0xa0, 0x16,
	0x34, 0xf5, 0xa1, 0xd9, 0x1d, 0x8d, 0x7e, 0x7d, 0x9b, 0x61, 0x1b, 0x0a, 0x3a, 0x86, 0x46, 0x09,
	0xbd, 0x87, 0x9a, 0x70, 0x34, 0x9e, 0x99, 0xd9, 0xa0, 0x46, 0xed, 0xf2, 0x7b, 0xb8, 0xe3, 0x29,
	0x79, 0x59, 0x78, 0x7c, 0x4e, 0xc5, 0x8b, 0x31, 0xbc, 0x52, 0xfe, 0x56, 0x94, 0x9b, 0x5d, 0xf9,
	0x7c, 0xfc, 0xe6, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xeb, 0x3c, 0x6c, 0xa0, 0x0a, 0x00,
	0x00,
}
