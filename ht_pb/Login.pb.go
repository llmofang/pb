// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Login.proto

package com_htsc_mdc_insight_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//登录类型
type ELoginType int32

const (
	ELoginType_DEFAULT_LOGIN_TYPE              ELoginType = 0
	ELoginType_INSIGHT_LOGIN_FOR_DISCOVERY     ELoginType = 1
	ELoginType_THRID_PARTY_LOGIN_FOR_DISCOVERY ELoginType = 2
	ELoginType_LOGIN_FOR_SERVICE               ELoginType = 3
)

var ELoginType_name = map[int32]string{
	0: "DEFAULT_LOGIN_TYPE",
	1: "INSIGHT_LOGIN_FOR_DISCOVERY",
	2: "THRID_PARTY_LOGIN_FOR_DISCOVERY",
	3: "LOGIN_FOR_SERVICE",
}

var ELoginType_value = map[string]int32{
	"DEFAULT_LOGIN_TYPE":              0,
	"INSIGHT_LOGIN_FOR_DISCOVERY":     1,
	"THRID_PARTY_LOGIN_FOR_DISCOVERY": 2,
	"LOGIN_FOR_SERVICE":               3,
}

func (x ELoginType) String() string {
	return proto.EnumName(ELoginType_name, int32(x))
}

func (ELoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{0}
}

//登录请求
//
//行情中心的登录场景有三种：
//一种是行情中心自身的用户，利用行情中心的用户名和密码登录到服务发现网关。
//  在此种登录方式下，需要填充login_type为INSIGHT_LOGIN_FOR_DISCOVERY，
//  并填充uwp字段（uwp的otp等单次校验信息根据系统业务决定是否填充）。
//第二种是利用第三方系统已经校验过的用户名和Token登录到服务发现网关。
//  在此种登录方式下，需要填充login_type为THRID_PARTY_LOGIN_FOR_DISCOVERY，
//  并填充uwt字段。
//在上述两种场景下，服务发现网关会在用户登录成功时为用户回送token（由统一认证颁发或原样返回）
//第三种是用户登录到行情服务网关。
//   在此种登录场景下，需要填充login_type为LOGIN_FOR_SERVICE，
//   客户端在此种场景下登录时，应当填充uwt字段
//
//客户端在发送登录请求时应当尽可能多地填充DeviceInfo中的字段
//
//网关会在用户请求登录时回复以LoginResponse，对服务发现网关而言，
//LoginResponse会直接包含服务发现的结果ServiceDiscoveryResponse
//
type LoginRequest struct {
	AppType              int32             `protobuf:"varint,1,opt,name=appType,proto3" json:"appType,omitempty"`
	AppVersion           string            `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	LoginType            ELoginType        `protobuf:"varint,3,opt,name=loginType,proto3,enum=com.htsc.mdc.insight.model.ELoginType" json:"loginType,omitempty"`
	Uwp                  *UserWithPassword `protobuf:"bytes,4,opt,name=uwp,proto3" json:"uwp,omitempty"`
	Uwt                  *UserWithToken    `protobuf:"bytes,5,opt,name=uwt,proto3" json:"uwt,omitempty"`
	DeviceInfo           *DeviceInfo       `protobuf:"bytes,6,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	IsSupportCompressed  bool              `protobuf:"varint,7,opt,name=isSupportCompressed,proto3" json:"isSupportCompressed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetAppType() int32 {
	if m != nil {
		return m.AppType
	}
	return 0
}

func (m *LoginRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *LoginRequest) GetLoginType() ELoginType {
	if m != nil {
		return m.LoginType
	}
	return ELoginType_DEFAULT_LOGIN_TYPE
}

func (m *LoginRequest) GetUwp() *UserWithPassword {
	if m != nil {
		return m.Uwp
	}
	return nil
}

func (m *LoginRequest) GetUwt() *UserWithToken {
	if m != nil {
		return m.Uwt
	}
	return nil
}

func (m *LoginRequest) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *LoginRequest) GetIsSupportCompressed() bool {
	if m != nil {
		return m.IsSupportCompressed
	}
	return false
}

//登录响应
type LoginResponse struct {
	IsSuccess     bool                 `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	ErrorContext  *InsightErrorContext `protobuf:"bytes,2,opt,name=errorContext,proto3" json:"errorContext,omitempty"`
	Token         string               `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	LastLoginTime int64                `protobuf:"varint,4,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	LastLoginIp   string               `protobuf:"bytes,5,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	ReservedInfo  string               `protobuf:"bytes,6,opt,name=reservedInfo,proto3" json:"reservedInfo,omitempty"`
	//当用户登录行情服务网关成功时，行情服务网关会向用户揭示行情来源和站点名称
	DataSource string `protobuf:"bytes,7,opt,name=dataSource,proto3" json:"dataSource,omitempty"`
	Site       string `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	//当用户登录服务发现网关成功时，服务发现网关会在登录响应报文内直接填充服务发现回应
	//用户也可通过发送ServiceDiscoveryRequest专门要求服务发现网关ServiceDiscoveryResponse
	ServiceDiscoveryResponse *ServiceDiscoveryResponse `protobuf:"bytes,9,opt,name=serviceDiscoveryResponse,proto3" json:"serviceDiscoveryResponse,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *LoginResponse) GetErrorContext() *InsightErrorContext {
	if m != nil {
		return m.ErrorContext
	}
	return nil
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *LoginResponse) GetLastLoginIp() string {
	if m != nil {
		return m.LastLoginIp
	}
	return ""
}

func (m *LoginResponse) GetReservedInfo() string {
	if m != nil {
		return m.ReservedInfo
	}
	return ""
}

func (m *LoginResponse) GetDataSource() string {
	if m != nil {
		return m.DataSource
	}
	return ""
}

func (m *LoginResponse) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *LoginResponse) GetServiceDiscoveryResponse() *ServiceDiscoveryResponse {
	if m != nil {
		return m.ServiceDiscoveryResponse
	}
	return nil
}

//以密码方式登录时的用户信息
type UserWithPassword struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Otp                  string   `protobuf:"bytes,3,opt,name=otp,proto3" json:"otp,omitempty"`
	Captcha              string   `protobuf:"bytes,4,opt,name=captcha,proto3" json:"captcha,omitempty"`
	Sms                  string   `protobuf:"bytes,5,opt,name=sms,proto3" json:"sms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserWithPassword) Reset()         { *m = UserWithPassword{} }
func (m *UserWithPassword) String() string { return proto.CompactTextString(m) }
func (*UserWithPassword) ProtoMessage()    {}
func (*UserWithPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{2}
}

func (m *UserWithPassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserWithPassword.Unmarshal(m, b)
}
func (m *UserWithPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserWithPassword.Marshal(b, m, deterministic)
}
func (m *UserWithPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserWithPassword.Merge(m, src)
}
func (m *UserWithPassword) XXX_Size() int {
	return xxx_messageInfo_UserWithPassword.Size(m)
}
func (m *UserWithPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_UserWithPassword.DiscardUnknown(m)
}

var xxx_messageInfo_UserWithPassword proto.InternalMessageInfo

func (m *UserWithPassword) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserWithPassword) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserWithPassword) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

func (m *UserWithPassword) GetCaptcha() string {
	if m != nil {
		return m.Captcha
	}
	return ""
}

func (m *UserWithPassword) GetSms() string {
	if m != nil {
		return m.Sms
	}
	return ""
}

//以Token方式登录时的用户信息
type UserWithToken struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserWithToken) Reset()         { *m = UserWithToken{} }
func (m *UserWithToken) String() string { return proto.CompactTextString(m) }
func (*UserWithToken) ProtoMessage()    {}
func (*UserWithToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{3}
}

func (m *UserWithToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserWithToken.Unmarshal(m, b)
}
func (m *UserWithToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserWithToken.Marshal(b, m, deterministic)
}
func (m *UserWithToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserWithToken.Merge(m, src)
}
func (m *UserWithToken) XXX_Size() int {
	return xxx_messageInfo_UserWithToken.Size(m)
}
func (m *UserWithToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserWithToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserWithToken proto.InternalMessageInfo

func (m *UserWithToken) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserWithToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//登录行情网关的设备信息
//业务系统在登录时应当尽可能地填充下列字段
type DeviceInfo struct {
	//deviceId和deviceMac至少应当填充一项
	DeviceId             string   `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	DeviceMac            string   `protobuf:"bytes,2,opt,name=deviceMac,proto3" json:"deviceMac,omitempty"`
	DeviceHarddisk       string   `protobuf:"bytes,3,opt,name=deviceHarddisk,proto3" json:"deviceHarddisk,omitempty"`
	DeviceCPU            string   `protobuf:"bytes,4,opt,name=deviceCPU,proto3" json:"deviceCPU,omitempty"`
	CellphoneNumber      string   `protobuf:"bytes,5,opt,name=cellphoneNumber,proto3" json:"cellphoneNumber,omitempty"`
	CellphoneImei        string   `protobuf:"bytes,6,opt,name=cellphoneImei,proto3" json:"cellphoneImei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fca71afc8298ae2a, []int{4}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceInfo) GetDeviceMac() string {
	if m != nil {
		return m.DeviceMac
	}
	return ""
}

func (m *DeviceInfo) GetDeviceHarddisk() string {
	if m != nil {
		return m.DeviceHarddisk
	}
	return ""
}

func (m *DeviceInfo) GetDeviceCPU() string {
	if m != nil {
		return m.DeviceCPU
	}
	return ""
}

func (m *DeviceInfo) GetCellphoneNumber() string {
	if m != nil {
		return m.CellphoneNumber
	}
	return ""
}

func (m *DeviceInfo) GetCellphoneImei() string {
	if m != nil {
		return m.CellphoneImei
	}
	return ""
}

func init() {
	proto.RegisterEnum("com.htsc.mdc.insight.model.ELoginType", ELoginType_name, ELoginType_value)
	proto.RegisterType((*LoginRequest)(nil), "com.htsc.mdc.insight.model.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "com.htsc.mdc.insight.model.LoginResponse")
	proto.RegisterType((*UserWithPassword)(nil), "com.htsc.mdc.insight.model.UserWithPassword")
	proto.RegisterType((*UserWithToken)(nil), "com.htsc.mdc.insight.model.UserWithToken")
	proto.RegisterType((*DeviceInfo)(nil), "com.htsc.mdc.insight.model.DeviceInfo")
}

func init() { proto.RegisterFile("Login.proto", fileDescriptor_fca71afc8298ae2a) }

var fileDescriptor_fca71afc8298ae2a = []byte{
	// 698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0x13, 0x3b,
	0x14, 0x7d, 0xd3, 0xf4, 0x23, 0x73, 0xd3, 0xf6, 0xe5, 0xf9, 0xbd, 0x57, 0x0d, 0x01, 0xd1, 0x28,
	0xa0, 0x2a, 0x20, 0x08, 0xa8, 0xb0, 0x43, 0x42, 0x6a, 0x93, 0x69, 0x33, 0x52, 0x48, 0x23, 0x4f,
	0x5a, 0xd4, 0x55, 0x34, 0x9d, 0x31, 0xcd, 0xa8, 0x99, 0xb1, 0xb1, 0x9d, 0x96, 0x2e, 0x59, 0x20,
	0xf1, 0x33, 0x58, 0xf3, 0x9b, 0xf8, 0x31, 0xc8, 0x9e, 0xaf, 0x24, 0x6a, 0x23, 0x76, 0xbe, 0xc7,
	0xf7, 0x5c, 0xd9, 0xe7, 0x1c, 0x1b, 0x2a, 0x3d, 0x7a, 0x19, 0xc6, 0x2d, 0xc6, 0xa9, 0xa4, 0xa8,
	0xe6, 0xd3, 0xa8, 0x35, 0x96, 0xc2, 0x6f, 0x45, 0x81, 0xdf, 0x0a, 0x63, 0x11, 0x5e, 0x8e, 0x65,
	0x2b, 0xa2, 0x01, 0x99, 0xd4, 0x76, 0x5c, 0xc2, 0xaf, 0x43, 0x9f, 0x74, 0x42, 0xe1, 0xd3, 0x6b,
	0xc2, 0x6f, 0x13, 0x4e, 0xed, 0x81, 0x93, 0xb4, 0xd9, 0x9c, 0x53, 0xde, 0xa6, 0xb1, 0x24, 0x5f,
	0x64, 0xb2, 0xd5, 0xf8, 0x56, 0x82, 0x4d, 0x3d, 0x1e, 0x93, 0xcf, 0x53, 0x22, 0x24, 0xb2, 0x60,
	0xc3, 0x63, 0x6c, 0x78, 0xcb, 0x88, 0x65, 0xd4, 0x8d, 0xe6, 0x1a, 0xce, 0x4a, 0xf4, 0x18, 0xc0,
	0x63, 0xec, 0x8c, 0x70, 0x11, 0xd2, 0xd8, 0x5a, 0xa9, 0x1b, 0x4d, 0x13, 0xcf, 0x20, 0xa8, 0x03,
	0xe6, 0x44, 0x4d, 0xd2, 0xdc, 0x52, 0xdd, 0x68, 0x6e, 0xef, 0xef, 0xb5, 0xee, 0x3f, 0x6d, 0xcb,
	0xee, 0x65, 0xdd, 0xb8, 0x20, 0xa2, 0xf7, 0x50, 0x9a, 0xde, 0x30, 0x6b, 0xb5, 0x6e, 0x34, 0x2b,
	0xfb, 0x2f, 0x96, 0xf1, 0x4f, 0x05, 0xe1, 0x1f, 0x43, 0x39, 0x1e, 0x78, 0x42, 0xdc, 0x50, 0x1e,
	0x60, 0x45, 0x44, 0xef, 0x14, 0x5f, 0x5a, 0x6b, 0x9a, 0xff, 0xec, 0x4f, 0xf8, 0x43, 0x7a, 0x45,
	0x62, 0x45, 0x96, 0xe8, 0x08, 0x20, 0x20, 0x4a, 0x41, 0x27, 0xfe, 0x44, 0xad, 0x75, 0x3d, 0x63,
	0xe9, 0x1d, 0x3a, 0x79, 0x37, 0x9e, 0x61, 0xa2, 0xd7, 0xf0, 0x6f, 0x28, 0xdc, 0x29, 0x63, 0x94,
	0xcb, 0x36, 0x8d, 0x18, 0x27, 0x42, 0x90, 0xc0, 0xda, 0xa8, 0x1b, 0xcd, 0x32, 0xbe, 0x6b, 0xab,
	0xf1, 0xb3, 0x04, 0x5b, 0xa9, 0x0f, 0x82, 0xd1, 0x58, 0x10, 0xf4, 0x08, 0x4c, 0xd5, 0xe8, 0xfb,
	0x44, 0x08, 0x6d, 0x45, 0x19, 0x17, 0x00, 0x72, 0x61, 0x93, 0xcc, 0xb8, 0xa9, 0xed, 0xa8, 0xec,
	0xbf, 0x5a, 0x76, 0xd6, 0x3b, 0x42, 0x80, 0xe7, 0x86, 0xa0, 0xff, 0x60, 0x4d, 0x2a, 0x31, 0xb4,
	0x7b, 0x26, 0x4e, 0x0a, 0xf4, 0x14, 0xb6, 0x26, 0x9e, 0x90, 0x89, 0x5b, 0x61, 0x44, 0xb4, 0x37,
	0x25, 0x3c, 0x0f, 0xa2, 0x3a, 0x54, 0x72, 0xc0, 0x61, 0x5a, 0x7f, 0x13, 0xcf, 0x42, 0xa8, 0x01,
	0x9b, 0x9c, 0x08, 0xc2, 0xaf, 0x49, 0x90, 0xcb, 0x6b, 0xe2, 0x39, 0x4c, 0x65, 0x2c, 0xf0, 0xa4,
	0xe7, 0xd2, 0x29, 0xf7, 0x89, 0xd6, 0xcb, 0xc4, 0x33, 0x08, 0x42, 0xb0, 0x2a, 0x42, 0x49, 0xac,
	0xb2, 0xde, 0xd1, 0x6b, 0xc4, 0xc0, 0x12, 0x0b, 0xb9, 0xcf, 0x44, 0xb4, 0x4c, 0x2d, 0xcb, 0xdb,
	0x65, 0xb2, 0xb8, 0xf7, 0x70, 0xf1, 0xbd, 0x53, 0x1b, 0xdf, 0x0d, 0xa8, 0x2e, 0xa6, 0x0f, 0xd5,
	0xa0, 0x3c, 0x15, 0x84, 0xf7, 0xbd, 0x28, 0x79, 0x39, 0x26, 0xce, 0x6b, 0xb5, 0xc7, 0xd2, 0xbe,
	0xf4, 0xe1, 0xe4, 0x35, 0xaa, 0x42, 0x89, 0x4a, 0x96, 0x4a, 0xae, 0x96, 0xea, 0x09, 0xfa, 0x1e,
	0x93, 0xfe, 0xd8, 0xd3, 0x52, 0x9b, 0x38, 0x2b, 0x55, 0xaf, 0x88, 0x44, 0x2a, 0xae, 0x5a, 0x36,
	0x0e, 0x60, 0x6b, 0x2e, 0xc7, 0x4b, 0x8f, 0x91, 0xfb, 0xbb, 0x32, 0xe3, 0x6f, 0xe3, 0x97, 0x01,
	0x50, 0xe4, 0x58, 0x0d, 0x48, 0x93, 0x1c, 0x64, 0x03, 0xb2, 0x5a, 0x65, 0x32, 0x59, 0x7f, 0xf0,
	0xfc, 0x74, 0x48, 0x01, 0xa0, 0x3d, 0xd8, 0x4e, 0x8a, 0xae, 0xc7, 0x83, 0x20, 0x14, 0x57, 0xe9,
	0xa5, 0x16, 0xd0, 0x62, 0x4a, 0x7b, 0x70, 0x9a, 0xde, 0xb0, 0x00, 0x50, 0x13, 0xfe, 0xf6, 0xc9,
	0x64, 0xc2, 0xc6, 0x34, 0x26, 0xfd, 0x69, 0x74, 0x41, 0x78, 0x7a, 0xdf, 0x45, 0x58, 0x05, 0x33,
	0x87, 0x9c, 0x88, 0x84, 0x69, 0xa2, 0xe6, 0xc1, 0xe7, 0x5f, 0x0d, 0x80, 0xe2, 0xab, 0x41, 0x3b,
	0x80, 0x3a, 0xf6, 0xd1, 0xc1, 0x69, 0x6f, 0x38, 0xea, 0x9d, 0x1c, 0x3b, 0xfd, 0xd1, 0xf0, 0x7c,
	0x60, 0x57, 0xff, 0x42, 0xbb, 0xf0, 0xd0, 0xe9, 0xbb, 0xce, 0x71, 0x37, 0xc3, 0x8f, 0x4e, 0xf0,
	0xa8, 0xe3, 0xb8, 0xed, 0x93, 0x33, 0x1b, 0x9f, 0x57, 0x0d, 0xf4, 0x04, 0x76, 0x87, 0x5d, 0xec,
	0x74, 0x46, 0x83, 0x03, 0x3c, 0x3c, 0xbf, 0xb3, 0x69, 0x05, 0xfd, 0x0f, 0xff, 0x14, 0x1b, 0xae,
	0x8d, 0xcf, 0x9c, 0xb6, 0x5d, 0x2d, 0x1d, 0xbe, 0x84, 0x25, 0xdf, 0xf6, 0x21, 0xe8, 0xd3, 0x0d,
	0xd4, 0x7f, 0xdc, 0x35, 0x7e, 0x18, 0xc6, 0xc5, 0xba, 0xfe, 0x9b, 0xdf, 0xfc, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x9e, 0xaf, 0x01, 0x7b, 0xf9, 0x05, 0x00, 0x00,
}
