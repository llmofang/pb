// Code generated by protoc-gen-go. DO NOT EDIT.
// source: EMarketDataType.proto

package com_htsc_mdc_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//行情数据类型
type EMarketDataType int32

const (
	EMarketDataType_UNKNOWN_DATA_TYPE                         EMarketDataType = 0
	EMarketDataType_MD_TICK                                   EMarketDataType = 1
	EMarketDataType_MD_TRANSACTION                            EMarketDataType = 2
	EMarketDataType_MD_ORDER                                  EMarketDataType = 3
	EMarketDataType_MD_CONSTANT                               EMarketDataType = 4
	EMarketDataType_DYNAMIC_PACKET                            EMarketDataType = 5
	EMarketDataType_MD_ETF_BASICINFO                          EMarketDataType = 6
	EMarketDataType_MD_KLINE_1MIN                             EMarketDataType = 20
	EMarketDataType_MD_KLINE_5MIN                             EMarketDataType = 21
	EMarketDataType_MD_KLINE_15MIN                            EMarketDataType = 22
	EMarketDataType_MD_KLINE_30MIN                            EMarketDataType = 23
	EMarketDataType_MD_KLINE_60MIN                            EMarketDataType = 24
	EMarketDataType_MD_KLINE_1D                               EMarketDataType = 25
	EMarketDataType_MD_KLINE_15S                              EMarketDataType = 26
	EMarketDataType_MD_TWAP_1MIN                              EMarketDataType = 30
	EMarketDataType_MD_TWAP_1S                                EMarketDataType = 31
	EMarketDataType_MD_VWAP_1MIN                              EMarketDataType = 40
	EMarketDataType_MD_VWAP_1S                                EMarketDataType = 41
	EMarketDataType_MD_SIMPLE_TICK                            EMarketDataType = 50
	EMarketDataType_AD_UPSDOWNS_ANALYSIS                      EMarketDataType = 51
	EMarketDataType_AD_INDICATORS_RANKING                     EMarketDataType = 52
	EMarketDataType_AD_VOLUME_BYPRICE                         EMarketDataType = 53
	EMarketDataType_AD_FUND_FLOW_ANALYSIS                     EMarketDataType = 54
	EMarketDataType_AD_ORDERBOOK_SNAPSHOT                     EMarketDataType = 55
	EMarketDataType_AD_ORDERBOOK_SNAPSHOT_WITH_TICK           EMarketDataType = 56
	EMarketDataType_AD_CHIP_DISTRIBUTION                      EMarketDataType = 57
	EMarketDataType_MD_WARRANT                                EMarketDataType = 58
	EMarketDataType_MD_SECURITY_LENDING                       EMarketDataType = 59
	EMarketDataType_AD_NEWS                                   EMarketDataType = 60
	EMarketDataType_AD_STARING_RESULT                         EMarketDataType = 61
	EMarketDataType_AD_DERIVED_ANALYSIS                       EMarketDataType = 62
	EMarketDataType_MD_FI_QUOTE                               EMarketDataType = 70
	EMarketDataType_REPLAY_MD_TICK_WITH_TRANSACTION           EMarketDataType = 101
	EMarketDataType_REPLAY_MD_TICK_WITH_ORDER                 EMarketDataType = 102
	EMarketDataType_REPLAY_MD_TICK_WITH_TRANSACTION_AND_ORDER EMarketDataType = 103
)

var EMarketDataType_name = map[int32]string{
	0:   "UNKNOWN_DATA_TYPE",
	1:   "MD_TICK",
	2:   "MD_TRANSACTION",
	3:   "MD_ORDER",
	4:   "MD_CONSTANT",
	5:   "DYNAMIC_PACKET",
	6:   "MD_ETF_BASICINFO",
	20:  "MD_KLINE_1MIN",
	21:  "MD_KLINE_5MIN",
	22:  "MD_KLINE_15MIN",
	23:  "MD_KLINE_30MIN",
	24:  "MD_KLINE_60MIN",
	25:  "MD_KLINE_1D",
	26:  "MD_KLINE_15S",
	30:  "MD_TWAP_1MIN",
	31:  "MD_TWAP_1S",
	40:  "MD_VWAP_1MIN",
	41:  "MD_VWAP_1S",
	50:  "MD_SIMPLE_TICK",
	51:  "AD_UPSDOWNS_ANALYSIS",
	52:  "AD_INDICATORS_RANKING",
	53:  "AD_VOLUME_BYPRICE",
	54:  "AD_FUND_FLOW_ANALYSIS",
	55:  "AD_ORDERBOOK_SNAPSHOT",
	56:  "AD_ORDERBOOK_SNAPSHOT_WITH_TICK",
	57:  "AD_CHIP_DISTRIBUTION",
	58:  "MD_WARRANT",
	59:  "MD_SECURITY_LENDING",
	60:  "AD_NEWS",
	61:  "AD_STARING_RESULT",
	62:  "AD_DERIVED_ANALYSIS",
	70:  "MD_FI_QUOTE",
	101: "REPLAY_MD_TICK_WITH_TRANSACTION",
	102: "REPLAY_MD_TICK_WITH_ORDER",
	103: "REPLAY_MD_TICK_WITH_TRANSACTION_AND_ORDER",
}

var EMarketDataType_value = map[string]int32{
	"UNKNOWN_DATA_TYPE":               0,
	"MD_TICK":                         1,
	"MD_TRANSACTION":                  2,
	"MD_ORDER":                        3,
	"MD_CONSTANT":                     4,
	"DYNAMIC_PACKET":                  5,
	"MD_ETF_BASICINFO":                6,
	"MD_KLINE_1MIN":                   20,
	"MD_KLINE_5MIN":                   21,
	"MD_KLINE_15MIN":                  22,
	"MD_KLINE_30MIN":                  23,
	"MD_KLINE_60MIN":                  24,
	"MD_KLINE_1D":                     25,
	"MD_KLINE_15S":                    26,
	"MD_TWAP_1MIN":                    30,
	"MD_TWAP_1S":                      31,
	"MD_VWAP_1MIN":                    40,
	"MD_VWAP_1S":                      41,
	"MD_SIMPLE_TICK":                  50,
	"AD_UPSDOWNS_ANALYSIS":            51,
	"AD_INDICATORS_RANKING":           52,
	"AD_VOLUME_BYPRICE":               53,
	"AD_FUND_FLOW_ANALYSIS":           54,
	"AD_ORDERBOOK_SNAPSHOT":           55,
	"AD_ORDERBOOK_SNAPSHOT_WITH_TICK": 56,
	"AD_CHIP_DISTRIBUTION":            57,
	"MD_WARRANT":                      58,
	"MD_SECURITY_LENDING":             59,
	"AD_NEWS":                         60,
	"AD_STARING_RESULT":               61,
	"AD_DERIVED_ANALYSIS":             62,
	"MD_FI_QUOTE":                     70,
	"REPLAY_MD_TICK_WITH_TRANSACTION": 101,
	"REPLAY_MD_TICK_WITH_ORDER":       102,
	"REPLAY_MD_TICK_WITH_TRANSACTION_AND_ORDER": 103,
}

func (x EMarketDataType) String() string {
	return proto.EnumName(EMarketDataType_name, int32(x))
}

func (EMarketDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ed0085c5799f24b, []int{0}
}

func init() {
	proto.RegisterEnum("com.htsc.mdc.insight.model.EMarketDataType", EMarketDataType_name, EMarketDataType_value)
}

func init() { proto.RegisterFile("EMarketDataType.proto", fileDescriptor_7ed0085c5799f24b) }

var fileDescriptor_7ed0085c5799f24b = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0x13, 0x31,
	0x14, 0x24, 0x7c, 0x14, 0xe4, 0x96, 0xd6, 0x35, 0x09, 0xfd, 0x90, 0xa0, 0x07, 0x2e, 0x14, 0x89,
	0x08, 0x08, 0x6d, 0xf9, 0x96, 0xde, 0xae, 0xbd, 0x8d, 0xb5, 0xbb, 0xf6, 0x62, 0x7b, 0xb3, 0xda,
	0xd3, 0x53, 0x48, 0x43, 0x5b, 0x41, 0x48, 0xd5, 0xe6, 0xc2, 0x5f, 0xe1, 0xc4, 0x4f, 0x45, 0x4e,
	0x4c, 0xdb, 0x54, 0x15, 0x1c, 0x33, 0x9e, 0x79, 0x99, 0xb7, 0x33, 0x8f, 0xb4, 0x44, 0xde, 0x3f,
	0xfd, 0x36, 0x9c, 0xf0, 0xfe, 0xa4, 0xef, 0x7e, 0x9e, 0x0c, 0xdb, 0x27, 0xa7, 0xe3, 0xc9, 0x98,
	0x6d, 0x0e, 0xc6, 0xa3, 0xf6, 0xd1, 0xe4, 0x6c, 0xd0, 0x1e, 0x1d, 0x0c, 0xda, 0xc7, 0x3f, 0xce,
	0x8e, 0x0f, 0x8f, 0x26, 0xed, 0xd1, 0xf8, 0x60, 0xf8, 0xfd, 0xd9, 0xaf, 0x05, 0xb2, 0x72, 0x45,
	0xc5, 0x5a, 0x64, 0xb5, 0x54, 0xa9, 0xd2, 0x95, 0x42, 0x0e, 0x0e, 0xd0, 0xd5, 0x85, 0xa0, 0x37,
	0xd8, 0x22, 0xb9, 0x9b, 0x73, 0x74, 0x32, 0x4e, 0x69, 0x83, 0x31, 0xb2, 0xec, 0x7f, 0x18, 0x50,
	0x16, 0x62, 0x27, 0xb5, 0xa2, 0x37, 0xd9, 0x12, 0xb9, 0x97, 0x73, 0xd4, 0x86, 0x0b, 0x43, 0x6f,
	0xb1, 0x15, 0xb2, 0x98, 0x73, 0x8c, 0xb5, 0xb2, 0x0e, 0x94, 0xa3, 0xb7, 0xbd, 0x84, 0xd7, 0x0a,
	0x72, 0x19, 0x63, 0x01, 0x71, 0x2a, 0x1c, 0xbd, 0xc3, 0x9a, 0x84, 0xe6, 0x1c, 0x85, 0x4b, 0x30,
	0x02, 0x2b, 0x63, 0xa9, 0x12, 0x4d, 0x17, 0xd8, 0x2a, 0xb9, 0x9f, 0x73, 0x4c, 0x33, 0xa9, 0x04,
	0xbe, 0xcc, 0xa5, 0xa2, 0xcd, 0x39, 0x68, 0xc7, 0x43, 0xad, 0x60, 0x21, 0xb0, 0xa6, 0xd8, 0xc3,
	0x39, 0xac, 0xf3, 0xc2, 0x63, 0x6b, 0x73, 0xd8, 0xee, 0x14, 0x5b, 0x0f, 0xe6, 0x82, 0x96, 0xd3,
	0x0d, 0x46, 0xc9, 0xd2, 0xa5, 0x61, 0x96, 0x6e, 0x06, 0xc4, 0x55, 0x50, 0xcc, 0x3c, 0x3c, 0x66,
	0xcb, 0x84, 0x9c, 0x23, 0x96, 0x6e, 0x05, 0x46, 0xef, 0x9c, 0xf1, 0x34, 0x30, 0x7a, 0x81, 0xb1,
	0x1d, 0xfe, 0xda, 0xca, 0xbc, 0xc8, 0xc4, 0xec, 0xcb, 0xbd, 0x62, 0xeb, 0xa4, 0x09, 0x1c, 0xcb,
	0xc2, 0x72, 0x5d, 0x29, 0x8b, 0xa0, 0x20, 0xab, 0xad, 0xb4, 0xb4, 0xc3, 0x36, 0x48, 0x0b, 0x38,
	0x4a, 0xc5, 0x65, 0x0c, 0x4e, 0x1b, 0x8b, 0x06, 0x54, 0x2a, 0xd5, 0x3e, 0x7d, 0xed, 0x23, 0x01,
	0x8e, 0x3d, 0x9d, 0x95, 0xb9, 0xc0, 0xa8, 0x2e, 0x8c, 0x8c, 0x05, 0xdd, 0x09, 0x8a, 0xa4, 0x54,
	0x1c, 0x93, 0x4c, 0x57, 0x17, 0xc3, 0x76, 0xc3, 0xd3, 0x34, 0x8c, 0x48, 0xeb, 0x14, 0xad, 0x82,
	0xc2, 0x76, 0xb5, 0xa3, 0x7b, 0xec, 0x09, 0xd9, 0xba, 0xf6, 0x09, 0x2b, 0xe9, 0xba, 0x33, 0x9b,
	0x6f, 0x82, 0xcd, 0xb8, 0x2b, 0x0b, 0xe4, 0xd2, 0x3a, 0x23, 0xa3, 0x72, 0x1a, 0xf3, 0xdb, 0xb0,
	0x64, 0x05, 0xc6, 0xf8, 0x5c, 0xdf, 0xb1, 0x35, 0xf2, 0xc0, 0x2f, 0x29, 0xe2, 0xd2, 0x48, 0x57,
	0x63, 0x26, 0x14, 0xf7, 0xa6, 0xdf, 0xfb, 0xc2, 0x00, 0x47, 0x25, 0x2a, 0x4b, 0x3f, 0x84, 0x0d,
	0xac, 0x03, 0x23, 0xd5, 0x3e, 0x1a, 0x61, 0xcb, 0xcc, 0xd1, 0x8f, 0x5e, 0x0c, 0x1c, 0xb9, 0x30,
	0xb2, 0x27, 0xf8, 0x85, 0xff, 0x4f, 0x21, 0xa1, 0x44, 0xe2, 0xe7, 0x52, 0x3b, 0x41, 0x13, 0xef,
	0xda, 0x88, 0x22, 0x83, 0x1a, 0x43, 0x0b, 0x83, 0xdd, 0x4b, 0x15, 0x1c, 0xb2, 0x47, 0x64, 0xe3,
	0x3a, 0xd2, 0xac, 0x93, 0x5f, 0xd9, 0x73, 0xb2, 0xfd, 0x9f, 0x19, 0x08, 0xea, 0x6f, 0x85, 0x0f,
	0xa3, 0x3d, 0xf2, 0x8f, 0xd3, 0x89, 0x9a, 0x57, 0xee, 0xa6, 0xf0, 0xc7, 0xd6, 0x6d, 0xfc, 0x6e,
	0x34, 0xbe, 0x2c, 0x4c, 0x0f, 0xaf, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff, 0x44, 0x8c, 0x16, 0x0c,
	0x91, 0x03, 0x00, 0x00,
}
