// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ADOrderbookSnapshotWithTick.proto

package com_htsc_mdc_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//基于订单簿推算的行情快照与原始行情
type ADOrderbookSnapshotWithTick struct {
	HTSCSecurityID       string               `protobuf:"bytes,1,opt,name=HTSCSecurityID,proto3" json:"HTSCSecurityID,omitempty"`
	MDDate               int32                `protobuf:"varint,2,opt,name=MDDate,proto3" json:"MDDate,omitempty"`
	MDTime               int32                `protobuf:"varint,3,opt,name=MDTime,proto3" json:"MDTime,omitempty"`
	DataTimestamp        int64                `protobuf:"varint,4,opt,name=DataTimestamp,proto3" json:"DataTimestamp,omitempty"`
	SecurityIDSource     ESecurityIDSource    `protobuf:"varint,5,opt,name=securityIDSource,proto3,enum=com.htsc.mdc.model.ESecurityIDSource" json:"securityIDSource,omitempty"`
	SecurityType         ESecurityType        `protobuf:"varint,6,opt,name=securityType,proto3,enum=com.htsc.mdc.model.ESecurityType" json:"securityType,omitempty"`
	ExchangeDate         int32                `protobuf:"varint,7,opt,name=ExchangeDate,proto3" json:"ExchangeDate,omitempty"`
	ExchangeTime         int32                `protobuf:"varint,8,opt,name=ExchangeTime,proto3" json:"ExchangeTime,omitempty"`
	OrderbookSnapshot    *ADOrderbookSnapshot `protobuf:"bytes,10,opt,name=orderbookSnapshot,proto3" json:"orderbookSnapshot,omitempty"`
	MdStock              *MDStock             `protobuf:"bytes,11,opt,name=mdStock,proto3" json:"mdStock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ADOrderbookSnapshotWithTick) Reset()         { *m = ADOrderbookSnapshotWithTick{} }
func (m *ADOrderbookSnapshotWithTick) String() string { return proto.CompactTextString(m) }
func (*ADOrderbookSnapshotWithTick) ProtoMessage()    {}
func (*ADOrderbookSnapshotWithTick) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff8eb06279197a5b, []int{0}
}

func (m *ADOrderbookSnapshotWithTick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADOrderbookSnapshotWithTick.Unmarshal(m, b)
}
func (m *ADOrderbookSnapshotWithTick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADOrderbookSnapshotWithTick.Marshal(b, m, deterministic)
}
func (m *ADOrderbookSnapshotWithTick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADOrderbookSnapshotWithTick.Merge(m, src)
}
func (m *ADOrderbookSnapshotWithTick) XXX_Size() int {
	return xxx_messageInfo_ADOrderbookSnapshotWithTick.Size(m)
}
func (m *ADOrderbookSnapshotWithTick) XXX_DiscardUnknown() {
	xxx_messageInfo_ADOrderbookSnapshotWithTick.DiscardUnknown(m)
}

var xxx_messageInfo_ADOrderbookSnapshotWithTick proto.InternalMessageInfo

func (m *ADOrderbookSnapshotWithTick) GetHTSCSecurityID() string {
	if m != nil {
		return m.HTSCSecurityID
	}
	return ""
}

func (m *ADOrderbookSnapshotWithTick) GetMDDate() int32 {
	if m != nil {
		return m.MDDate
	}
	return 0
}

func (m *ADOrderbookSnapshotWithTick) GetMDTime() int32 {
	if m != nil {
		return m.MDTime
	}
	return 0
}

func (m *ADOrderbookSnapshotWithTick) GetDataTimestamp() int64 {
	if m != nil {
		return m.DataTimestamp
	}
	return 0
}

func (m *ADOrderbookSnapshotWithTick) GetSecurityIDSource() ESecurityIDSource {
	if m != nil {
		return m.SecurityIDSource
	}
	return ESecurityIDSource_DefaultSecurityIDSource
}

func (m *ADOrderbookSnapshotWithTick) GetSecurityType() ESecurityType {
	if m != nil {
		return m.SecurityType
	}
	return ESecurityType_DefaultSecurityType
}

func (m *ADOrderbookSnapshotWithTick) GetExchangeDate() int32 {
	if m != nil {
		return m.ExchangeDate
	}
	return 0
}

func (m *ADOrderbookSnapshotWithTick) GetExchangeTime() int32 {
	if m != nil {
		return m.ExchangeTime
	}
	return 0
}

func (m *ADOrderbookSnapshotWithTick) GetOrderbookSnapshot() *ADOrderbookSnapshot {
	if m != nil {
		return m.OrderbookSnapshot
	}
	return nil
}

func (m *ADOrderbookSnapshotWithTick) GetMdStock() *MDStock {
	if m != nil {
		return m.MdStock
	}
	return nil
}

func init() {
	proto.RegisterType((*ADOrderbookSnapshotWithTick)(nil), "com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick")
}

func init() { proto.RegisterFile("ADOrderbookSnapshotWithTick.proto", fileDescriptor_ff8eb06279197a5b) }

var fileDescriptor_ff8eb06279197a5b = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4b, 0x4f, 0xf3, 0x30,
	0x10, 0x94, 0xbf, 0xbe, 0x3e, 0xdc, 0x87, 0xc0, 0x48, 0x60, 0xc2, 0x25, 0x2d, 0x0f, 0xe5, 0x64,
	0xa4, 0x72, 0xe6, 0x40, 0x71, 0xa5, 0x72, 0xa8, 0x00, 0x27, 0x12, 0x27, 0x0e, 0xa9, 0x63, 0x35,
	0x51, 0x49, 0x1d, 0xc5, 0xae, 0x44, 0x7f, 0x0b, 0x17, 0x7e, 0x2a, 0x8a, 0xdb, 0x40, 0xd3, 0x96,
	0xdc, 0xb2, 0xb3, 0x3b, 0xb3, 0xd9, 0xf1, 0xc0, 0xee, 0x3d, 0x7d, 0x4a, 0x03, 0x91, 0x4e, 0xa4,
	0x9c, 0xb9, 0x73, 0x3f, 0x51, 0xa1, 0xd4, 0xaf, 0x91, 0x0e, 0xbd, 0x88, 0xcf, 0x48, 0x92, 0x4a,
	0x2d, 0x91, 0xc5, 0x65, 0x4c, 0x42, 0xad, 0x38, 0x89, 0x03, 0x4e, 0xa2, 0xb9, 0x8a, 0xa6, 0xa1,
	0x26, 0xb1, 0x0c, 0xc4, 0xbb, 0x75, 0x3c, 0x74, 0x05, 0x5f, 0xa4, 0x91, 0x5e, 0x7a, 0xcb, 0x44,
	0xac, 0x08, 0xd6, 0xe9, 0x0f, 0xf8, 0x48, 0x5d, 0xb9, 0x48, 0x79, 0xde, 0x68, 0x8f, 0xa9, 0xab,
	0x65, 0x2e, 0x6c, 0x9d, 0xed, 0xd9, 0xbd, 0x6a, 0xf5, 0x3e, 0xab, 0xf0, 0xbc, 0xe4, 0xcf, 0xd0,
	0x35, 0xec, 0x8c, 0x3c, 0xf7, 0xe1, 0x77, 0x0f, 0x06, 0x36, 0x70, 0x0e, 0xd8, 0x16, 0x8a, 0x4e,
	0x60, 0x7d, 0x4c, 0xa9, 0xaf, 0x05, 0xfe, 0x67, 0x03, 0xa7, 0xc6, 0xd6, 0xd5, 0x0a, 0xf7, 0xa2,
	0x58, 0xe0, 0x4a, 0x8e, 0x67, 0x15, 0xba, 0x84, 0x6d, 0xea, 0x6b, 0x3f, 0xfb, 0x56, 0xda, 0x8f,
	0x13, 0x5c, 0xb5, 0x81, 0x53, 0x61, 0x45, 0x10, 0xbd, 0xc0, 0x43, 0xb5, 0x75, 0x21, 0xae, 0xd9,
	0xc0, 0xe9, 0xf4, 0xaf, 0x48, 0xc1, 0x2c, 0x63, 0x12, 0xd9, 0xb1, 0x83, 0xed, 0xd0, 0xd1, 0x10,
	0xb6, 0xd4, 0x86, 0x93, 0xb8, 0x6e, 0xe4, 0xba, 0xa5, 0x72, 0xd9, 0x20, 0x2b, 0xd0, 0x50, 0x0f,
	0xb6, 0x86, 0x1f, 0x3c, 0xf4, 0xe7, 0x53, 0x61, 0xae, 0x6e, 0x98, 0xeb, 0x0a, 0xd8, 0xe6, 0x8c,
	0x71, 0xe0, 0x7f, 0x71, 0xc6, 0xf8, 0xf0, 0x06, 0x8f, 0xe4, 0xb6, 0xf9, 0x18, 0xda, 0xc0, 0x69,
	0xf6, 0x6f, 0xc8, 0xdf, 0x79, 0x20, 0x7b, 0xde, 0x8c, 0xed, 0x2a, 0xa1, 0x3b, 0xd8, 0x88, 0x03,
	0x13, 0x05, 0xdc, 0x34, 0xa2, 0x17, 0x65, 0xa2, 0xeb, 0xd4, 0xb0, 0x9c, 0x33, 0xa0, 0xb0, 0x24,
	0x93, 0x83, 0xb2, 0x48, 0x3f, 0x67, 0xe9, 0x52, 0x23, 0xf0, 0x05, 0xc0, 0xa4, 0x6e, 0xa2, 0x76,
	0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xd7, 0x3b, 0xd4, 0x03, 0x03, 0x00, 0x00,
}
