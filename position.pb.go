// Code generated by protoc-gen-go.
// source: position.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	position.proto

It has these top-level messages:
	BasePosition
	BaseProfit
	FloatProfit
	CommPosition
	SumProfit
*/
package pb

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// 仓位记录basePosition
type BasePosition struct {
	Time             *int64   `protobuf:"varint,1,req" json:"Time,omitempty"`
	TraderID         *int64   `protobuf:"varint,2,req" json:"TraderID,omitempty"`
	FundAccountID    *int64   `protobuf:"varint,3,req" json:"FundAccountID,omitempty"`
	Price            *float64 `protobuf:"fixed64,4,req" json:"Price,omitempty"`
	PositionQty      *int64   `protobuf:"varint,5,req" json:"PositionQty,omitempty"`
	TradingAccountID *int64   `protobuf:"varint,6,req" json:"TradingAccountID,omitempty"`
	Code             *string  `protobuf:"bytes,7,req" json:"Code,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BasePosition) Reset()         { *m = BasePosition{} }
func (m *BasePosition) String() string { return proto.CompactTextString(m) }
func (*BasePosition) ProtoMessage()    {}

func (m *BasePosition) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *BasePosition) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *BasePosition) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *BasePosition) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *BasePosition) GetPositionQty() int64 {
	if m != nil && m.PositionQty != nil {
		return *m.PositionQty
	}
	return 0
}

func (m *BasePosition) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *BasePosition) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type BaseProfit struct {
	TraderID         *int64   `protobuf:"varint,1,req" json:"TraderID,omitempty"`
	TradingAccountID *int64   `protobuf:"varint,2,req" json:"TradingAccountID,omitempty"`
	FundAccountID    *int64   `protobuf:"varint,3,req" json:"FundAccountID,omitempty"`
	Profit           *float64 `protobuf:"fixed64,4,req" json:"Profit,omitempty"`
	Code             *string  `protobuf:"bytes,5,req" json:"Code,omitempty"`
	Qty              *int64   `protobuf:"varint,6,req" json:"Qty,omitempty"`
	TurnOver         *float64 `protobuf:"fixed64,7,req" json:"TurnOver,omitempty"`
	Fee              *float64 `protobuf:"fixed64,8,req" json:"Fee,omitempty"`
	Count            *int64   `protobuf:"varint,9,req" json:"Count,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BaseProfit) Reset()         { *m = BaseProfit{} }
func (m *BaseProfit) String() string { return proto.CompactTextString(m) }
func (*BaseProfit) ProtoMessage()    {}

func (m *BaseProfit) GetTraderID() int64 {
	if m != nil && m.TraderID != nil {
		return *m.TraderID
	}
	return 0
}

func (m *BaseProfit) GetTradingAccountID() int64 {
	if m != nil && m.TradingAccountID != nil {
		return *m.TradingAccountID
	}
	return 0
}

func (m *BaseProfit) GetFundAccountID() int64 {
	if m != nil && m.FundAccountID != nil {
		return *m.FundAccountID
	}
	return 0
}

func (m *BaseProfit) GetProfit() float64 {
	if m != nil && m.Profit != nil {
		return *m.Profit
	}
	return 0
}

func (m *BaseProfit) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *BaseProfit) GetQty() int64 {
	if m != nil && m.Qty != nil {
		return *m.Qty
	}
	return 0
}

func (m *BaseProfit) GetTurnOver() float64 {
	if m != nil && m.TurnOver != nil {
		return *m.TurnOver
	}
	return 0
}

func (m *BaseProfit) GetFee() float64 {
	if m != nil && m.Fee != nil {
		return *m.Fee
	}
	return 0
}

func (m *BaseProfit) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type FloatProfit struct {
	Position         *BasePosition `protobuf:"bytes,1,req,name=position" json:"position,omitempty"`
	FloatProfit      *float64      `protobuf:"fixed64,2,req" json:"FloatProfit,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *FloatProfit) Reset()         { *m = FloatProfit{} }
func (m *FloatProfit) String() string { return proto.CompactTextString(m) }
func (*FloatProfit) ProtoMessage()    {}

func (m *FloatProfit) GetPosition() *BasePosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *FloatProfit) GetFloatProfit() float64 {
	if m != nil && m.FloatProfit != nil {
		return *m.FloatProfit
	}
	return 0
}

type CommPosition struct {
	Time             *int64   `protobuf:"varint,1,req" json:"Time,omitempty"`
	Sym              *int64   `protobuf:"varint,2,req,name=sym" json:"sym,omitempty"`
	Price            *float64 `protobuf:"fixed64,3,req" json:"Price,omitempty"`
	PositionQty      *int64   `protobuf:"varint,4,req" json:"PositionQty,omitempty"`
	Code             *string  `protobuf:"bytes,5,req" json:"Code,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CommPosition) Reset()         { *m = CommPosition{} }
func (m *CommPosition) String() string { return proto.CompactTextString(m) }
func (*CommPosition) ProtoMessage()    {}

func (m *CommPosition) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CommPosition) GetSym() int64 {
	if m != nil && m.Sym != nil {
		return *m.Sym
	}
	return 0
}

func (m *CommPosition) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *CommPosition) GetPositionQty() int64 {
	if m != nil && m.PositionQty != nil {
		return *m.PositionQty
	}
	return 0
}

func (m *CommPosition) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type SumProfit struct {
	Sym              *int64   `protobuf:"varint,1,req,name=sym" json:"sym,omitempty"`
	Profit           *float64 `protobuf:"fixed64,2,req" json:"Profit,omitempty"`
	Fee              *float64 `protobuf:"fixed64,3,req" json:"Fee,omitempty"`
	TurnOver         *float64 `protobuf:"fixed64,4,req" json:"TurnOver,omitempty"`
	Qty              *int64   `protobuf:"varint,5,req" json:"Qty,omitempty"`
	Count            *int64   `protobuf:"varint,6,req" json:"Count,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SumProfit) Reset()         { *m = SumProfit{} }
func (m *SumProfit) String() string { return proto.CompactTextString(m) }
func (*SumProfit) ProtoMessage()    {}

func (m *SumProfit) GetSym() int64 {
	if m != nil && m.Sym != nil {
		return *m.Sym
	}
	return 0
}

func (m *SumProfit) GetProfit() float64 {
	if m != nil && m.Profit != nil {
		return *m.Profit
	}
	return 0
}

func (m *SumProfit) GetFee() float64 {
	if m != nil && m.Fee != nil {
		return *m.Fee
	}
	return 0
}

func (m *SumProfit) GetTurnOver() float64 {
	if m != nil && m.TurnOver != nil {
		return *m.TurnOver
	}
	return 0
}

func (m *SumProfit) GetQty() int64 {
	if m != nil && m.Qty != nil {
		return *m.Qty
	}
	return 0
}

func (m *SumProfit) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func init() {
}
